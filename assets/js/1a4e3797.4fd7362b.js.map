{"version":3,"file":"assets/js/1a4e3797.4fd7362b.js","mappings":";gPAaMA,EAA4C,CAChD,OACA,MACA,MACA,MACA,OACA,SAEF,SAASC,EACPC,GAEA,OAAOF,EAAmBG,QAAO,SAACC,GAAE,OAAKF,EAAYG,SAASD,EAAG,GACnE,CASA,IAAME,EAAwC,CAC5CC,OAAQ,KACRL,YAAaD,EAAgB,CAAC,MAAO,UACrCO,OAAQ,SAACC,GAAK,OAAgB,IAAVA,EAAc,MAAQ,OAAO,GA8BnD,SAASC,IACP,IACSC,GACLC,EAAAA,EAAAA,KADFC,KAAOF,cAET,OAAOG,EAAAA,EAAAA,UAAQ,WACb,IACE,OAjC2BP,EAiCII,EAhC7BI,EAAc,IAAIC,KAAKC,YAAYV,GAClC,CACLA,OAAAA,EACAL,YAAaD,EACXc,EAAYG,kBAAkBC,kBAEhCX,OAAQ,SAACC,GAAK,OAAKM,EAAYP,OAAOC,EAAM,EA0BI,CAC9C,MAAOW,GAKP,OAJAC,QAAQC,MAAM,8CAA8CX,EAAa,iFAErES,EAAcG,QAAO,MAElBjB,CAAmB,CAvChC,IAAiCC,EACzBQ,CAwCN,GAAG,CAACJ,GACN,CAiCO,SAASa,IAUd,IAAMC,EAAmBf,IACzB,MAAO,CACLgB,cAAe,SAACjB,EAAekB,GAAsB,OA3CzD,SACEA,EACAlB,EACAmB,GAEA,IACMC,EAAQF,EAAeG,MADX,KAGlB,GAAqB,IAAjBD,EAAME,OACR,OAAOF,EAAM,GAEXA,EAAME,OAASH,EAAkB1B,YAAY6B,QAC/CV,QAAQC,MAAM,cACEM,EAAkBrB,OAAM,kBACpCqB,EAAkB1B,YAAY6B,OAChC,+BAA+BH,EAAkB1B,YAAY8B,KAC3D,KACD,+BAA+BH,EAAME,OAAM,KAAKJ,GAGrD,IAAMM,EAAaL,EAAkBpB,OAAOC,GACtCyB,EAAkBN,EAAkB1B,YAAYiC,QAAQF,GAG9D,OAAOJ,EAAMO,KAAKC,IAAIH,EAAiBL,EAAME,OAAS,GACxD,CAmBMO,CAAoBX,EAAgBlB,EAAOgB,EAAiB,EAElE,oFCjIA,SAAgB,iBAAmB,wBAAwB,mBAAqB,0BAA0B,oBAAsB,2BAA2B,YAAc,mBAAmB,oBAAsB,2BAA2B,iBAAmB,wBAAwB,wBAA0B,+BAA+B,qBAAuB,4BAA4B,wBAA0B,+BAA+B,kBAAoB,yBAAyB,oBAAsB,2BAA2B,iBAAmB,wBAAwB,eAAiB,sBAAsB,eAAe,oBAAoB,OAAS,eCyEzpB,SAASc,EAAuBC,GAA+B,IAA7BC,EAAyBD,EAAzBC,0BAC1BC,EAAyBC,OAAOC,QACpCH,EAA0BI,aAGzB1C,QAAO,SAAA2C,GAAY,OAAAA,EAAA,GAAeC,SAAShB,OAAS,CAAC,IACxD,OACEiB,EAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GACT,MACA,SACA,qBACAC,EAAOC,sBAERV,EAAuBW,KAAI,SAAAC,GAA2B,IAAzBC,EAAQD,EAAA,GAAEE,EAAQF,EAAA,GACxCG,EACJf,EAAuBX,OAAS,EAAOwB,EAAQ,KAAO,GACxD,OACEP,EAAAA,cAAA,UACEU,IAAKH,EACLI,SAAU,SAACC,GAAC,OACVnB,EAA0BoB,iBACxBN,EACAK,EAAEE,OAAOC,MACV,EAEHC,aAAcvB,EAA0BwB,eAAeV,GACvDN,UAAWE,EAAOe,oBACjBV,EAAST,SAASM,KAAI,SAACc,EAASC,GAAC,OAChCpB,EAAAA,cAAA,UACEU,IAAKU,EACLC,MAAK,GAAKZ,EAAcU,EAAQE,MAChCN,MAAOI,EAAQG,MACf,IAIV,IAGN,CACA,SAASC,IACP,IApFO7C,EAgBDmB,EAGN2B,EAAOP,EAAgBQ,EAYjBC,EAsDG/D,GACLC,EAAAA,EAAAA,KADFC,KAAOF,cAIkBgE,GAAvBC,EAAAA,EAAAA,KADFC,QAAUC,EAAKH,EAALG,MAAOC,EAAMJ,EAANI,OAAQC,EAASL,EAATK,UAErBC,GAAyBC,EAAAA,EAAAA,KACzBC,GA3FCzD,EAAiBF,IAAjBE,cACA,SAACjB,GAAK,OACXiB,EACEjB,GACA2E,EAAAA,EAAAA,GACE,CACEC,GAAI,0CACJC,YACE,qNACF/D,QAAS,8CAEX,CAACd,MAAAA,IAEH,GA+EEgC,GA5EAI,GAAc0C,EAAAA,EAAAA,MAGpBf,GAA4CgB,EAAAA,EAAAA,WAAS,kBACnD7C,OAAOC,QAAQC,GAAa4C,QAC1B,SAACC,EAAGC,GAAA,IAAAC,EAAGrC,EAAQoC,EAAA,GAAEE,EAAUF,EAAA,UAAAhD,OAAAmD,OAAA,GACtBJ,IAAGE,EAAA,IACLrC,GAAWsC,EAAW9C,SAAS,GAAGuB,KAAIsB,GAAA,GAEzC,CAAC,EACF,IAPI3B,EAAcO,EAAA,GAAEC,EAAiBD,EAAA,GAYlCE,EAAoB/B,OAAOoD,OAAOlD,GAAamD,MACnD,SAACxC,GAAQ,OAAKA,EAAST,SAAShB,OAAS,CAAC,IAErC,CACLc,YAAAA,EACA6B,kBAAAA,EACAT,eAAAA,EACAJ,iBATuB,SAACN,EAAU0C,GAAa,OAC/CxB,GAAkB,SAACyB,GAAC,IAAAC,EAAA,OAAAxD,OAAAmD,OAAA,GAAUI,IAACC,EAAA,IAAG5C,GAAW0C,EAAaE,GAAA,GAAI,IA+DhEC,GAAsCC,EAAAA,EAAAA,KAA/BC,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,EAA2B,CAC/BC,MAAO,GACPC,MAAO,KACPC,aAAc,KACdC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,QAAS,MAEXC,GAAyDC,EAAAA,EAAAA,aACvD,SAACC,EAAWC,GACV,OAAQA,EAAKC,MACX,IAAK,QACH,OAAOZ,EAET,IAAK,UACH,OAAA7D,OAAAmD,OAAA,GAAWoB,EAAU,CAACH,SAAS,IAEjC,IAAK,SACH,OAAIT,IAAgBa,EAAKpD,MAAM2C,MACtBQ,EAETvE,OAAAmD,OAAA,GACKqB,EAAKpD,MAAM,CACd0C,MAC0B,IAAxBU,EAAKpD,MAAM8C,SACPM,EAAKpD,MAAM0C,MACXS,EAAUT,MAAMY,OAAOF,EAAKpD,MAAM0C,SAG5C,IAAK,UACH,IAAMK,EAAUI,EAAUN,WAAaM,EAAUL,SAAW,EAC5D,OAAAlE,OAAAmD,OAAA,GACKoB,EAAU,CACbL,SAAUC,EAAUI,EAAUL,SAAW,EAAIK,EAAUL,SACvDC,QAAAA,IAGJ,QACE,OAAOI,EAEb,GACAV,GAjCKc,EAAiBN,EAAA,GAAEO,EAA2BP,EAAA,GAmC/CQ,EAAgBC,IAAc3C,EAAOC,GACrC2C,EAAgBC,IAAoBH,EAAexC,EAAW,CAClE4C,YAAa,GACbC,gBAAgB,EAChBC,kBAAmB,CAAC,WAAY,oBAElCJ,EAAcK,GACZ,UACA,SAAAC,GAAsD,IAADC,EAAAD,EAAnDE,QAAUxB,EAAKuB,EAALvB,MAAOyB,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QACrC,GAAc,KAAV5B,GAAiB6B,MAAMC,QAAQL,GAAnC,CAIA,IAAMM,EAAgB,SAAC1E,GAAK,OAC1BA,EAAM2E,QACJ,2CACA,sBACA,EACEjC,EAAQ0B,EAAK9E,KACjB,SAAAsF,GAIO,IAHLC,EAAGD,EAAHC,IACmBC,EAASF,EAA5BG,iBAAmBD,UAASE,EAAAJ,EAC5BK,eAAgBC,OAAO,IAAAF,EAAG,CAAC,EAACA,EAEtBG,EAASvG,OAAOwG,KAAKN,GAAWxF,KAAI,SAACK,GAAG,OAC5C+E,EAAcI,EAAUnF,GAAKK,MAAM,IAErC,MAAO,CACLqF,MAAOF,EAAOG,MACdT,IAAK3D,EAAuB2D,GAC5BU,QAASL,EAAQM,QACVd,EAAcQ,EAAQM,QAAQxF,OAAM,MACvC,GACJyF,YAAaN,EAEjB,IAEF3B,EAA4B,CAC1BH,KAAM,SACNrD,MAAO,CACL0C,MAAAA,EACAC,MAAAA,EACAC,aAAc0B,EACdzB,WAAY0B,EACZzB,SAAUuB,EACVtB,QAASwB,EAAUF,EAAO,EAC1BrB,SAAS,IAlCb,MAFEQ,EAA4B,CAACH,KAAM,SAuCvC,IAEF,IAAAqC,GAAkCjE,EAAAA,EAAAA,UAAS,MAApCkE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAQC,EAAAA,EAAAA,QAAO,GACfC,GAAWD,EAAAA,EAAAA,QACfE,EAAAA,EAAqBC,4BACnB,IAAIC,sBACF,SAACrH,GACC,IAAAsH,EAGItH,EAAQ,GAFVuH,EAAcD,EAAdC,eACwBC,EAAQF,EAAhCG,mBAAqBC,EAEnBH,GAAkBP,EAAMW,QAAUH,GACpC7C,EAA4B,CAACH,KAAM,YAErCwC,EAAMW,QAAUH,CAClB,GACA,CAACI,UAAW,KAGZC,EAAW,WAAH,OACZnE,GACIlB,EAAAA,EAAAA,GACE,CACEC,GAAI,wCACJ9D,QAAS,+BACT+D,YAAa,6CAEf,CACEoB,MAAOJ,KAGXlB,EAAAA,EAAAA,GAAU,CACRC,GAAI,qCACJ9D,QAAS,2BACT+D,YAAa,yCACZ,EACHoF,GAAaC,EAAAA,EAAAA,KAAS,SAACvC,QAAI,IAAJA,IAAAA,EAAO,GAClCV,EAAckD,8BAA8B,iBAAkB,WAC9DlD,EAAckD,8BAA8B,WAAYjK,GACxDgC,OAAOC,QAAQH,EAA0BwB,gBAAgB4G,SACvD,SAAAC,GAAgC,IAA9BvH,EAAQuH,EAAA,GAAE7E,EAAa6E,EAAA,GACvBpD,EAAckD,8BACZ,iBAAiB,QACTrH,EAAQ,IAAI0C,EAExB,IAEFyB,EAAcqD,SAASzE,GAAa0E,QAAQ5C,GAAM6C,QACpD,IA2BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,GAAKxB,EAAL,CAGA,IAAMyB,EAAkBrB,EAASS,QACjC,OAAIY,GACFA,EAAgBC,QAAQ1B,GACjB,kBAAMyB,EAAgBE,UAAU3B,EAAW,GAE7C,kBAAM,CAAK,CANlB,CAOF,GAAG,CAACA,KACJwB,EAAAA,EAAAA,YAAU,WACR3D,EAA4B,CAACH,KAAM,UAC/Bd,IACFiB,EAA4B,CAACH,KAAM,YACnCkE,YAAW,WACTZ,GACF,GAAG,KAEP,GAAG,CAACpE,EAAa7D,EAA0BwB,eAAgByG,KAC3DQ,EAAAA,EAAAA,YAAU,WACH5D,EAAkBT,UAA2C,IAA/BS,EAAkBT,UAGrD6D,EAAWpD,EAAkBT,SAC/B,GAAG,CAAC6D,EAAYpD,EAAkBT,WAEhC7D,EAAAA,cAACuI,EAAAA,EAAM,KACLvI,EAAAA,cAACwI,EAAAA,EAAI,KACHxI,EAAAA,cAAA,cAAQyI,EAAAA,EAAAA,GAAkBhB,MAK1BzH,EAAAA,cAAA,QAAM0I,SAAS,SAASnC,QAAQ,qBAGlCvG,EAAAA,cAAA,OAAKC,UAAU,6BACbD,EAAAA,cAAA,UAAKyH,KAELzH,EAAAA,cAAA,QAAMC,UAAU,MAAM0I,SAAU,SAAC/H,GAAC,OAAKA,EAAEgI,gBAAgB,GACvD5I,EAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GAAK,MAAOC,EAAO0I,kBAAmB,CAC/C,SAAUpJ,EAA0BiC,kBACpC,WAAYjC,EAA0BiC,qBAExC1B,EAAAA,cAAA,SACEoE,KAAK,SACL9C,KAAK,IACLrB,UAAWE,EAAO2I,iBAClBC,aAAa3G,EAAAA,EAAAA,GAAU,CACrBC,GAAI,oCACJ9D,QAAS,wBACT+D,YAAa,0CAEf,cAAYF,EAAAA,EAAAA,GAAU,CACpBC,GAAI,8BACJ9D,QAAS,SACT+D,YAAa,yCAEf3B,SAAU,SAACC,GAAC,OAAK2C,EAAe3C,EAAEE,OAAOC,MAAM,EAC/CA,MAAOuC,EACP0F,aAAa,MACbC,WAAS,KAIZxJ,EAA0BiC,mBACzB1B,EAAAA,cAACT,EAAuB,CACtBE,0BAA2BA,KAKjCO,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GAAK,MAAO,SAAUC,EAAO+I,wBACxC5E,EAAkBX,cACnBxB,EAAqBmC,EAAkBX,eAG3C3D,EAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GACT,MACA,SACA,cACAC,EAAOgJ,mBAETnJ,EAAAA,cAAA,KACEc,OAAO,SACPsI,IAAI,sBACJC,KAAK,2BACL,cAAYjH,EAAAA,EAAAA,GAAU,CACpBC,GAAI,gCACJ9D,QAAS,oBACT+D,YAAa,wCAEftC,EAAAA,cAAA,OAAKsJ,QAAQ,aAAarJ,UAAWE,EAAOoJ,aAC1CvJ,EAAAA,cAAA,KAAGwJ,KAAK,QACNxJ,EAAAA,cAAA,QACEC,UAAWE,EAAOsJ,oBAClBC,EAAE,8uNAEJ1J,EAAAA,cAAA,QACEwJ,KAAK,UACLE,EAAE,iKAEJ1J,EAAAA,cAAA,QACEwJ,KAAK,QACLE,EAAE,qtBAQbpF,EAAkBb,MAAM1E,OAAS,EAChCiB,EAAAA,cAAA,YACGsE,EAAkBb,MAAMpD,KACvB,SAAAsJ,EAAqCvI,GAAC,IAApCgF,EAAKuD,EAALvD,MAAOR,EAAG+D,EAAH/D,IAAKU,EAAOqD,EAAPrD,QAASE,EAAWmD,EAAXnD,YAAW,OAChCxG,EAAAA,cAAA,WAASU,IAAKU,EAAGnB,UAAWE,EAAOyJ,kBACjC5J,EAAAA,cAAA,MAAIC,UAAWE,EAAO0J,yBACpB7J,EAAAA,cAAC8J,EAAAA,EAAI,CAACC,GAAInE,EAAKoE,wBAAyB,CAACC,OAAQ7D,MAGlDI,EAAYzH,OAAS,GACpBiB,EAAAA,cAAA,OAAK,aAAW,eACdA,EAAAA,cAAA,MACEC,WAAWC,EAAAA,EAAAA,GACT,cACAC,EAAO+J,uBAER1D,EAAYnG,KAAI,SAAC8J,EAAMC,GAAK,OAC3BpK,EAAAA,cAAA,MACEU,IAAK0J,EACLnK,UAAU,oBAGV+J,wBAAyB,CAACC,OAAQE,IAClC,MAMT7D,GACCtG,EAAAA,cAAA,KACEC,UAAWE,EAAOkK,wBAGlBL,wBAAyB,CAACC,OAAQ3D,KAG9B,KAKhB,CACEhD,IAAgBgB,EAAkBP,SAChC/D,EAAAA,cAAA,KAAGU,IAAI,cACLV,EAAAA,cAACsK,EAAAA,EAAS,CACRjI,GAAG,iCACHC,YAAY,yCAAwC,4BAKxDgC,EAAkBP,SAClB/D,EAAAA,cAAA,OAAKU,IAAI,UAAUT,UAAWE,EAAOoK,kBAK1CjG,EAAkBR,SACjB9D,EAAAA,cAAA,OAAKC,UAAWE,EAAOqK,OAAQC,IAAK9D,GAClC3G,EAAAA,cAACsK,EAAAA,EAAS,CACRjI,GAAG,sCACHC,YAAY,iDAAgD,6BAQ1E,CACe,SAASoI,IACtB,OACE1K,EAAAA,cAAC2K,EAAAA,GAAqB,CAAC1K,UAAU,uBAC/BD,EAAAA,cAACuB,EAAiB,MAGxB,YCzbA,SAASqJ,IACPC,KAAKC,QAAUD,KAAKC,SAAW,CAAC,EAChCD,KAAKE,cAAgBF,KAAKE,oBAAiBC,CAC7C,CAuQA,SAASC,EAAWC,GAClB,MAAsB,mBAARA,CAChB,CAMA,SAASC,EAASD,GAChB,MAAsB,iBAARA,GAA4B,OAARA,CACpC,CAEA,SAASE,EAAYF,GACnB,YAAe,IAARA,CACT,CApRAG,EAAOC,QAAUV,EAKjBA,EAAaW,UAAUT,aAAUE,EACjCJ,EAAaW,UAAUR,mBAAgBC,EAIvCJ,EAAaY,oBAAsB,GAInCZ,EAAaW,UAAUE,gBAAkB,SAASC,GAChD,GA4PsB,iBA5PRA,GAAMA,EAAI,GAAKC,MAAMD,GACjC,MAAME,UAAU,+BAElB,OADAf,KAAKE,cAAgBW,EACdb,IACT,EAEAD,EAAaW,UAAUM,KAAO,SAASzH,GACrC,IAAI0H,EAAIC,EAASC,EAAKC,EAAM7K,EAAG8K,EAM/B,GAJKrB,KAAKC,UACRD,KAAKC,QAAU,CAAC,GAGL,UAAT1G,KACGyG,KAAKC,QAAQxM,OACb6M,EAASN,KAAKC,QAAQxM,SAAWuM,KAAKC,QAAQxM,MAAMS,QAAS,CAEhE,IADA+M,EAAKK,UAAU,cACGC,MAChB,MAAMN,EAGN,IAAI1N,EAAM,IAAIgO,MAAM,yCAA2CN,EAAK,KAEpE,MADA1N,EAAIiO,QAAUP,EACR1N,CAEV,CAKF,GAAIgN,EAFJW,EAAUlB,KAAKC,QAAQ1G,IAGrB,OAAO,EAET,GAAI6G,EAAWc,GACb,OAAQI,UAAUpN,QAEhB,KAAK,EACHgN,EAAQO,KAAKzB,MACb,MACF,KAAK,EACHkB,EAAQO,KAAKzB,KAAMsB,UAAU,IAC7B,MACF,KAAK,EACHJ,EAAQO,KAAKzB,KAAMsB,UAAU,GAAIA,UAAU,IAC3C,MAEF,QACEF,EAAO1G,MAAMgG,UAAUgB,MAAMD,KAAKH,UAAW,GAC7CJ,EAAQS,MAAM3B,KAAMoB,QAEnB,GAAId,EAASY,GAIlB,IAHAE,EAAO1G,MAAMgG,UAAUgB,MAAMD,KAAKH,UAAW,GAE7CH,GADAE,EAAYH,EAAQQ,SACJxN,OACXqC,EAAI,EAAGA,EAAI4K,EAAK5K,IACnB8K,EAAU9K,GAAGoL,MAAM3B,KAAMoB,GAG7B,OAAO,CACT,EAEArB,EAAaW,UAAUkB,YAAc,SAASrI,EAAMsI,GAClD,IAAIC,EAEJ,IAAK1B,EAAWyB,GACd,MAAMd,UAAU,+BA2ClB,OAzCKf,KAAKC,UACRD,KAAKC,QAAU,CAAC,GAIdD,KAAKC,QAAQ8B,aACf/B,KAAKgB,KAAK,cAAezH,EACf6G,EAAWyB,EAASA,UACpBA,EAASA,SAAWA,GAE3B7B,KAAKC,QAAQ1G,GAGT+G,EAASN,KAAKC,QAAQ1G,IAE7ByG,KAAKC,QAAQ1G,GAAMyI,KAAKH,GAGxB7B,KAAKC,QAAQ1G,GAAQ,CAACyG,KAAKC,QAAQ1G,GAAOsI,GAN1C7B,KAAKC,QAAQ1G,GAAQsI,EASnBvB,EAASN,KAAKC,QAAQ1G,MAAWyG,KAAKC,QAAQ1G,GAAM0I,SAIpDH,EAHGvB,EAAYP,KAAKE,eAGhBH,EAAaY,oBAFbX,KAAKE,gBAKF4B,EAAI,GAAK9B,KAAKC,QAAQ1G,GAAMrF,OAAS4N,IAC5C9B,KAAKC,QAAQ1G,GAAM0I,QAAS,EAC5BzO,QAAQC,MAAM,mIAGAuM,KAAKC,QAAQ1G,GAAMrF,QACJ,mBAAlBV,QAAQ0O,OAEjB1O,QAAQ0O,SAKPlC,IACT,EAEAD,EAAaW,UAAUxG,GAAK6F,EAAaW,UAAUkB,YAEnD7B,EAAaW,UAAUyB,KAAO,SAAS5I,EAAMsI,GAC3C,IAAKzB,EAAWyB,GACd,MAAMd,UAAU,+BAElB,IAAIqB,GAAQ,EAEZ,SAASC,IACPrC,KAAKsC,eAAe/I,EAAM8I,GAErBD,IACHA,GAAQ,EACRP,EAASF,MAAM3B,KAAMsB,WAEzB,CAKA,OAHAe,EAAER,SAAWA,EACb7B,KAAK9F,GAAGX,EAAM8I,GAEPrC,IACT,EAGAD,EAAaW,UAAU4B,eAAiB,SAAS/I,EAAMsI,GACrD,IAAIU,EAAMC,EAAUtO,EAAQqC,EAE5B,IAAK6J,EAAWyB,GACd,MAAMd,UAAU,+BAElB,IAAKf,KAAKC,UAAYD,KAAKC,QAAQ1G,GACjC,OAAOyG,KAMT,GAHA9L,GADAqO,EAAOvC,KAAKC,QAAQ1G,IACNrF,OACdsO,GAAY,EAERD,IAASV,GACRzB,EAAWmC,EAAKV,WAAaU,EAAKV,WAAaA,SAC3C7B,KAAKC,QAAQ1G,GAChByG,KAAKC,QAAQqC,gBACftC,KAAKgB,KAAK,iBAAkBzH,EAAMsI,QAE/B,GAAIvB,EAASiC,GAAO,CACzB,IAAKhM,EAAIrC,EAAQqC,KAAM,GACrB,GAAIgM,EAAKhM,KAAOsL,GACXU,EAAKhM,GAAGsL,UAAYU,EAAKhM,GAAGsL,WAAaA,EAAW,CACvDW,EAAWjM,EACX,KACF,CAGF,GAAIiM,EAAW,EACb,OAAOxC,KAEW,IAAhBuC,EAAKrO,QACPqO,EAAKrO,OAAS,SACP8L,KAAKC,QAAQ1G,IAEpBgJ,EAAKE,OAAOD,EAAU,GAGpBxC,KAAKC,QAAQqC,gBACftC,KAAKgB,KAAK,iBAAkBzH,EAAMsI,EACtC,CAEA,OAAO7B,IACT,EAEAD,EAAaW,UAAUgC,mBAAqB,SAASnJ,GACnD,IAAI1D,EAAKwL,EAET,IAAKrB,KAAKC,QACR,OAAOD,KAGT,IAAKA,KAAKC,QAAQqC,eAKhB,OAJyB,IAArBhB,UAAUpN,OACZ8L,KAAKC,QAAU,CAAC,EACTD,KAAKC,QAAQ1G,WACbyG,KAAKC,QAAQ1G,GACfyG,KAIT,GAAyB,IAArBsB,UAAUpN,OAAc,CAC1B,IAAK2B,KAAOmK,KAAKC,QACH,mBAARpK,GACJmK,KAAK0C,mBAAmB7M,GAI1B,OAFAmK,KAAK0C,mBAAmB,kBACxB1C,KAAKC,QAAU,CAAC,EACTD,IACT,CAIA,GAAII,EAFJiB,EAAYrB,KAAKC,QAAQ1G,IAGvByG,KAAKsC,eAAe/I,EAAM8H,QACrB,GAAIA,EAET,KAAOA,EAAUnN,QACf8L,KAAKsC,eAAe/I,EAAM8H,EAAUA,EAAUnN,OAAS,IAI3D,cAFO8L,KAAKC,QAAQ1G,GAEbyG,IACT,EAEAD,EAAaW,UAAUW,UAAY,SAAS9H,GAQ1C,OANKyG,KAAKC,SAAYD,KAAKC,QAAQ1G,GAE1B6G,EAAWJ,KAAKC,QAAQ1G,IACzB,CAACyG,KAAKC,QAAQ1G,IAEdyG,KAAKC,QAAQ1G,GAAMmI,QAJnB,EAMV,EAEA3B,EAAaW,UAAUiC,cAAgB,SAASpJ,GAC9C,GAAIyG,KAAKC,QAAS,CAChB,IAAI2C,EAAa5C,KAAKC,QAAQ1G,GAE9B,GAAI6G,EAAWwC,GACb,OAAO,EACJ,GAAIA,EACP,OAAOA,EAAW1O,MACtB,CACA,OAAO,CACT,EAEA6L,EAAa4C,cAAgB,SAASE,EAAStJ,GAC7C,OAAOsJ,EAAQF,cAAcpJ,EAC/B,+BC3RA,IAAIuJ,EAAsB,EAAQ,KAC9BC,EAAmB,EAAQ,MAC3BC,EAAgB,EAAQ,MAiC5B,SAASC,EAAoBC,EAAQ3D,EAAO4D,GAC1C,OAAO,IAAIL,EAAoBI,EAAQ3D,EAAO4D,EAChD,CAOAF,EAAoB3M,QAAU,EAAQ,KAOtC2M,EAAoBH,oBAAsBA,EAO1CG,EAAoBF,iBAAmBA,EAOvCE,EAAoBD,cAAgBA,EAEpCxC,EAAOC,QAAUwC,+BCnEjB,IAAIlD,EAAe,EAAQ,MAgB3B,SAASqD,EAAcC,EAAYC,GACjCtD,KAAKuD,KAAOF,EACZrD,KAAKsD,GAAKA,EACVtD,KAAKwD,YAAc,IACrB,CAlBe,EAAQ,KAoBvBC,CAASL,EAAerD,GAOxBqD,EAAc1C,UAAUgD,OAAS,WAC/B1D,KAAK0C,qBACL1C,KAAKuD,KAAKI,oBAAoB3D,KAChC,EAEAoD,EAAc1C,UAAUkD,iBAAmB,SAAUC,GACnD,OAAO7D,KAAKsD,GAAGO,EACjB,EAEArD,EAAOC,QAAU2C,+BC1BjB,IAAIU,EAAe,EAAQ,MACvBC,EAAgB,EAAQ,MACxBC,EAAO,EAAQ,MAEfC,EAAM,CAQRC,cAAe,SAAuBC,EAAgBC,EAAWlO,GAC/D,GAAI+N,EAAII,UAAUF,EAAgBC,EAAWlO,GAC3C,OAAOiO,EAGT,IAAIG,EAAgB,GAAKpO,EAErBqO,EAAmBJ,EAAeC,GAElCD,EAAeC,GAAW5K,OAAO8K,GADjC,CAACA,GAGDE,EAAM,CAAC,EAIX,OAFAA,EAAIJ,GAAaG,EAEVT,EAAa,CAAC,EAAGU,EAAKL,EAC/B,EAUAM,iBAAkB,SAChBN,EACAC,EACAlO,GAEA,QAAciK,IAAVjK,EAGF,OAAO+N,EAAIS,gBAAgBP,GAAgB,SAAUQ,EAAGC,GACtD,OAAOR,IAAcQ,CACvB,IAGF,IAAIN,EAAgB,GAAKpO,EAEzB,OAAO+N,EAAIS,gBAAgBP,GAAgB,SAAUQ,EAAGC,GACtD,OAAOR,IAAcQ,GAAKN,IAAkBK,CAC9C,GACF,EAQAE,iBAAkB,SAChBV,EACAC,EACAlO,GAEA,QAAciK,IAAVjK,EACF,MAAM,IAAIqL,MAAM,gDAElB,OAAI0C,EAAII,UAAUF,EAAgBC,EAAWlO,GACpC+N,EAAIQ,iBAAiBN,EAAgBC,EAAWlO,GAGlD+N,EAAIC,cAAcC,EAAgBC,EAAWlO,EACtD,EAYAwO,gBAAiB,SACfP,EACAC,EACAU,GAEA,QAAkB3E,IAAdiE,EAGF,OAAKL,EAAcI,GAGZ,CAAC,EAFCA,EAGJ,GAAyB,iBAAdC,EAChB,OAAOJ,EAAKG,EAAgB,CAACC,IACxB,GAAyB,mBAAdA,EAA0B,CAC1C,IAAIW,GAAa,EAEbC,EAAoBlQ,OAAOwG,KAAK6I,GAAgBvM,QAAO,SACzDqN,EACApP,GAEA,IAAIqC,EAASiM,EAAetO,IAAQ,GAChCqP,EAAYhN,EAAO5F,QAAO,SAAU4D,GACtC,OAAQkO,EAAUlO,EAAOL,EAAKiP,EAChC,IAQA,OANII,EAAUhR,SAAWgE,EAAOhE,SAC9B6Q,GAAa,GAGfE,EAAKpP,GAAOqP,EAELD,CACT,GACA,CAAC,GAED,OAAIF,EAAmBC,EAChBb,CACT,CAKF,EAUAE,UAAW,SAAmBF,EAAgBC,EAAWe,GACvD,IAAIC,EACFC,QAAQlB,EAAeC,KACvBD,EAAeC,GAAWlQ,OAAS,EAErC,QAAwBiM,IAApBgF,IAAkCC,EACpC,OAAOA,EAGT,IAAIE,EAA0B,GAAKH,EAEnC,OAAuE,IAAhEhB,EAAeC,GAAW9P,QAAQgR,EAC3C,GAGF9E,EAAOC,QAAUwD,+BCzKjB,IAAIH,EAAe,EAAQ,MACvByB,EAAO,EAAQ,KACfC,EAAe,EAAQ,MACvBC,EAAQ,EAAQ,KAChB1B,EAAgB,EAAQ,MACxBC,EAAO,EAAQ,MACf0B,EAAc,EAAQ,MACtBC,EAAmB,EAAQ,MAE3BC,EAAiB,EAAQ,MAY7B,SAASC,EAAyBC,EAAGC,GACnC,OAAIrL,MAAMC,QAAQmL,IAAMpL,MAAMC,QAAQoL,GAElCD,EAAE5R,SAAW6R,EAAE7R,QACf4R,EAAEE,OAAM,SAAUC,EAAI1P,GACpB,OAAOsP,EAAyBE,EAAExP,GAAI0P,EACxC,IAGGH,IAAMC,CACf,CA+DA,SAAShD,EAAiBmD,GACxB,IAAIC,EAASD,EACTnD,EAAiBqD,cAAcF,GAC/B,CAAC,OAEoB/F,IAArBgG,EAAOE,WAA4BV,EAAiBQ,EAAOE,YAE7D7S,QAAQ8S,KACN,mIASJtG,KAAKuG,OAASJ,EAAOI,QAAU,GAO/BvG,KAAK/F,kBAAoBkM,EAAOlM,mBAAqB,GASrD+F,KAAKwG,mBAAqBL,EAAOK,oBAAsB,GAevDxG,KAAKyG,kBAAoBN,EAAOM,mBAAqB,CAAC,EAatDzG,KAAK0G,eAAiBP,EAAOO,gBAAkB,CAAC,EAahD1G,KAAK2G,6BAA+BR,EAAOQ,8BAAgC,CAAC,EAY5E3G,KAAK4G,mBAAqBT,EAAOS,oBAAsB,CAAC,EAQxD5G,KAAK6G,eAAiBV,EAAOU,gBAAkB,GAe/C7G,KAAK8G,8BACHX,EAAOW,+BAAiC,CAAC,EAG3C,IAAIC,EAAO/G,KACXlL,OAAOwG,KAAK6K,GAAQnJ,SAAQ,SAAUgK,GACpC,IAAIC,GAAiE,IAApDlE,EAAiBmE,WAAW5S,QAAQ0S,GACjDG,OAAuChH,IAAtBgG,EAAOa,IAEvBC,GAAcE,IACjBJ,EAAKC,GAAab,EAAOa,GAE7B,GACF,CAOAjE,EAAiBmE,WAAapS,OAAOwG,KAAK,IAAIyH,GAO9CA,EAAiBqD,cAAgB,SAAUgB,GAEzC,GAAIA,aAAwBrE,EAAkB,OAAOqE,EAErD,IAAIC,EAAU,CAAC,EAwCf,GAtCiB,CACf,kBACA,eACA,iBACA,uBACA,sBACA,OACA,oBACA,WACA,sBACA,cACA,gBAGSrK,SAAQ,SAAUsK,GAC3B,IAAIpR,EAAQkR,EAAaE,GACzB,GAAqB,iBAAVpR,EAAoB,CAC7B,IAAIqR,EAAcC,WAAWtR,GAE7BmR,EAAQC,GAAKxG,MAAMyG,GAAerR,EAAQqR,CAC5C,CACF,IAII7M,MAAMC,QAAQyM,EAAaK,qBAC7BJ,EAAQI,kBAAoBL,EAAaK,kBAAkBjS,KAAI,SAC7DkS,GAEA,OAAIhN,MAAMC,QAAQ+M,GACTA,EAAQlS,KAAI,SAAUU,GAC3B,OAAOsR,WAAWtR,EACpB,IAEKwR,CACT,KAGEN,EAAaR,mBAAoB,CACnC,IAAIA,EAAqB,CAAC,EAC1B9R,OAAOwG,KAAK8L,EAAaR,oBAAoB5J,SAAQ,SAAUoH,GAC7D,IAAIuD,EAAYP,EAAaR,mBAAmBxC,IAAc,CAAC,EAC/DwC,EAAmBxC,GAAa,CAAC,EACjCtP,OAAOwG,KAAKqM,GAAW3K,SAAQ,SAAU4K,GACvC,IACIC,EADSF,EAAUC,GACGpS,KAAI,SAAUmP,GACtC,OAAIjK,MAAMC,QAAQgK,GACTA,EAAEnP,KAAI,SAAUsS,GACrB,MAAsB,iBAAXA,EACFN,WAAWM,GAEbA,CACT,IACsB,iBAANnD,EACT6C,WAAW7C,GAEbA,CACT,IACAiC,EAAmBxC,GAAWwD,GAAYC,CAC5C,GACF,IACAR,EAAQT,mBAAqBA,CAC/B,CAEA,OAAOnB,EAAM,CAAC,EAAG2B,EAAcC,EACjC,EAQAtE,EAAiBgF,KAAO,SAA8B7B,GACpD,IAAI8B,EAAW,IAAIjF,EAAiBmD,GAyBpC,OAvByBA,EAAcM,oBAAsB,IAC1CxJ,SAAQ,SAAUiL,GACnC,GAAIA,EAAMC,SAAU,CAClB,IAAIC,EAAoBH,EAASI,0BAA0BH,EAAMxR,MAG/D0R,EAAkBjU,OAAS,GACsB,IAAjDiU,EAAkB,GAAG7T,QAAQ2T,EAAMC,YAEnCF,EAAWA,EAASK,iBAAiBJ,EAAMxR,OAKZ,KADjC0R,EAAoBH,EAASI,0BAA0BH,EAAMxR,OACvCvC,SACpB8T,EAAWA,EAASM,kCAClBL,EAAMxR,KACNwR,EAAMC,UAGZ,CACF,IAEOF,CACT,EAQAjF,EAAiBwF,SAAW,SAAUC,EAAc3E,GAClD,IAAIsC,EAAStC,GAAc,CAAC,EAE5B,OACE2E,EAAaC,YACbtC,EAAOU,gBACPV,EAAOU,eAAe3S,OAAS,EAExB,IAAIqN,MACT,qLAKAiH,EAAa3B,eAAe3S,OAAS,GAAKiS,EAAOsC,WAC5C,IAAIlH,MACT,oKAMFiH,EAAaE,gBACbvC,EAAOS,oBACP7C,EAAcoC,EAAOS,oBAEd,IAAIrF,MACT,+KAMAwC,EAAcyE,EAAa5B,qBAAuBT,EAAOuC,eACpD,IAAInH,MACT,+KAMG,IACT,EAEAwB,EAAiBrC,UAAY,CAC3BiI,YAAa5F,EAWbsF,iBAAkB,SAA0BjE,GAC1C,IAAIwE,EAAQ,CACVhC,mBAAoB5G,KAAK6I,yBAAyBzE,GAClDqC,kBAAmBb,EAAelB,gBAChC1E,KAAKyG,kBACLrC,EACA,oBAEFsC,eAAgBd,EAAelB,gBAC7B1E,KAAK0G,eACLtC,EACA,WAEFuC,6BAA8Bf,EAAelB,gBAC3C1E,KAAK2G,6BACLvC,EACA,oBAEF0C,8BAA+BlB,EAAelB,gBAC5C1E,KAAK8G,8BACL1C,EACA,sBAGJ,OACEwE,EAAMhC,qBAAuB5G,KAAK4G,oBAClCgC,EAAMnC,oBAAsBzG,KAAKyG,mBACjCmC,EAAMlC,iBAAmB1G,KAAK0G,gBAC9BkC,EAAMjC,+BACJ3G,KAAK2G,8BACPiC,EAAM9B,gCAAkC9G,KAAK8G,8BAEtC9G,KAEFA,KAAK8I,mBAAmBF,EACjC,EAMAG,UAAW,WACT,YAAwB5I,IAApBH,KAAKyI,YAA2D,IAA/BzI,KAAK6G,eAAe3S,OAChD8L,KAEFA,KAAK8I,mBAAmB,CAC7BL,gBAAYtI,EACZ0G,eAAgB,IAEpB,EAOAmC,SAAU,SAAkBzJ,GAC1B,OAAIA,IAAUS,KAAKT,MAAcS,KAE1BA,KAAK8I,mBAAmB,CAC7BvJ,MAAOA,GAEX,EAOArC,SAAU,SAAkB+L,GAC1B,OAAIA,IAAajJ,KAAKnH,MAAcmH,KAE7BA,KAAK8I,mBAAmB,CAC7BjQ,MAAOoQ,GAEX,EAOA9L,QAAS,SAAiB+L,GACxB,OAAIA,IAAYlJ,KAAKzF,KAAayF,KAE3BA,KAAK8I,mBAAmB,CAC7BvO,KAAM2O,GAEV,EAQAC,UAAW,SAAmB5C,GAC5B,OAAOvG,KAAK8I,mBAAmB,CAC7BvC,OAAQA,GAEZ,EAQA6C,qBAAsB,SAA8B7C,GAClD,OAAOvG,KAAK8I,mBAAmB,CAC7B7O,kBAAmBsM,GAEvB,EAQA8C,eAAgB,SAAwBxI,GACtC,OAAIb,KAAKjG,cAAgB8G,EAAUb,KAE5BA,KAAK8I,mBAAmB,CAC7B/O,YAAa8G,GAEjB,EAQAyI,iBAAkB,SAA0BC,GAC1C,OAAIvJ,KAAKuJ,gBAAkBA,EAAsBvJ,KAE1CA,KAAK8I,mBAAmB,CAC7BS,cAAeA,GAEnB,EAkBAC,qBAAsB,SAAUpF,EAAWwD,EAAU1R,GACnD,IAAIuT,EAAM/D,EAAYxP,GAEtB,GAAI8J,KAAK0J,iBAAiBtF,EAAWwD,EAAU6B,GAAM,OAAOzJ,KAE5D,IAAIwE,EAAMiB,EAAM,CAAC,EAAGzF,KAAK4G,oBAazB,OAXApC,EAAIJ,GAAaqB,EAAM,CAAC,EAAGjB,EAAIJ,IAE3BI,EAAIJ,GAAWwD,IAEjBpD,EAAIJ,GAAWwD,GAAYpD,EAAIJ,GAAWwD,GAAUlG,QAEpD8C,EAAIJ,GAAWwD,GAAU5F,KAAKyH,IAE9BjF,EAAIJ,GAAWwD,GAAY,CAAC6B,GAGvBzJ,KAAK8I,mBAAmB,CAC7BlC,mBAAoBpC,GAExB,EAMAmF,0BAA2B,SAAUC,GACnC,OAAK5J,KAAK6J,mBAAmBD,IAGtB5J,KAAKyG,kBAAkBmD,IAFrB,EAGX,EAMAE,0BAA2B,SAAUF,GACnC,OAAK5J,KAAK+J,mBAAmBH,IAGtB5J,KAAK2G,6BAA6BiD,IAFhC,EAGX,EAMAxB,0BAA2B,SAAUwB,GAGnC,OAAO5J,KAAK8G,8BAA8B8C,IAAc,EAC1D,EAMAI,sBAAuB,SAAUJ,GAC/B,OAAK5J,KAAK6J,mBAAmBD,IAGtB5J,KAAK0G,eAAekD,IAFlB,EAGX,EAUAK,wBAAyB,SAAU7F,EAAWwD,EAAUsC,GACtD,IAAIC,EAAaD,EACjB,YAAmB/J,IAAfgK,EACGnK,KAAK0J,iBAAiBtF,EAAWwD,EAAUuC,GAGzCnK,KAAK8I,mBAAmB,CAC7BlC,mBAAoB5G,KAAK6I,0BAAyB,SAChD3S,EACAL,GAEA,OACEA,IAAQuO,GACRlO,EAAMkU,KAAOxC,GACb/B,EAAyB3P,EAAMuT,IAAK/D,EAAYyE,GAEpD,MAZOnK,UAcaG,IAAbyH,EACJ5H,KAAK0J,iBAAiBtF,EAAWwD,GAC/B5H,KAAK8I,mBAAmB,CAC7BlC,mBAAoB5G,KAAK6I,0BAAyB,SAChD3S,EACAL,GAEA,OAAOA,IAAQuO,GAAalO,EAAMkU,KAAOxC,CAC3C,MAPsD5H,KAWrDA,KAAK0J,iBAAiBtF,GACpBpE,KAAK8I,mBAAmB,CAC7BlC,mBAAoB5G,KAAK6I,0BAAyB,SAAU3S,EAAOL,GACjE,OAAOA,IAAQuO,CACjB,MAJ4CpE,IAMhD,EAMAqK,sBAAuB,SAAUT,GAC/B,OAAO5J,KAAK4G,mBAAmBgD,IAAc,CAAC,CAChD,EAOAU,qBAAsB,SAAUlG,EAAWwD,GACzC,OACE5H,KAAK4G,mBAAmBxC,IACxBpE,KAAK4G,mBAAmBxC,GAAWwD,EAEvC,EAWAiB,yBAA0B,SAAkCzE,GAC1D,QAAkBjE,IAAdiE,EACF,OAAKL,EAAc/D,KAAK4G,oBAGjB,CAAC,EAFC5G,KAAK4G,mBAGT,GAAyB,iBAAdxC,EAChB,OAAOJ,EAAKhE,KAAK4G,mBAAoB,CAACxC,IACjC,GAAyB,mBAAdA,EAA0B,CAC1C,IAAIW,GAAa,EACb6B,EAAqB5G,KAAK4G,mBAC1B2D,EAAwBzV,OAAOwG,KAAKsL,GAAoBhP,QAC1D,SAAUqN,EAAMpP,GACd,IAAI8R,EAAYf,EAAmB/Q,GAC/B2U,EAAe,CAAC,EAsBpB,OApBA7C,EAAYA,GAAa,CAAC,EAC1B7S,OAAOwG,KAAKqM,GAAW3K,SAAQ,SAAU4K,GACvC,IAAI1P,EAASyP,EAAUC,IAAa,GAChC6C,EAAY,GAChBvS,EAAO8E,SAAQ,SAAU9G,GACDkO,EACpB,CAAEqF,IAAKvT,EAAOkU,GAAIxC,GAClB/R,EACA,YAEoB4U,EAAUzI,KAAK9L,EACvC,IACIuU,EAAUvW,SAAWgE,EAAOhE,SAC9B6Q,GAAa,GAEfyF,EAAa5C,GAAY6C,CAC3B,IAEAxF,EAAKpP,GAAO2U,EAELvF,CACT,GACA,CAAC,GAGH,OAAIF,EAAmBwF,EAChBvK,KAAK4G,kBACd,CAKF,EAQA8D,SAAU,SAAkBzC,GAC1B,OAAIjI,KAAK6J,mBAAmB5B,GACnBjI,KAGFA,KAAK8I,mBAAmB,CAC7BvC,OAAQvG,KAAKuG,OAAO/M,OAAO,CAACyO,KAEhC,EAQA0C,oBAAqB,SAA6B1C,GAChD,OAAIjI,KAAK+J,mBAAmB9B,GACnBjI,KAGFA,KAAK8I,mBAAmB,CAC7B7O,kBAAmB+F,KAAK/F,kBAAkBT,OAAO,CAACyO,KAEtD,EASA2C,qBAAsB,SAA8BC,GAClD,GAAI7K,KAAK8K,oBAAoBD,EAAkBpU,MAC7C,MAAM,IAAI8K,MACR,+DACEsJ,EAAkBpU,KAClB,KAIN,OAAOuJ,KAAK8I,mBAAmB,CAC7BtC,mBAAoBxG,KAAKwG,mBAAmBhN,OAAO,CAACqR,KAExD,EAQAE,mBAAoB,SAA4B9C,EAAO/R,GACrD,IAAK8J,KAAK6J,mBAAmB5B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,uEAGN,OAAIrC,EAAevB,UAAUrE,KAAKyG,kBAAmBwB,EAAO/R,GACnD8J,KAEFA,KAAK8I,mBAAmB,CAC7BrC,kBAAmBb,EAAe1B,cAChClE,KAAKyG,kBACLwB,EACA/R,IAGN,EAQA8U,qBAAsB,SAA8B/C,EAAO/R,GACzD,IAAK8J,KAAK6J,mBAAmB5B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,uEAGN,OAAIrC,EAAevB,UAAUrE,KAAK0G,eAAgBuB,EAAO/R,GAChD8J,KAEFA,KAAK8I,mBAAmB,CAC7BpC,eAAgBd,EAAe1B,cAC7BlE,KAAK0G,eACLuB,EACA/R,IAGN,EAQA6G,8BAA+B,SAC7BkL,EACA/R,GAEA,IAAK8J,KAAK+J,mBAAmB9B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,kFAIN,OACErC,EAAevB,UAAUrE,KAAK2G,6BAA8BsB,EAAO/R,GAE5D8J,KAEFA,KAAK8I,mBAAmB,CAC7BnC,6BAA8Bf,EAAe1B,cAC3ClE,KAAK2G,6BACLsB,EACA/R,IAGN,EAMA+U,iBAAkB,SAA0BC,GAC1C,GAAIlL,KAAKmL,aAAaD,GAAM,OAAOlL,KAEnC,IAAIoL,EAAe,CACjBvE,eAAgB7G,KAAK6G,eAAerN,OAAO0R,IAG7C,OAAOlL,KAAK8I,mBAAmBsC,EACjC,EAQAC,YAAa,SAAqBpD,GAChC,OAAKjI,KAAK6J,mBAAmB5B,GAItBjI,KAAKqI,iBAAiBJ,GAAOa,mBAAmB,CACrDvC,OAAQvG,KAAKuG,OAAOjU,QAAO,SAAUsS,GACnC,OAAOA,IAAMqD,CACf,MANOjI,IAQX,EAQAsL,uBAAwB,SAAgCrD,GACtD,OAAKjI,KAAK+J,mBAAmB9B,GAItBjI,KAAKqI,iBAAiBJ,GAAOa,mBAAmB,CACrD7O,kBAAmB+F,KAAK/F,kBAAkB3H,QAAO,SAAUsS,GACzD,OAAOA,IAAMqD,CACf,MANOjI,IAQX,EAQAuL,wBAAyB,SAAiCtD,GACxD,OAAKjI,KAAK8K,oBAAoB7C,GAIvBjI,KAAKqI,iBAAiBJ,GAAOa,mBAAmB,CACrDtC,mBAAoBxG,KAAKwG,mBAAmBlU,QAAO,SAAUsS,GAC3D,OAAOA,EAAEnO,OAASwR,CACpB,MANOjI,IAQX,EAUAwL,sBAAuB,SAA+BvD,EAAO/R,GAC3D,IAAK8J,KAAK6J,mBAAmB5B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,uEAGN,OAAKrC,EAAevB,UAAUrE,KAAKyG,kBAAmBwB,EAAO/R,GAGtD8J,KAAK8I,mBAAmB,CAC7BrC,kBAAmBb,EAAenB,iBAChCzE,KAAKyG,kBACLwB,EACA/R,KANK8J,IASX,EAQAyL,wBAAyB,SAAiCxD,EAAO/R,GAC/D,IAAK8J,KAAK6J,mBAAmB5B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,uEAGN,OAAKrC,EAAevB,UAAUrE,KAAK0G,eAAgBuB,EAAO/R,GAGnD8J,KAAK8I,mBAAmB,CAC7BpC,eAAgBd,EAAenB,iBAC7BzE,KAAK0G,eACLuB,EACA/R,KANK8J,IASX,EAQA0L,iCAAkC,SAChCzD,EACA/R,GAEA,IAAK8J,KAAK+J,mBAAmB9B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,kFAGN,OACGrC,EAAevB,UAAUrE,KAAK2G,6BAA8BsB,EAAO/R,GAI/D8J,KAAK8I,mBAAmB,CAC7BnC,6BAA8Bf,EAAenB,iBAC3CzE,KAAK2G,6BACLsB,EACA/R,KANK8J,IASX,EAOA2L,oBAAqB,SAA6BT,GAChD,IAAKlL,KAAKmL,aAAaD,GAAM,OAAOlL,KAEpC,IAAIoL,EAAe,CACjBvE,eAAgB7G,KAAK6G,eAAevU,QAAO,SAAUsZ,GACnD,OAAOA,IAAMV,CACf,KAGF,OAAOlL,KAAK8I,mBAAmBsC,EACjC,EAUAvG,iBAAkB,SAA0BoD,EAAO/R,GACjD,OAAO8J,KAAK6L,sBAAsB5D,EAAO/R,EAC3C,EASA2V,sBAAuB,SAA+B5D,EAAO/R,GAC3D,GAAI8J,KAAK8K,oBAAoB7C,GAC3B,OAAOjI,KAAKsI,kCAAkCL,EAAO/R,GAChD,GAAI8J,KAAK6J,mBAAmB5B,GACjC,OAAOjI,KAAK8L,iCAAiC7D,EAAO/R,GAC/C,GAAI8J,KAAK+J,mBAAmB9B,GACjC,OAAOjI,KAAK+L,iCAAiC9D,EAAO/R,GAGtD,MAAM,IAAIqL,MACR,sCACE0G,EACA,6FAEN,EAQA6D,iCAAkC,SAChC7D,EACA/R,GAEA,IAAK8J,KAAK6J,mBAAmB5B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,uEAIN,OAAOjI,KAAK8I,mBAAmB,CAC7BrC,kBAAmBb,EAAef,iBAChC7E,KAAKyG,kBACLwB,EACA/R,IAGN,EAQA8V,6BAA8B,SAC5B/D,EACA/R,GAEA,IAAK8J,KAAK6J,mBAAmB5B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,uEAIN,OAAOjI,KAAK8I,mBAAmB,CAC7BpC,eAAgBd,EAAef,iBAC7B7E,KAAK0G,eACLuB,EACA/R,IAGN,EAQA6V,iCAAkC,SAChC9D,EACA/R,GAEA,IAAK8J,KAAK+J,mBAAmB9B,GAC3B,MAAM,IAAI1G,MACR0G,EACE,kFAIN,OAAOjI,KAAK8I,mBAAmB,CAC7BnC,6BAA8Bf,EAAef,iBAC3C7E,KAAK2G,6BACLsB,EACA/R,IAGN,EAQAoS,kCAAmC,SACjCL,EACA/R,GAEA,IAAK8J,KAAK8K,oBAAoB7C,GAC5B,MAAM,IAAI1G,MACR0G,EACE,mFAIN,IAAIgE,EAAYjM,KAAKkM,+BACnBlM,KAAKmM,2BAA2BlE,IAG9BzD,EAAM,CAAC,EA2BX,YAxBgDrE,IAA9CH,KAAK8G,8BAA8BmB,IACnCjI,KAAK8G,8BAA8BmB,GAAO/T,OAAS,IAGlD8L,KAAK8G,8BAA8BmB,GAAO,KAAO/R,GAO1C,IAFN8J,KAAK8G,8BAA8BmB,GAAO,GAAG3T,QAC3C4B,EAAQ+V,KAIsB,IAA9B/V,EAAM5B,QAAQ2X,GAEhBzH,EAAIyD,GAAS,GAEbzD,EAAIyD,GAAS,CAAC/R,EAAMwL,MAAM,EAAGxL,EAAMkW,YAAYH,KAGjDzH,EAAIyD,GAAS,CAAC/R,GAGT8J,KAAK8I,mBAAmB,CAC7BhC,8BAA+BhD,EAC7B,CAAC,EACDU,EACAxE,KAAK8G,gCAGX,EASAuF,+BAAgC,SAAUpE,EAAOqE,GAC/C,GAAItM,KAAKuM,2BAA2BtE,GAClC,MAAM,IAAI1G,MAAM0G,EAAQ,wBAE1B,IAAKjI,KAAK8K,oBAAoB7C,GAC5B,MAAM,IAAI1G,MACR0G,EACE,oFAGN,IAAIzD,EAAM,CAAC,EAEX,OADAA,EAAIyD,GAAS,CAACqE,GACPtM,KAAK8I,mBAAmB,CAC7BhC,8BAA+BhD,EAC7B,CAAC,EACDU,EACAxE,KAAK8G,gCAGX,EAQA0F,kCAAmC,SAAUvE,GAC3C,IAAKjI,KAAKuM,2BAA2BtE,GACnC,OAAOjI,KAET,IAAIwE,EAAM,CAAC,EAEX,OADAA,EAAIyD,GAAS,GACNjI,KAAK8I,mBAAmB,CAC7BhC,8BAA+BhD,EAC7B,CAAC,EACDU,EACAxE,KAAK8G,gCAGX,EAOA2F,oBAAqB,SAA6BvB,GAChD,OAAIlL,KAAKmL,aAAaD,GACblL,KAAK2L,oBAAoBT,GAG3BlL,KAAKiL,iBAAiBC,EAC/B,EAOAnB,mBAAoB,SAAU9B,GAC5B,OAAOjI,KAAK/F,kBAAkB3F,QAAQ2T,IAAU,CAClD,EAOA6C,oBAAqB,SAAUlB,GAC7B,YAAsDzJ,IAA/CH,KAAKmM,2BAA2BvC,EACzC,EAOAC,mBAAoB,SAAU5B,GAC5B,OAAOjI,KAAKuG,OAAOjS,QAAQ2T,IAAU,CACvC,EAUAyE,eAAgB,SAAwBzE,EAAO/R,GAC7C,QAAK8J,KAAK6J,mBAAmB5B,IAGtBrC,EAAevB,UAAUrE,KAAKyG,kBAAmBwB,EAAO/R,EACjE,EAWAyW,iBAAkB,SAA0B1E,EAAO/R,GACjD,QAAK8J,KAAK6J,mBAAmB5B,IAGtBrC,EAAevB,UAAUrE,KAAK0G,eAAgBuB,EAAO/R,EAC9D,EAUA0W,0BAA2B,SAAmC3E,EAAO/R,GACnE,QAAK8J,KAAK+J,mBAAmB9B,IAGtBrC,EAAevB,UACpBrE,KAAK2G,6BACLsB,EACA/R,EAEJ,EAUAqW,2BAA4B,SAC1BtE,EACA/R,GAEA,IAAK8J,KAAK8K,oBAAoB7C,GAC5B,OAAO,EAGT,IAAI4E,EAAc7M,KAAKoI,0BAA0BH,GAEjD,OAAK/R,GAIkC,IAAhC2W,EAAYvY,QAAQ4B,GAHlB2W,EAAY3Y,OAAS,CAIhC,EAWAwV,iBAAkB,SAA0BtF,EAAWwD,EAAU1R,GAC/D,QAAciK,IAAVjK,QAAoCiK,IAAbyH,EACzB,OAAOvC,QAAQrF,KAAK4G,mBAAmBxC,IAGzC,IAAI0I,EACF9M,KAAK4G,mBAAmBxC,SACyBjE,IAAjDH,KAAK4G,mBAAmBxC,GAAWwD,GAErC,QAAczH,IAAVjK,IAAwB4W,EAC1B,OAAOA,EAGT,IAr1CeC,EAAOC,EAq1ClBzF,EAAc7B,EAAYxP,GAC1B+W,OAEF9M,KAx1Ca4M,EAu1CH/M,KAAK4G,mBAAmBxC,GAAWwD,GAv1CzBoF,EAu1CoCzF,EAt1CrDhC,EAAKwH,GAAO,SAAUG,GAC3B,OAAOrH,EAAyBqH,EAAcF,EAChD,KAu1CE,OAAOF,GAAqBG,CAC9B,EAOA9B,aAAc,SAAsBD,GAClC,OAA6C,IAAtClL,KAAK6G,eAAevS,QAAQ4W,EACrC,EAQAiC,4BAA6B,WAE3B,IAAIpG,EAAO/G,KAGPoN,EAAkC5H,EACpC1Q,OAAOwG,KAAK0E,KAAK4G,oBAAoBtU,QAAO,SAAU2V,GACpD,OAAOnT,OAAOwG,KAAKyL,EAAKH,mBAAmBqB,IAAQ/T,OAAS,CAC9D,IACA8L,KAAK/F,mBAGP,OAAOnF,OAAOwG,KAAK0E,KAAK2G,8BACrBrU,QAAO,SAAU2V,GAChB,OAAOlB,EAAKJ,6BAA6BsB,GAAO/T,OAAS,CAC3D,IACCsF,OAAO4T,GACP5T,OAAOwG,KAAKqN,gCACZC,MACL,EAQAD,6BAA8B,WAE5B,IAAItG,EAAO/G,KACX,OAAOwF,EAGLxF,KAAKwG,mBAAmBhR,KAAI,SAAUyS,GACpC,OAAOA,EAAMxR,IACf,IACA3B,OAAOwG,KAAK0E,KAAK8G,+BAA+BxU,QAAO,SAAU2V,GAC/D,OAAOlB,EAAKD,8BAA8BmB,GAAO/T,OAAS,CAC5D,KACAoZ,MACJ,EAMAC,8BAA+B,WAC7B,IAAIC,EAAgBxN,KAAKmN,8BAEzB,OAAOnN,KAAK/F,kBAAkB3H,QAAO,SAAUsS,GAC7C,OAAqC,IAA9B4I,EAAclZ,QAAQsQ,EAC/B,GACF,EAEA6I,kBAAmB,CACjB,QAEA,SACA,oBACA,oBACA,qBACA,iBAEA,+BACA,qBACA,iBACA,iCAGFC,eAAgB,WACd,IAAID,EAAoBzN,KAAKyN,kBAEzBE,EAAc,CAAC,EAGf5G,EAAO/G,KAWX,OAVAlL,OAAOwG,KAAK0E,MAAMhD,SAAQ,SAAUgK,GAClC,IAAImD,EAAapD,EAAKC,IAEsB,IAA1CyG,EAAkBnZ,QAAQ0S,SACX7G,IAAfgK,IAEAwD,EAAY3G,GAAamD,EAE7B,IAEOwD,CACT,EAWAC,kBAAmB,SAAsBC,EAAW3X,GAClD,GAAI8J,KAAK6N,KAAe3X,EAAO,OAAO8J,KAEtC,IAAIoL,EAAe,CAAC,EAIpB,OAFAA,EAAayC,GAAa3X,EAEnB8J,KAAK8I,mBAAmBsC,EACjC,EAOAtC,mBAAoB,SAA4B3C,GAC9C,IAAKA,EAAQ,OAAOnG,KAEpB,IAAIvM,EAAQsP,EAAiBwF,SAASvI,KAAMmG,GAE5C,GAAI1S,EACF,MAAMA,EAIR,IAAIsT,EAAO/G,KACP8N,EAAkB/K,EAAiBqD,cAAcD,GACjD4H,EAAsBjZ,OAAOwG,KAAK0E,MAAMpI,QAAO,SAAUC,EAAKhC,GAEhE,OADAgC,EAAIhC,GAAOkR,EAAKlR,GACTgC,CACT,GAAG,CAAC,GAEAmW,EAAkBlZ,OAAOwG,KAAKwS,GAAiBlW,QAAO,SACxDqW,EACApY,GAEA,IAAIqY,OAA2C/N,IAAlB8N,EAASpY,GAClCsY,OAA8ChO,IAAzB2N,EAAgBjY,GAEzC,OAAIqY,IAA2BC,EACtBnK,EAAKiK,EAAU,CAACpY,KAGrBsY,IACFF,EAASpY,GAAOiY,EAAgBjY,IAG3BoY,EACT,GACAF,GAEA,OAAO,IAAI/N,KAAK2I,YAAYqF,EAC9B,EAQAI,UAAW,WACT,YAAkBjO,IAAdH,KAAKzF,KACAyF,KAGFA,KAAK7C,QAAQ,EACtB,EAOAkR,4BAA6B,SAAUxD,GACrC,OAAOA,EAAkByD,QAAU,CAAC,iBAAkB,WACxD,EAQApC,+BAAgC,SAAUrB,GACxC,OAAOA,EAAkBoB,WAAa,KACxC,EAQAsC,yBAA0B,SAAU1D,GAClC,OAAOA,EAAkB3C,UAAY,IACvC,EAQAsG,gCAAiC,SAAU3D,GACzC,MAAiD,kBAAtCA,EAAkB4D,iBACpB5D,EAAkB4D,eAG7B,EAOAtC,2BAA4B,SAAUuC,GACpC,OAAOnJ,EAAKvF,KAAKwG,oBAAoB,SAAU5B,GAC7C,OAAOA,EAAEnO,OAASiY,CACpB,GACF,EAOAC,+BAAgC,SAAU/E,GACxC,IAAK5J,KAAK8K,oBAAoBlB,GAC5B,MAAO,GAGT,IAAIgF,EAAa5O,KAAKoI,0BAA0BwB,GAAW,GAC3D,IAAKgF,EAAY,MAAO,GAExB,IAAI3C,EAAYjM,KAAKkM,+BACnBlM,KAAKmM,2BAA2BvC,IAGlC,OADWgF,EAAW3a,MAAMgY,GAChBzW,KAAI,SAAUqZ,GACxB,OAAOA,EAAKC,MACd,GACF,EAEAC,SAAU,WACR,OAAOC,KAAKC,UAAUjP,KAAM,KAAM,EACpC,GAYFQ,EAAOC,QAAUsC,+BCppDjBvC,EAAOC,QASP,SAAuByO,GACrB,OAAO,SAAkBC,EAAyBC,GAChD,IAAIvE,EAAoBqE,EAAM1I,mBAAmB4I,GAC7CC,EACDH,EAAMpI,8BAA8B+D,EAAkBpU,OACrDyY,EAAMpI,8BAA8B+D,EAAkBpU,MAAM,IAC9D,GACE6Y,EACFJ,EAAMhD,+BAA+BrB,GACnC0E,EACFL,EAAMX,yBAAyB1D,GAC7B2E,EACFN,EAAMV,gCAAgC3D,GACpCyD,EAASmB,EACXP,EAAMb,4BAA4BxD,IAGhC6E,EAAiBP,EAAwBnJ,OAAM,SAAU2J,GAC3D,OAAOA,EAAYC,UACrB,IAEIC,EA4BR,SACEvB,EACAgB,EACAC,EACAC,EACArH,GAEA,OAAO,SACL2H,EACAX,EACAY,GAEA,IAAIC,EAASF,EAEb,GAAIC,EAA2B,EAAG,CAChC,IAAIE,EAAQ,EAIZ,IAFAD,EAASF,EAEFG,EAAQF,GAA0B,CAIvC,IAAIzW,EAAO0W,GAAUtV,MAAMC,QAAQqV,EAAO1W,MAAQ0W,EAAO1W,KAAO,GAChE0W,EAASzK,EAAKjM,GAAM,SAAU4W,GAC5B,OAAOA,EAAQ7L,SACjB,IACA4L,GACF,CACF,CAGA,GAAID,EAAQ,CAYV,IAAIG,EAASrb,OAAOwG,KAAK6T,EAAwB7V,MAC9C9D,KAAI,SAAU4a,GACb,MAAO,CAACA,EAAYjB,EAAwB7V,KAAK8W,GACnD,IACC9d,QAAO,SAAU+d,GAEhB,OAiCV,SACED,EACAE,EACAnI,EACAmH,EACAC,EACAC,GAGA,GACED,IAC8C,IAA7Ca,EAAW9b,QAAQib,IAClBA,IAAyBa,GAE3B,OAAO,EAIT,OACIb,IAC+C,IAA/Ca,EAAW9b,QAAQgb,IAEpBC,GACCa,EAAWnc,MAAMqb,GAAuBpb,OACtCqb,EAAqBtb,MAAMqb,GAAuBpb,QAClD,IAG4C,IAA/Ckc,EAAW9b,QAAQgb,KACoC,IAAtDnH,EAAkB7T,QAAQgb,IAEc,IAA1CnH,EAAkB7T,QAAQ8b,IAEkC,IAA3DA,EAAW9b,QAAQgc,EAAahB,KAC9BE,GAC2C,IAA1CY,EAAW9b,QAAQ6T,GAE3B,CAtEiBoI,CADUF,EAAM,GAGrBL,EAAO1D,MAAQiD,EACfpH,EACAmH,EACAC,EACAC,EAEJ,IAEFQ,EAAO1W,KAAOkX,EACZL,EAAO3a,KAAI,SAAU6a,GACnB,IAAID,EAAaC,EAAM,GAGvB,OAyDV,SACEI,EACAL,EACAd,EACAnH,EACAyH,GAEA,IAAI5b,EAAQoc,EAAWnc,MAAMqb,GAC7B,MAAO,CACL7Y,KAAMzC,EAAMA,EAAME,OAAS,GAAG4a,OAC9BxC,KAAM8D,EACNM,aAAcC,EAAiBP,GAC/Bxd,MAAO6d,EACPpM,UACE8D,IAAsBiI,GAC4C,IAAlEjI,EAAkB7T,QAAQ8b,EAAad,GACzCM,WAAYA,EACZtW,KAAM,KAEV,CA5EiBsX,CAFUP,EAAM,GAIrBD,EACAd,EACAuB,EAAmB1I,GACnBgH,EAAwBS,WAE5B,IACAtB,EAAO,GACPA,EAAO,GAEX,CAEA,OAAOwB,CACT,CACF,CA5GyBgB,CACnBxC,EACAgB,EACAC,EACAC,EACAH,GAGEhV,EAAU8U,EAQd,OANII,IACFlV,EAAU8U,EAAwBzN,MAChC6N,EAAqBtb,MAAMqb,GAAuBpb,SAI/CmG,EAAQzC,OAAOiY,EAAgB,CACpCpZ,KAAMyY,EAAM1I,mBAAmB4I,GAAwB3Y,KACvD7D,MAAO,KACPyR,WAAW,EACXiI,KAAM,KACNoE,aAAc,KACdd,WAAYF,EACZpW,KAAM,MAEV,CACF,EAtDA,IAAIyX,EAAK,EAAQ,MACbxL,EAAO,EAAQ,KACfkK,EAAiC,EAAQ,KACzCe,EAAU,EAAQ,MAClBG,EAAmBI,EAAGJ,iBACtBE,EAAqBE,EAAGF,gDCP5B,IAAIG,EAAU,EAAQ,MAClBlN,EAAe,EAAQ,MACvBiN,EAAK,EAAQ,MACbxL,EAAO,EAAQ,KACf0L,EAAY,EAAQ,MACpBC,EAAa,EAAQ,KACrBzL,EAAQ,EAAQ,KAChB+K,EAAU,EAAQ,MAClBG,EAAmBI,EAAGJ,iBACtBE,EAAqBE,EAAGF,mBAExBC,EAA2B,EAAQ,MAgDvC,SAASK,EAAWC,GAClB,IAAIC,EAAU,CAAC,EAMf,OAJAD,EAAWpU,SAAQ,SAAUyM,EAAK6H,GAChCD,EAAQ5H,GAAO6H,CACjB,IAEOD,CACT,CAEA,SAASE,EAAiBC,EAAMC,EAAY5b,GACtC4b,GAAcA,EAAW5b,KAC3B2b,EAAKE,MAAQD,EAAW5b,GAE5B,CA6JA,SAASmN,EAAckM,EAAO7U,EAASsX,GACrC,IAAIC,EAAkBvX,EAAQ,GAE9B2F,KAAK6R,YAAcxX,EAGnB,IAAI0M,EAAO/G,KAGXlL,OAAOwG,KAAKsW,GAAiB5U,SAAQ,SAAUnH,GAC7CkR,EAAKlR,GAAO+b,EAAgB/b,EAC9B,IAGAf,OAAOwG,KAAKqW,GAAW,CAAC,GAAG3U,SAAQ,SAAUnH,GAC3CkR,EAAKlR,GAAO8b,EAAQ9b,EACtB,IA8IAmK,KAAK8R,iBAAmBzX,EAAQzC,QAAO,SAAUma,EAAKC,GACpD,YAAmC7R,IAA5B6R,EAAOF,iBACVC,EACAA,EAAMC,EAAOF,gBACnB,GAAG,GAMH9R,KAAK/F,kBAAoB,GAKzB+F,KAAKwG,mBAAqB0I,EAAM1I,mBAAmBhR,KACjD,WACE,MAAO,EACT,IAMFwK,KAAKuG,OAAS,GAEd,IAAItM,EAAoBiV,EAAM/B,8BAE1B8E,EAAgBd,EAAWjC,EAAM3I,QACjC2L,EAA2Bf,EAAWjC,EAAMjV,mBAC5CkY,EAAwB,EAKxBC,EAAaR,EAAgBrL,QAAU,CAAC,EAE5CzR,OAAOwG,KAAK8W,GAAYpV,SAAQ,SAAUqV,GACxC,IAnVF7L,EACA8L,EAkVMC,EAAmBH,EAAWC,GAE9BxH,GArVNrE,EAsVI0I,EAAM1I,mBArVV8L,EAsVID,EApVG9M,EACLiB,GACA,SAAkCqE,GAEhC,OADiBA,EAAkBuG,YAAc,IAC/B9c,QAAQge,IAA8B,CAC1D,KAkVA,GAAIzH,EAAmB,CAGrB,IAAI2H,EAAa3H,EAAkBuG,WAAW9c,QAAQ+d,GAClDI,EAAmBxB,EAAU/B,EAAM1I,oBAAoB,SAAU5B,GACnE,OAAOA,EAAEnO,OAASoU,EAAkBpU,IACtC,IACAsQ,EAAKP,mBAAmBiM,GAAkBD,GAAc,CACtDpO,UAAWiO,EACX/Y,KAAMiZ,EACN3C,WAAYgC,EAAgBc,sBAEhC,KAAO,CACL,IAEIlQ,EAFAmQ,GAAoE,IAA/CzD,EAAMjV,kBAAkB3F,QAAQ+d,GACrDO,GAAyD,IAApC1D,EAAM3I,OAAOjS,QAAQ+d,GAG1CM,IACFnQ,EAAW0P,EAAyBG,GACpCtL,EAAK9M,kBAAkBuI,GAAY,CACjC/L,KAAM4b,EACN/Y,KAAMiZ,EACN3C,WAAYgC,EAAgBc,uBAE9BnB,EACExK,EAAK9M,kBAAkBuI,GACvBoP,EAAgBiB,aAChBR,IAGAO,IACFpQ,EAAWyP,EAAcI,GACzBtL,EAAKR,OAAO/D,GAAY,CACtB/L,KAAM4b,EACN/Y,KAAMiZ,EACN3C,WAAYgC,EAAgBc,uBAE9BnB,EACExK,EAAKR,OAAO/D,GACZoP,EAAgBiB,aAChBR,GAGN,CACF,IAGArS,KAAKwG,mBAAqBwK,EAAQhR,KAAKwG,oBAGvCvM,EAAkB+C,SAAQ,SAAU8V,GAClC,IAAId,EAAS3X,EAAQ8X,GACjB5L,EAASyL,GAAUA,EAAOzL,OAASyL,EAAOzL,OAAS,CAAC,EACpDsE,EAAoBqE,EAAM/C,2BAA2B2G,GAGzDhe,OAAOwG,KAAKiL,GAAQvJ,SAAQ,SAAU+V,GACpC,IAEIvQ,EAFAwQ,EAAezM,EAAOwM,GAI1B,GAAIlI,EAAmB,CACrBrI,EAAWyO,EAAU/B,EAAM1I,oBAAoB,SAAU5B,GACvD,OAAOA,EAAEnO,OAASoU,EAAkBpU,IACtC,IACA,IAAIwc,EAAiBhC,EACnBlK,EAAKP,mBAAmBhE,IACxB,SAAUoC,GACR,OAAOA,EAAER,YAAc2O,CACzB,IAIF,IAAwB,IAApBE,EACF,OAGFlM,EAAKP,mBAAmBhE,GAAUyQ,GAAgB3Z,KAAOmM,EACvD,CAAC,EACDsB,EAAKP,mBAAmBhE,GAAUyQ,GAAgB3Z,KAClD0Z,EAEJ,KAAO,CACLxQ,EAAW0P,EAAyBa,GAEpC,IAAIG,EACDtB,EAAgBrL,QAAUqL,EAAgBrL,OAAOwM,IAAY,CAAC,EAEjEhM,EAAK9M,kBAAkBuI,GAAY,CACjC/L,KAAMsc,EACNzZ,KAAMwK,EAAa,CAAC,EAAGkP,EAAcE,GACrCtD,WAAYoC,EAAOU,uBAErBnB,EACExK,EAAK9M,kBAAkBuI,GACvBwP,EAAOa,aACPE,GAGE7D,EAAMvI,6BAA6BoM,IACrC7D,EAAMvI,6BAA6BoM,GAAQ/V,SAAQ,SACjDmI,IAIG4B,EAAK9M,kBAAkBuI,GAAUlJ,KAAK6L,IACvC+J,EAAMvI,6BAA6BoM,GAAQze,QACzCuc,EAAmB1L,KAChB,IAEL4B,EAAK9M,kBAAkBuI,GAAUlJ,KAAK6L,GAAmB,EAE7D,GAEJ,CACF,IACAgN,GACF,IAGAjD,EAAM7B,+BAA+BrQ,SAAQ,SAAUmW,GACrD,IAAItI,EAAoBqE,EAAM/C,2BAA2BgH,GACrDlH,EAAYiD,EAAMhD,+BAA+BrB,GAEjD1C,EAAoB+G,EAAM9G,0BAA0B+K,GAIzB,IAA7BhL,EAAkBjU,QAClBiU,EAAkB,GAAGlU,MAAMgY,GAAW/X,OAAS,GAKjDmG,EAAQqH,MAAMyQ,GAAuBnV,SAAQ,SAAUgV,GACrD,IAAIzL,EAASyL,GAAUA,EAAOzL,OAASyL,EAAOzL,OAAS,CAAC,EAExDzR,OAAOwG,KAAKiL,GAAQvJ,SAAQ,SAAU+V,GACpC,IAAIC,EAAezM,EAAOwM,GACtBvQ,EAAWyO,EAAU/B,EAAM1I,oBAAoB,SAAU5B,GAC3D,OAAOA,EAAEnO,OAASoU,EAAkBpU,IACtC,IACIwc,EAAiBhC,EACnBlK,EAAKP,mBAAmBhE,IACxB,SAAUoC,GACR,OAAOA,EAAER,YAAc2O,CACzB,IAIF,IAAwB,IAApBE,EAAJ,CAYA,IAAIG,EAAc,CAAC,EAEnB,GAAIjL,EAAkBjU,OAAS,EAAG,CAChC,IAAImf,EAAOlL,EAAkB,GAAGlU,MAAMgY,GAAW,GACjDmH,EAAYC,GACVtM,EAAKP,mBAAmBhE,GAAUyQ,GAAgB3Z,KAAK+Z,EAC3D,CAEAtM,EAAKP,mBAAmBhE,GAAUyQ,GAAgB3Z,KAAOwK,EACvDsP,EACAJ,EACAjM,EAAKP,mBAAmBhE,GAAUyQ,GAAgB3Z,KArBpD,CAuBF,IAEA6Y,GACF,GACF,IAGArd,OAAOwG,KAAK4T,EAAMxI,gBAAgB1J,SAAQ,SAAU4M,GAClD,IAAI0J,EAAWpE,EAAMxI,eAAekD,GAChCpH,EAAWyP,EAAcrI,GAE7B7C,EAAKR,OAAO/D,GAAY,CACtB/L,KAAMmT,EACNtQ,KAAM8Y,EAAWxI,GACjBgG,WAAYgC,EAAgBc,uBAE9BY,EAAStW,SAAQ,SAAUoT,GACzBrJ,EAAKR,OAAO/D,GAAYuE,EAAKR,OAAO/D,IAAa,CAAE/L,KAAMmT,GACzD7C,EAAKR,OAAO/D,GAAUlJ,KAAOyN,EAAKR,OAAO/D,GAAUlJ,MAAQ,CAAC,EAC5DyN,EAAKR,OAAO/D,GAAUlJ,KAAK8W,GAAc,CAC3C,GACF,IAKApQ,KAAKwG,mBAAqBxG,KAAKwG,mBAAmBhR,IAChDsb,EAAyB5B,IAM3BlP,KAAKuG,OAASyK,EAAQhR,KAAKuG,QAI3BvG,KAAK/F,kBAAoB+W,EAAQhR,KAAK/F,mBAEtC+F,KAAKuT,OAASrE,CAChB,CA2BA,SAASsE,EAA6BnZ,EAAS+J,GAC7C,SAASqP,EAAUxL,GACjB,OAAOA,EAAMxR,OAAS2N,CACxB,CAEA,GAAI/J,EAAQkZ,OAAO1J,mBAAmBzF,GAAY,CAChD,IAAI6D,EAAQ1C,EAAKlL,EAAQkM,OAAQkN,GACjC,OAAKxL,EAEEnT,OAAOwG,KAAK2M,EAAM3O,MAAM9D,KAAI,SAAUiB,GAC3C,IAAIP,EAAQya,EAAiBla,GAC7B,MAAO,CACLA,KAAMA,EACNia,aAAcxa,EACdtD,MAAOqV,EAAM3O,KAAK7C,GAClB4N,UAAWhK,EAAQkZ,OAAO7G,eAAetI,EAAWlO,GACpDwd,WAAYrZ,EAAQkZ,OAAO5G,iBAAiBvI,EAAW3N,GAE3D,IAXmB,EAYrB,CAAO,GAAI4D,EAAQkZ,OAAOxJ,mBAAmB3F,GAAY,CACvD,IAAI0O,EAAmBvN,EAAKlL,EAAQJ,kBAAmBwZ,GACvD,OAAKX,EAEEhe,OAAOwG,KAAKwX,EAAiBxZ,MAAM9D,KAAI,SAAUiB,GACtD,IAAIP,EAAQya,EAAiBla,GAC7B,MAAO,CACLA,KAAMA,EACNia,aAAcxa,EACdtD,MAAOkgB,EAAiBxZ,KAAK7C,GAC7B4N,UAAWhK,EAAQkZ,OAAO3G,0BAA0BxI,EAAWlO,GAEnE,IAV8B,EAWhC,CAAO,GAAImE,EAAQkZ,OAAOzI,oBAAoB1G,GAAY,CACxD,IAAIuP,EAA0BpO,EAAKlL,EAAQmM,mBAAoBiN,GAC/D,IAAKE,EAAyB,OAAOA,EAErC,IAAI9I,EACFxQ,EAAQkZ,OAAOpH,2BAA2B/H,GACxC6H,EACF5R,EAAQkZ,OAAOrH,+BAA+BrB,GAC5C1C,EAAoB0I,EACtBxW,EAAQkZ,OAAOnL,0BAA0BhE,GAAW,IAAM,IAGE,IAA1D+D,EAAkB7T,QAAQuW,EAAkB3C,YAC9CC,EAAoBA,EAAkBtN,QACpCgQ,EAAkB3C,SAAW+D,EAC7B,KAIJ,IAAI2H,EAAyBzL,EAAkBlU,MAAMgY,GAKrD,OAJA2H,EAAuBC,QAAQzP,GAE/B0P,EAAaH,EAAyBC,EAAwB,GAEvDD,CACT,CAGF,CASA,SAASG,EAAaC,EAAM5L,EAAmB6L,GAC7CD,EAAK1P,UAAY0P,EAAKtd,OAAS0R,EAAkB6L,GAC7CD,EAAKza,MACPya,EAAKza,KAAK0D,SAAQ,SAAUiX,GAC1BH,EAAaG,EAAO9L,EAAmB6L,EAAQ,EACjD,GAEJ,CAWA,SAASE,EAAQC,EAAQC,EAAMC,EAAOpE,GAGpC,GAFAA,EAAQA,GAAS,EAEbvV,MAAMC,QAAQyZ,GAChB,OAAOD,EAAOC,EAAMC,EAAMpE,IAG5B,IAAKmE,EAAK9a,MAA6B,IAArB8a,EAAK9a,KAAKpF,OAC1B,OAAOkgB,EAGT,IAAIE,EAAWF,EAAK9a,KAAK9D,KAAI,SAAU+e,GACrC,OAAOL,EAAQC,EAAQI,EAAWF,EAAOpE,EAAQ,EACnD,IACIuE,EAAiBL,EAAOG,EAAUD,EAAMpE,IAE5C,OADcnM,EAAa,CAAExK,KAAMkb,GAAkBJ,EAEvD,CA2MA,SAASK,EAAyBvP,EAAW0E,GAC3C,IAAItQ,EAAOiM,EAAKL,GAAW,SAAU+C,GACnC,OAAOA,EAAMxR,OAASmT,CACxB,IACA,OAAOtQ,GAAQA,EAAKoY,KACtB,CAwGA,SAASgD,EAAcxF,EAAO3V,EAAMob,EAAele,EAAMme,GACvD,IAAI3M,EAAQ1C,EAAKqP,GAAe,SAAUhQ,GACxC,OAAOA,EAAEnO,OAASke,CACpB,IACI/hB,EAAQqV,GAASA,EAAM3O,MAAQ2O,EAAM3O,KAAK7C,GAAQwR,EAAM3O,KAAK7C,GAAQ,EACrEmZ,EAAc3H,GAASA,EAAM2H,aAAe,EAEhD,MAAO,CACLrW,KAAMA,EACNob,cAAeA,EACfle,KAAMA,EACN7D,MAAOA,EACPgd,WAAYA,EAEhB,CAjcA5M,EAActC,UAAUmU,eAAiB,SAAUpe,GACjD,SAASgd,EAAUxL,GACjB,OAAOA,EAAMxR,OAASA,CACxB,CAEA,OACE8O,EAAKvF,KAAKuG,OAAQkN,IAClBlO,EAAKvF,KAAK/F,kBAAmBwZ,IAC7BlO,EAAKvF,KAAKwG,mBAAoBiN,EAElC,EAmHAzQ,EAAc8R,aAAe,CAAC,iBAAkB,aAAc,YA+H9D9R,EAActC,UAAUqU,eAAiB,SAAU3Q,EAAWjB,GAC5D,IAAI6R,EAAcxB,EAA6BxT,KAAMoE,GACrD,GAAK4Q,EAAL,CAIA,IASI5D,EATAO,EAAU7N,EAAa,CAAC,EAAGX,EAAM,CACnCmL,OAAQtL,EAAc8R,aAGtBG,gBAAiB9R,GAAQA,EAAKmL,UAI5BjU,EAAU2F,KAEd,GAAItF,MAAMC,QAAQqa,GAChB5D,EAAa,CAAChN,QAGdgN,EADa/W,EAAQkZ,OAAOpH,2BAA2B6I,EAAYve,MAC/C2a,WAGtB,OAAO8C,GACL,SAAU5a,EAAMsQ,GACd,GAAI+H,EAAQsD,cAAe,CACzB,IAAIA,EAnFZ,SAA0B5a,EAAS+J,GACjC,OACE/J,EAAQ6a,kBACR7a,EAAQ6a,iBAAiBD,eACzB5a,EAAQ6a,iBAAiBD,cAAc/c,QACvCmC,EAAQ6a,iBAAiBD,cAAc/c,OAAOkM,EAElD,CA4E4B+Q,CAAiB9a,EAASuP,GAC9C,GAAIqL,EACF,OAxIV,SAA8BD,EAAaC,GACzC,IAAIG,EAAgB,GAChBC,EAAkB,GAOlBC,GALQL,EAAcM,OAAS,IAKV3d,QAAO,SAAUC,EAAKpB,EAAMF,GAEnD,OADAsB,EAAIpB,GAAQF,EACLsB,CACT,GAAG,CAAC,GAEJmd,EAAYhY,SAAQ,SAAU+W,GAE5B,IAAItd,EAAOsd,EAAKzH,MAAQyH,EAAKtd,UACF0J,IAAvBmV,EAAa7e,GACf2e,EAAcE,EAAa7e,IAASsd,EAEpCsB,EAAgBrT,KAAK+R,EAEzB,IAEAqB,EAAgBA,EAAc9iB,QAAO,SAAU2V,GAC7C,OAAOA,CACT,IAEA,IACIuN,EADAC,EAAkBR,EAAcQ,gBAEpC,MAAwB,WAApBA,EACKL,GAEPI,EAD6B,UAApBC,EACE,CACT,CAAC,OAAQ,QACT,CAAC,MAAO,QAGC,CAAC,CAAC,SAAU,CAAC,SAGnBL,EAAc5b,OACnBgX,EAAQ6E,EAAiBG,EAAS,GAAIA,EAAS,KAEnD,CA4FiBE,CAAqBpc,EAAM2b,EAEtC,CAEA,GAAIva,MAAMC,QAAQgX,EAAQrD,QAAS,CACjC,IAAIiH,EAAQrE,EAAWS,EAAQrD,OAAQtL,EAAc8R,cACrD,OAAOtE,EAAQlX,EAAMic,EAAM,GAAIA,EAAM,GACvC,CAAO,GAA8B,mBAAnB5D,EAAQrD,OACxB,OAjKR,SAAuBiH,EAAOjc,GAC5B,OAAOA,EAAKgU,KAAKiI,EACnB,CA+JeI,CAAchE,EAAQrD,OAAQhV,GAEvC,MAAM,IAAIiI,MACR,oHAGJ,GACAyT,EACA5D,EAxCF,CA0CF,EAQApO,EAActC,UAAUkV,cAAgB,SAAUxR,GAChD,OAAIpE,KAAKuT,OAAO1J,mBAAmBzF,GAC1BqQ,EAAyBzU,KAAKuG,OAAQnC,GACpCpE,KAAKuT,OAAOxJ,mBAAmB3F,GACjCqQ,EAAyBzU,KAAK/F,kBAAmBmK,QADnD,CAKT,EA+BApB,EAActC,UAAUmV,eAAiB,WACvC,IAAI3G,EAAQlP,KAAKuT,OAEblZ,EAAU2F,KACV8V,EAAM,GAoEV,OAlEAhhB,OAAOwG,KAAK4T,EAAMzI,mBAAmBzJ,SAAQ,SAAU2X,GACrDzF,EAAMzI,kBAAkBkO,GAAe3X,SAAQ,SAAUvG,GACvDqf,EAAI9T,KACF0S,EAAcxF,EAAO,QAASyF,EAAele,EAAM4D,EAAQkM,QAE/D,GACF,IAEAzR,OAAOwG,KAAK4T,EAAMxI,gBAAgB1J,SAAQ,SAAU2X,GAClDzF,EAAMxI,eAAeiO,GAAe3X,SAAQ,SAAUvG,GACpDqf,EAAI9T,KACF0S,EAAcxF,EAAO,UAAWyF,EAAele,EAAM4D,EAAQkM,QAEjE,GACF,IAEAzR,OAAOwG,KAAK4T,EAAMvI,8BAA8B3J,SAAQ,SACtD2X,GAEAzF,EAAMvI,6BAA6BgO,GAAe3X,SAAQ,SAAUvG,GAClEqf,EAAI9T,KACF0S,EACExF,EACA,cACAyF,EACAle,EACA4D,EAAQJ,mBAGd,GACF,IAEAnF,OAAOwG,KAAK4T,EAAMpI,+BAA+B9J,SAAQ,SACvD2X,GAEAzF,EAAMpI,8BAA8B6N,GAAe3X,SAAQ,SAAUvG,GACnEqf,EAAI9T,KAuEV,SAAmCkN,EAAOyF,EAAele,EAAMme,GAC7D,IAAImB,EAAmB7G,EAAM/C,2BAA2BwI,GACpD1I,EAAYiD,EAAMhD,+BAA+B6J,GACjD9hB,EAAQwC,EAAKxC,MAAMgY,GACnB+J,EAAYzQ,EAAKqP,GAAe,SAAU3M,GAC5C,OAAOA,EAAMxR,OAASke,CACxB,IAEI1M,EAAQhU,EAAM2D,QAAO,SAAUqe,EAAmBpH,GACpD,IAAIqH,EACFD,GACA1Q,EAAK0Q,EAAkB3c,MAAM,SAAUsL,GACrC,OAAOA,EAAEnO,OAASoY,CACpB,IACF,YAAoB1O,IAAb+V,EAAyBA,EAAWD,CAC7C,GAAGD,GAECpjB,EAASqV,GAASA,EAAMrV,OAAU,EAClCgd,EAAc3H,GAASA,EAAM2H,aAAe,EAC5CtD,EAAQrE,GAASA,EAAMqE,MAAS,GAEpC,MAAO,CACL/S,KAAM,eACNob,cAAeA,EACfle,KAAM6V,EACN1Z,MAAOA,EACPgd,WAAYA,EAEhB,CAlGQxH,CACE8G,EACAyF,EACAle,EACA4D,EAAQmM,oBAGd,GACF,IAEA1R,OAAOwG,KAAK4T,EAAMtI,oBAAoB5J,SAAQ,SAAU2X,GACtD,IAAIhN,EAAYuH,EAAMtI,mBAAmB+N,GACzC7f,OAAOwG,KAAKqM,GAAW3K,SAAQ,SAAU4K,GACvCD,EAAUC,GAAU5K,SAAQ,SAAU9G,GACpC4f,EAAI9T,KAAK,CACPzI,KAAM,UACNob,cAAeA,EACfle,KAAMP,EACNigB,aAAcjgB,EACd0R,SAAUA,GAEd,GACF,GACF,IAEAsH,EAAMrI,eAAe7J,SAAQ,SAAUvG,GACrCqf,EAAI9T,KAAK,CAAEzI,KAAM,MAAOob,cAAe,QAASle,KAAMA,GACxD,IAEOqf,CACT,EAsEAtV,EAAOC,QAAUuC,8BCxnCjB,IAAIjD,EAAe,EAAQ,MAEvBqD,EAAgB,EAAQ,MACxBuN,EAAmB,yBACnBlN,EAAW,EAAQ,MACnBgC,EAAQ,EAAQ,KAChB1B,EAAgB,EAAQ,MACxBC,EAAO,EAAQ,MACfoS,EAAiB,EAAQ,MACzBrT,EAAmB,EAAQ,MAC3BC,EAAgB,EAAQ,MACxB1M,EAAU,EAAQ,KAyGtB,SAASwM,EAAoBI,EAAQ3D,EAAOoS,GACJ,mBAA3BzO,EAAOmT,iBAChBnT,EAAOmT,gBAAgB,cAAgB/f,EAAU,KAGnD0J,KAAKsW,UAAUpT,GACf,IAAIC,EAAOwO,GAAW,CAAC,EACvBxO,EAAK5D,MAAQA,EACbS,KAAKkP,MAAQnM,EAAiBgF,KAAK5E,GACnCnD,KAAKwD,YAAc,KACnBxD,KAAKuW,SAAW,EAChBvW,KAAKwW,sBAAwB,EAC7BxW,KAAKyW,eAAiB,GACtBzW,KAAK0W,kBAAoB,CAC3B,CAszBA,SAASC,EAAepc,GACtB,GAAIA,EAAO,EAAG,MAAM,IAAIgH,MAAM,2BAO9B,OALAvB,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAM/R,QAAQ5C,GAC1Bsc,aAAa,IAGR7W,IACT,CA8MA,SAAS8W,IACP,OAAO9W,KAAKkP,MAAM3U,IACpB,CA7gCAkJ,EAASX,EAAqB/C,GAa9B+C,EAAoBpC,UAAUtD,OAAS,WAErC,OADA4C,KAAK+W,QAAQ,CAAEC,wBAAwB,IAChChX,IACT,EAEA8C,EAAoBpC,UAAUuW,6BAA+B,WAE3D,OADAjX,KAAK+W,QAAQ,CAAEC,wBAAwB,IAChChX,IACT,EAOA8C,EAAoBpC,UAAUwW,SAAW,WACvC,IAAIhI,EAAQlP,KAAKkP,MACjB,OAAOkH,EAAee,qBAAqBjI,EAC7C,EAsCApM,EAAoBpC,UAAU0W,WAAa,SAAUzF,EAAS0F,GAC5D,IAAIC,EAAa3F,EAEb3R,KAAKkP,MAAMpG,mBAAmB6I,GAD9B3R,KAAKkP,MAELqI,EAAUnB,EAAeoB,YAAYF,EAAU/X,MAAO+X,GAEtDvQ,EAAO/G,KAQX,GANAA,KAAK0W,oBAEL1W,KAAKgB,KAAK,aAAc,CACtBkO,MAAOoI,KAGLD,EAuBJ,OAAOrX,KAAKkD,OAAO9F,OAAOma,GAASE,MACjC,SAAU/b,GAGR,OAFAqL,EAAK2P,oBAC0B,IAA3B3P,EAAK2P,mBAAyB3P,EAAK/F,KAAK,oBACrC,CACLtF,QAAS,IAAIsH,EAAcsU,EAAW5b,EAAQrB,SAC9C6U,MAAOoI,EACPI,kBAAmBhc,EAEvB,IACA,SAAU3F,GAGR,MAFAgR,EAAK2P,oBAC0B,IAA3B3P,EAAK2P,mBAAyB3P,EAAK/F,KAAK,oBACtCjL,CACR,IApCAiK,KAAKkD,OACF9F,OAAOma,GACPE,MAAK,SAAU/b,GACdqL,EAAK2P,oBAC0B,IAA3B3P,EAAK2P,mBACP3P,EAAK/F,KAAK,oBAGZqW,EAAG,KAAM,IAAIrU,EAAcsU,EAAW5b,EAAQrB,SAAUid,EAC1D,IACCK,OAAM,SAAUpkB,GACfwT,EAAK2P,oBAC0B,IAA3B3P,EAAK2P,mBACP3P,EAAK/F,KAAK,oBAGZqW,EAAG9jB,EAAK,KAAM+jB,EAChB,GAqBN,EAaAxU,EAAoBpC,UAAUkX,YAAc,SAAUjG,GAEpDne,QAAQ8S,KAAK,yDACb,IAAI4I,EAAQlP,KAAKkP,MACb2I,EAAgB7X,KAAKyW,eAAe,GACxC,IAAKoB,EACH,OAAOC,QAAQC,QAAQ,IAEzB,IAAIC,EAAeH,EAAcjU,iBAAiBsL,GAC9C5V,EAAOmM,EACT,CACEwS,wBAAyBtG,EAAQsG,wBACjCzd,OAAQmX,EAAQnX,QAElB,CACE2L,OAAQnC,EAAKoS,EAAee,qBAAqBa,GAAe,CAC9D,sBACA,cACA,+BACA,0BAKFE,EACF,8GACF,GAAqC,mBAA1BlY,KAAKkD,OAAOiV,UACrB,MAAM,IAAI5W,MAAM2W,GAElB,IAAI3Y,EAAQS,KAAKkD,OAAOiV,UAAUH,EAAazY,OAC/C,GAAiC,mBAAtBA,EAAMqY,YACf,MAAM,IAAIrW,MAAM2W,GAElB,OAAO3Y,EAAMqY,YAAYI,EAAanf,MAAO8Y,EAAQyG,eAAgB9e,EACvE,EAoCAwJ,EAAoBpC,UAAU2X,qBAAuB,SACnDpQ,EACApP,EACAyf,EACAC,GAEA,IAAIC,EAA4D,mBAArCxY,KAAKkD,OAAOmV,qBACnCI,EAAsD,mBAA1BzY,KAAKkD,OAAOiV,UAC5C,IACGK,IACAC,GAC6B,mBAAvBzY,KAAKkD,OAAO9F,OAEnB,MAAM,IAAImE,MACR,yKAIJ,IAAI2N,EAAQlP,KAAKkP,MAAMpG,mBAAmByP,GAAa,CAAC,GACpDG,EAAgBxJ,EAAMnF,mBAAmB9B,GACzC0Q,EAAevC,EAAewC,uBAChC3Q,EACApP,EACAyf,EACApJ,GAGFlP,KAAK0W,oBAEL,IACImC,EADA9R,EAAO/G,KAoCX,OAjCIwY,EACFK,EAA8B7Y,KAAKkD,OAAOmV,qBAAqB,CAC7D,CAAElhB,UAAW+X,EAAM3P,MAAO4G,OAAQwS,KAG3BF,EACTI,EAA8B7Y,KAAKkD,OAChCiV,UAAUjJ,EAAM3P,OAChB8Y,qBAAqBM,WAIjBA,EAAa/O,UACpBiP,EAA8B7Y,KAAKkD,OAChC9F,OAAO,CACN,CACE7D,KAAM,QACN0O,MAAOA,EACP9Q,UAAW+X,EAAM3P,MACjB4G,OAAQwS,KAGXlB,MAAK,SAAyBqB,GAC7B,OAAOA,EAASze,QAAQ,EAC1B,KAGJ2F,KAAKgB,KAAK,uBAAwB,CAChCkO,MAAOA,EACPjH,MAAOA,EACPpP,MAAOA,IAGFggB,EAA4BpB,MACjC,SAAsB/b,GAapB,OAZAqL,EAAK2P,oBAC0B,IAA3B3P,EAAK2P,mBAAyB3P,EAAK/F,KAAK,qBAE5CtF,EAAUhB,MAAMC,QAAQe,GAAWA,EAAQ,GAAKA,GAExCqd,UAAU/b,SAAQ,SAAU4H,GAClCA,EAAE8L,aAAeC,EAAiB/L,EAAE1O,OACpC0O,EAAEP,UAAYqU,EACVxJ,EAAMtC,0BAA0B3E,EAAOrD,EAAE8L,cACzCxB,EAAMxC,eAAezE,EAAOrD,EAAE8L,aACpC,IAEOhV,CACT,IACA,SAAU3F,GAGR,MAFAgR,EAAK2P,oBAC0B,IAA3B3P,EAAK2P,mBAAyB3P,EAAK/F,KAAK,oBACtCjL,CACR,GAEJ,EAWA+M,EAAoBpC,UAAUxD,SAAW,SAAU8b,GAMjD,OALAhZ,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYlR,SAAS8b,GACvCnC,aAAa,IAGR7W,IACT,EAyBA8C,EAAoBpC,UAAU2H,iBAAmB,SAAU5R,GAMzD,OALAuJ,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAY/F,iBAAiB5R,GAC/CogB,aAAa,IAGR7W,IACT,EAUA8C,EAAoBpC,UAAUqI,UAAY,WAMxC,OALA/I,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYrF,YAC9B8N,aAAa,IAGR7W,IACT,EAaA8C,EAAoBpC,UAAU3D,8BAAgC,SAC5DkL,EACA/R,GAOA,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYrR,8BAA8BkL,EAAO/R,GACnE2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAUuY,qBAAuB,WACnD,OAAOjZ,KAAKjD,8BAA8B4E,MAAM3B,KAAMsB,UACxD,EAeAwB,EAAoBpC,UAAU2L,+BAAiC,SAC7DpE,EACAqE,GAOA,OALAtM,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAY/B,+BAA+BpE,EAAOqE,GACpEuK,aAAa,IAGR7W,IACT,EAcA8C,EAAoBpC,UAAU8I,qBAAuB,SACnDpF,EACAwD,EACA1R,GASA,OAPA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MACTd,YACA5E,qBAAqBpF,EAAWwD,EAAU1R,GAC7C2gB,aAAa,IAGR7W,IACT,EAaA8C,EAAoBpC,UAAUqK,mBAAqB,SAAU9C,EAAO/R,GAMlE,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYrD,mBAAmB9C,EAAO/R,GACxD2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAUwY,UAAY,WACxC,OAAOlZ,KAAK+K,mBAAmBpJ,MAAM3B,KAAMsB,UAC7C,EAaAwB,EAAoBpC,UAAUyY,kBAAoB,SAAUlR,EAAO/R,GAMjE,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYpD,qBAAqB/C,EAAO/R,GAC1D2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAU0Y,WAAa,WACzC,OAAOpZ,KAAKmZ,kBAAkBxX,MAAM3B,KAAMsB,UAC5C,EAYAwB,EAAoBpC,UAAU2Y,OAAS,SAAUnO,GAM/C,OALAlL,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYnD,iBAAiBC,GAC/C2L,aAAa,IAGR7W,IACT,EAoBA8C,EAAoBpC,UAAUuJ,wBAA0B,SACtD7F,EACAwD,EACA1R,GASA,OAPA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MACTd,YACAnE,wBAAwB7F,EAAWwD,EAAU1R,GAChD2gB,aAAa,IAGR7W,IACT,EAgBA8C,EAAoBpC,UAAUgL,iCAAmC,SAC/DzD,EACA/R,GASA,OAPA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MACTd,YACA1C,iCAAiCzD,EAAO/R,GAC3C2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAU4Y,wBAA0B,WACtD,OAAOtZ,KAAK0L,iCAAiC/J,MAAM3B,KAAMsB,UAC3D,EAUAwB,EAAoBpC,UAAU8L,kCAAoC,SAChEvE,GAOA,OALAjI,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAY5B,kCAAkCvE,GAChE4O,aAAa,IAGR7W,IACT,EAgBA8C,EAAoBpC,UAAU8K,sBAAwB,SAAUvD,EAAO/R,GAMrE,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAY5C,sBAAsBvD,EAAO/R,GAC3D2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAU6Y,aAAe,WAC3C,OAAOvZ,KAAKwL,sBAAsB7J,MAAM3B,KAAMsB,UAChD,EAgBAwB,EAAoBpC,UAAU8Y,qBAAuB,SAAUvR,EAAO/R,GAMpE,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAY3C,wBAAwBxD,EAAO/R,GAC7D2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAU+Y,cAAgB,WAC5C,OAAOzZ,KAAKwZ,qBAAqB7X,MAAM3B,KAAMsB,UAC/C,EAYAwB,EAAoBpC,UAAUgZ,UAAY,SAAUxO,GAMlD,OALAlL,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYzC,oBAAoBT,GAClD2L,aAAa,IAGR7W,IACT,EAaA8C,EAAoBpC,UAAUiZ,qBAAuB,SAAU1R,EAAO/R,GAMpE,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYpC,6BAA6B/D,EAAO/R,GAClE2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAUkZ,cAAgB,WAC5C,OAAO5Z,KAAK2Z,qBAAqBhY,MAAM3B,KAAMsB,UAC/C,EAiBAwB,EAAoBpC,UAAUmE,iBAAmB,SAAUoD,EAAO/R,GAChE,OAAO8J,KAAK6L,sBAAsB5D,EAAO/R,EAC3C,EAgBA4M,EAAoBpC,UAAUmL,sBAAwB,SAAU5D,EAAO/R,GAMrE,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYvC,sBAAsB5D,EAAO/R,GAC3D2gB,aAAa,IAGR7W,IACT,EAMA8C,EAAoBpC,UAAUmZ,aAAe,WAC3C,OAAO7Z,KAAK6L,sBAAsBlK,MAAM3B,KAAMsB,UAChD,EAYAwB,EAAoBpC,UAAUoZ,UAAY,SAAU5O,GAMlD,OALAlL,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAY3B,oBAAoBvB,GAClD2L,aAAa,IAGR7W,IACT,EAWA8C,EAAoBpC,UAAUqZ,SAAW,WACvC,IAAIxf,EAAOyF,KAAKkP,MAAM3U,MAAQ,EAC9B,OAAOyF,KAAK7C,QAAQ5C,EAAO,EAC7B,EAWAuI,EAAoBpC,UAAUsZ,aAAe,WAC3C,IAAIzf,EAAOyF,KAAKkP,MAAM3U,MAAQ,EAC9B,OAAOyF,KAAK7C,QAAQ5C,EAAO,EAC7B,EA4BAuI,EAAoBpC,UAAUiW,eAAiBA,EAU/C7T,EAAoBpC,UAAUvD,QAAUwZ,EAWxC7T,EAAoBpC,UAAUsI,SAAW,SAAUvS,GAMjD,OALAuJ,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYpF,SAASvS,GACvCogB,aAAa,IAGR7W,IACT,EAmBA8C,EAAoBpC,UAAUkN,kBAAoB,SAAUC,EAAW3X,GAMrE,OALA8J,KAAK4W,QAAQ,CACX1H,MAAOlP,KAAKkP,MAAMd,YAAYR,kBAAkBC,EAAW3X,GAC3D2gB,aAAa,IAGR7W,IACT,EASA8C,EAAoBpC,UAAUuZ,SAAW,SAAUC,GAMjD,OALAla,KAAK4W,QAAQ,CACX1H,MAAOnM,EAAiBgF,KAAKmS,GAC7BrD,aAAa,IAGR7W,IACT,EAmBA8C,EAAoBpC,UAAUyZ,0CAC5B,SAAUD,GAER,OADAla,KAAKkP,MAAQ,IAAInM,EAAiBmX,GAC3Bla,IACT,EAyBF8C,EAAoBpC,UAAU0Z,eAAiB,SAAUhW,GACvD,QAAIL,EAAc/D,KAAKkP,MAAM7E,sBAAsBjG,MAExCpE,KAAKkP,MAAMrF,mBAAmBzF,GAChCpE,KAAKkP,MAAMxC,eAAetI,GACxBpE,KAAKkP,MAAMnF,mBAAmB3F,GAChCpE,KAAKkP,MAAMtC,0BAA0BxI,KACnCpE,KAAKkP,MAAMpE,oBAAoB1G,IACjCpE,KAAKkP,MAAM3C,2BAA2BnI,GASjD,EAqBAtB,EAAoBpC,UAAUgT,WAAa,SAAUzL,EAAO/R,GAC1D,OAAO8J,KAAKkP,MAAMvC,iBAAiB1E,EAAO/R,EAC5C,EAMA4M,EAAoBpC,UAAU2Z,qBAAuB,SAAUpS,EAAO/R,GACpE,OAAO8J,KAAKkP,MAAMtC,0BAA0B3E,EAAO/R,EACrD,EAOA4M,EAAoBpC,UAAU4Z,OAAS,SAAUpP,GAC/C,OAAOlL,KAAKkP,MAAM/D,aAAaD,EACjC,EAMApI,EAAoBpC,UAAUyK,aAAe,WAC3C,OAAOnL,KAAKua,kBAAkB5Y,MAAM3B,KAAMsB,UAC5C,EASAwB,EAAoBpC,UAAU8Z,SAAW,WACvC,OAAOxa,KAAKkP,MAAM3P,KACpB,EAWAuD,EAAoBpC,UAAUoW,eAAiBA,EAM/ChU,EAAoBpC,UAAU+Z,QAAU3D,EAOxChU,EAAoBpC,UAAUga,QAAU,WACtC,OAAO1a,KAAKkP,MAAMrI,cACpB,EA8CA/D,EAAoBpC,UAAUmV,eAAiB,SAAUjM,GACvD,IAAIiD,EAAc,GAElB,GAAI7M,KAAKkP,MAAMrF,mBAAmBD,GACV5J,KAAKkP,MAAMvF,0BAA0BC,GAE3C5M,SAAQ,SAAU2d,GAChC9N,EAAY7K,KAAK,CACf9L,MAAOykB,EACPphB,KAAM,eAEV,IAEyByG,KAAKkP,MAAMlF,sBAAsBJ,GAEvC5M,SAAQ,SAAU2d,GACnC9N,EAAY7K,KAAK,CACf9L,MAAOykB,EACPphB,KAAM,WAEV,SACK,GAAIyG,KAAKkP,MAAMnF,mBAAmBH,GAAY,CAEjD5J,KAAKkP,MAAMpF,0BAA0BF,GAEhB5M,SAAQ,SAAU2d,GACvC9N,EAAY7K,KAAK,CACf9L,MAAOykB,EACPphB,KAAM,eAEV,GACF,CAEA,IAAIqN,EAAqB5G,KAAKkP,MAAM7E,sBAAsBT,GAY1D,OAVA9U,OAAOwG,KAAKsL,GAAoB5J,SAAQ,SAAU4K,GAChD,IAAI1R,EAAQ0Q,EAAmBgB,GAE/BiF,EAAY7K,KAAK,CACf9L,MAAOA,EACP0R,SAAUA,EACVrO,KAAM,WAEV,IAEOsT,CACT,EAQA/J,EAAoBpC,UAAU4J,qBAAuB,SACnDlG,EACAwD,GAEA,OAAO5H,KAAKkP,MAAM5E,qBAAqBlG,EAAWwD,EACpD,EAOA9E,EAAoBpC,UAAUiO,+BAAiC,SAC7D/E,GAEA,OAAO5J,KAAKkP,MAAMP,+BAA+B/E,EACnD,EAcA9G,EAAoBpC,UAAUqW,QAAU,SAAUpF,GAChD,IAAIzC,EAAQlP,KAAKkP,MACb0L,EAAS,GACTC,EAAc,GAEblJ,EAAQqF,yBACX6D,EAAczE,EAAeoB,YAAYtI,EAAM3P,MAAO2P,GAEtD0L,EAAO5Y,KAAK,CACVkN,MAAOA,EACP4L,aAAcD,EAAY3mB,OAC1B6mB,OAAQ/a,OAGVA,KAAKgB,KAAK,SAAU,CAClBkO,MAAOA,EACP7U,QAAS2F,KAAKwD,eAIlB,IAAIwX,EAAiBhb,KAAKyW,eAAejhB,KAAI,SAAUqiB,GACrD,IAAIG,EAAeH,EAAcjU,iBAAiBsL,GAC9C+L,EAAsBjD,EAAazY,MACnC6W,EAAeoB,YAAYQ,EAAazY,MAAOyY,GAC/C,GAaJ,OAXA4C,EAAO5Y,KAAK,CACVkN,MAAO8I,EACP8C,aAAcG,EAAoB/mB,OAClC6mB,OAAQlD,IAGVA,EAAc7W,KAAK,SAAU,CAC3BkO,MAAO8I,EACP3d,QAASwd,EAAcrU,cAGlByX,CACT,IAEI1D,EAAU7c,MAAMgG,UAAUlH,OAAOmI,MAAMkZ,EAAaG,GAEpDE,EAAUlb,KAAKuW,WAGnB,GAFAvW,KAAK0W,qBAEAa,EAAQrjB,OACX,OAAO4jB,QAAQC,QAAQ,CAAE1d,QAAS,KAAMod,KACtCzX,KAAKmb,yBAAyBC,KAAKpb,KAAM4a,EAAQM,IAIrD,IACElb,KAAKkD,OACF9F,OAAOma,GACPE,KAAKzX,KAAKmb,yBAAyBC,KAAKpb,KAAM4a,EAAQM,IACtDvD,MAAM3X,KAAKqb,sBAAsBD,KAAKpb,KAAMkb,GACjD,CAAE,MAAOznB,GAEPuM,KAAKgB,KAAK,QAAS,CACjBvN,MAAOA,GAEX,CAGF,EAYAqP,EAAoBpC,UAAUya,yBAA2B,SACvDP,EACAM,EACAxf,GAIA,KAAIwf,EAAUlb,KAAKwW,sBAAnB,CAKAxW,KAAK0W,mBAAqBwE,EAAUlb,KAAKwW,qBACzCxW,KAAKwW,qBAAuB0E,EAEG,IAA3Blb,KAAK0W,mBAAyB1W,KAAKgB,KAAK,oBAE5C,IAAI3G,EAAUqB,EAAQrB,QAAQqH,QAE9BkZ,EAAO5d,SAAQ,SAAU3E,GACvB,IAAI6W,EAAQ7W,EAAE6W,MACV4L,EAAeziB,EAAEyiB,aACjBC,EAAS1iB,EAAE0iB,OACXO,EAAkBjhB,EAAQoI,OAAO,EAAGqY,GAEnC5L,EAAM3P,OAQXwb,EAAOvX,YAAc,IAAIR,EAAckM,EAAOoM,GAE9CP,EAAO/Z,KAAK,SAAU,CACpB3G,QAAS0gB,EAAOvX,YAChB0L,MAAOA,KAXP6L,EAAO/Z,KAAK,SAAU,CACpB3G,QAAS,KACT6U,MAAOA,GAWb,GA7BA,CA8BF,EAEApM,EAAoBpC,UAAU2a,sBAAwB,SACpDH,EACAznB,GAEIynB,EAAUlb,KAAKwW,uBAKnBxW,KAAK0W,mBAAqBwE,EAAUlb,KAAKwW,qBACzCxW,KAAKwW,qBAAuB0E,EAE5Blb,KAAKgB,KAAK,QAAS,CACjBvN,MAAOA,IAGsB,IAA3BuM,KAAK0W,mBAAyB1W,KAAKgB,KAAK,oBAC9C,EAEA8B,EAAoBpC,UAAU6a,mBAAqB,SACjD1iB,EACA2iB,EACA9S,EACAD,GAEA,OACE5P,GACwB,IAAxB2iB,EAAatnB,QACa,IAA1BwU,EAAexU,QACO,IAAtBuU,EAAWvU,MAEf,EAQA4O,EAAoBpC,UAAU+a,2BAA6B,SAAUxT,GACnE,OACEjI,KAAKkP,MAAMwM,uBAAuBzT,IAClCjI,KAAKkP,MAAMwM,uBAAuBzT,GAAO/T,OAAS,CAEtD,EAEA4O,EAAoBpC,UAAUkW,QAAU,SAAU+E,GAChD,IAAIzM,EAAQyM,EAAMzM,MACd2H,EAAc8E,EAAM9E,YAEpB3H,IAAUlP,KAAKkP,QACjBlP,KAAKkP,MAAQA,EAEblP,KAAKgB,KAAK,SAAU,CAClBkO,MAAOlP,KAAKkP,MACZ7U,QAAS2F,KAAKwD,YACdqT,YAAaA,IAGnB,EAMA/T,EAAoBpC,UAAUkb,WAAa,WAEzC,OADI5b,KAAKkD,OAAO0Y,YAAY5b,KAAKkD,OAAO0Y,aACjC5b,IACT,EAQA8C,EAAoBpC,UAAU4V,UAAY,SAAUuF,GAClD,OAAI7b,KAAKkD,SAAW2Y,IAEqB,mBAA9BA,EAAUxF,iBACnBwF,EAAUxF,gBAAgB,cAAgB/f,EAAU,KAEtD0J,KAAKkD,OAAS2Y,GALwB7b,IAQxC,EAMA8C,EAAoBpC,UAAUob,UAAY,WACxC,OAAO9b,KAAKkD,MACd,EAqBAJ,EAAoBpC,UAAUqb,OAAS,SAAUzY,GAC/C,IAAIuU,EAAgB,IAAIzU,EAAcpD,KAAMsD,GAE5C,OADAtD,KAAKyW,eAAezU,KAAK6V,GAClBA,CACT,EAUA/U,EAAoBpC,UAAUiD,oBAAsB,SAAUkU,GAC5D,IAAImE,EAAMhc,KAAKyW,eAAeniB,QAAQujB,GACtC,IAAa,IAATmE,EAAY,MAAM,IAAIza,MAAM,mCAChCvB,KAAKyW,eAAehU,OAAOuZ,EAAK,EAClC,EAMAlZ,EAAoBpC,UAAUub,mBAAqB,WACjD,OAAOjc,KAAK0W,kBAAoB,CAClC,EAkBAlW,EAAOC,QAAUqC,yBC7jDjBtC,EAAOC,QAAU,SAAiBsM,GAChC,OAAKrS,MAAMC,QAAQoS,GAIZA,EAAMza,OAAO+S,SAHX,EAIX,yBCJA7E,EAAOC,QAAU,WAGf,OAFc/F,MAAMgG,UAAUgB,MAAMD,KAAKH,WAE1B4a,aAAY,SAAUrkB,EAAKskB,GAWxC,OAVArnB,OAAOwG,KAAKxG,OAAOqnB,IAASnf,SAAQ,SAAUnH,QACxBsK,IAAhBgc,EAAOtmB,UAGMsK,IAAbtI,EAAIhC,WAECgC,EAAIhC,GAEbgC,EAAIhC,GAAOsmB,EAAOtmB,GACpB,IACOgC,CACT,GAAG,CAAC,EACN,yBCMA2I,EAAOC,QAAU,CACfkQ,iBAnBF,SAA0Bza,GACxB,MAAqB,iBAAVA,EAA2BA,EAE/BkmB,OAAOlmB,GAAO2E,QAAQ,KAAM,MACrC,EAgBEgW,mBARF,SAA4B3a,GAC1B,MAAqB,iBAAVA,EAA2BA,EAE/BA,EAAM2E,QAAQ,OAAQ,IAC/B,yBCrBA2F,EAAOC,QAAU,SAAcsM,EAAOsP,GACpC,GAAK3hB,MAAMC,QAAQoS,GAInB,IAAK,IAAIxW,EAAI,EAAGA,EAAIwW,EAAM7Y,OAAQqC,IAChC,GAAI8lB,EAAWtP,EAAMxW,IACnB,OAAOwW,EAAMxW,EAKnB,yBCZAiK,EAAOC,QAAU,SAAcsM,EAAOsP,GACpC,IAAK3hB,MAAMC,QAAQoS,GACjB,OAAQ,EAGV,IAAK,IAAIxW,EAAI,EAAGA,EAAIwW,EAAM7Y,OAAQqC,IAChC,GAAI8lB,EAAWtP,EAAMxW,IACnB,OAAOA,EAGX,OAAQ,CACV,8BCZA,IAAIgP,EAAO,EAAQ,KAQnB/E,EAAOC,QAAU,SAAoB6N,EAAQgO,GAC3C,IAAIC,GAAuBD,GAAY,IAAI9mB,KAAI,SAAU8X,GACvD,OAAOA,EAAKrZ,MAAM,IACpB,IAEA,OAAOqa,EAAO1W,QACZ,SAA0B4kB,EAAKlP,GAC7B,IAAImP,EAAkBnP,EAAKrZ,MAAM,KAE7ByoB,EAAkBnX,EACpBgX,GACA,SAAUI,GACR,OAAOA,EAAmB,KAAOF,EAAgB,EACnD,IAGF,OAAIA,EAAgBvoB,OAAS,IAAMwoB,GACjCF,EAAI,GAAGxa,KAAKya,EAAgB,IAC5BD,EAAI,GAAGxa,KAAKya,EAAgB,IACrBD,IAGTA,EAAI,GAAGxa,KAAK0a,EAAgB,IAC5BF,EAAI,GAAGxa,KAAK0a,EAAgB,IACrBF,EACT,GACA,CAAC,GAAI,IAET,yBCzBAhc,EAAOC,QAXP,SAAkBmc,EAAMC,GACtBD,EAAKlc,UAAY5L,OAAOgoB,OAAOD,EAAUnc,UAAW,CAClDiI,YAAa,CACXzS,MAAO0mB,EACPG,YAAY,EACZC,UAAU,EACVC,cAAc,IAGpB,yBCAAzc,EAAOC,QATP,SAAsByc,EAAMC,GAC1B,OAAOD,EAAK5qB,QAAO,SAAU4D,EAAOqJ,GAClC,OACE4d,EAAK7oB,QAAQ4B,IAAU,GACvBgnB,EAAK5oB,QAAQ4B,KAAWqJ,CAE5B,GACF,wBCAA,SAAS6d,EAA0BlnB,GACjC,MACmB,mBAAVA,GACPwE,MAAMC,QAAQzE,IAC4B,oBAA1CpB,OAAO4L,UAAUqO,SAAStN,KAAKvL,EAEnC,CAEA,SAASmnB,EAAOpnB,EAAQkmB,GACtB,GAAIlmB,IAAWkmB,EACb,OAAOlmB,EAIT,IAAK,IAAIJ,KAAOsmB,EACd,GACGrnB,OAAO4L,UAAU4c,eAAe7b,KAAK0a,EAAQtmB,IACtC,cAARA,GACQ,gBAARA,EAHF,CASA,IAAI0nB,EAAYpB,EAAOtmB,GACnB2nB,EAAYvnB,EAAOJ,QAEE,IAAd2nB,QAAkD,IAAdD,IAM7CH,EAA0BI,IAC1BJ,EAA0BG,GAE1BtnB,EAAOJ,GAAOwnB,EAAOG,EAAWD,GAEhCtnB,EAAOJ,GA5CU,iBADRK,EA6CWqnB,IA5CmB,OAAVrnB,EACxBmnB,EAAO3iB,MAAMC,QAAQzE,GAAS,GAAK,CAAC,EAAGA,GAEzCA,EAyBL,CA7BJ,IAAeA,EAgDb,OAAOD,CACT,CAgCAuK,EAAOC,QAfP,SAAexK,GACRmnB,EAA0BnnB,KAC7BA,EAAS,CAAC,GAGZ,IAAK,IAAIM,EAAI,EAAGknB,EAAInc,UAAUpN,OAAQqC,EAAIknB,EAAGlnB,IAAK,CAChD,IAAI4lB,EAAS7a,UAAU/K,GAEnB6mB,EAA0BjB,IAC5BkB,EAAOpnB,EAAQkmB,EAEnB,CACA,OAAOlmB,CACT,yBC3EAuK,EAAOC,QAJP,SAAuBid,GACrB,OAAOA,GAAO5oB,OAAOwG,KAAKoiB,GAAKxpB,OAAS,CAC1C,yBCcAsM,EAAOC,QAfP,SAAuC0b,EAAQwB,GAC7C,GAAe,OAAXxB,EAAiB,MAAO,CAAC,EAC7B,IAEItmB,EACAU,EAHAN,EAAS,CAAC,EACV2nB,EAAa9oB,OAAOwG,KAAK6gB,GAG7B,IAAK5lB,EAAI,EAAGA,EAAIqnB,EAAW1pB,OAAQqC,IACjCV,EAAM+nB,EAAWrnB,GAEbonB,EAASrpB,QAAQuB,IAAQ,IAC7BI,EAAOJ,GAAOsmB,EAAOtmB,IAEvB,OAAOI,CACT,yBCdA,SAAS4nB,EAAiB3nB,EAAO4nB,GAC/B,GAAI5nB,IAAU4nB,EAAO,CACnB,IAAIC,OAAyB5d,IAAVjK,EACf8nB,EAAsB,OAAV9nB,EAEZ+nB,OAAyB9d,IAAV2d,EACfI,EAAsB,OAAVJ,EAEhB,IACII,GAAahoB,EAAQ4nB,GACtBE,GAAaC,IACbF,EAED,OAAO,EAET,IACIC,GAAa9nB,EAAQ4nB,GACtBI,GAAaH,IACbE,EAED,OAAQ,CAEZ,CACA,OAAO,CACT,CAqDAzd,EAAOC,QA7CP,SAAiB0d,EAAYC,EAAWC,GACtC,IAAK3jB,MAAMC,QAAQwjB,GACjB,MAAO,GAGJzjB,MAAMC,QAAQ0jB,KACjBA,EAAS,IAGX,IAAIrM,EAASmM,EAAW3oB,KAAI,SAAUU,EAAOqJ,GAC3C,MAAO,CACL+e,SAAUF,EAAU5oB,KAAI,SAAU+oB,GAChC,OAAOroB,EAAMqoB,EACf,IACAhf,MAAOA,EACPrJ,MAAOA,EAEX,IAuBA,OArBA8b,EAAO1E,MAAK,SAAkBkR,EAAQV,GAGpC,IAFA,IAAIve,GAAS,IAEJA,EAAQif,EAAOF,SAASpqB,QAAQ,CACvC,IAAI4hB,EAAM+H,EAAiBW,EAAOF,SAAS/e,GAAQue,EAAMQ,SAAS/e,IAClE,GAAIuW,EACF,OAAIvW,GAAS8e,EAAOnqB,OACX4hB,EAEa,SAAlBuI,EAAO9e,IACDuW,EAEHA,CAEX,CAIA,OAAO0I,EAAOjf,MAAQue,EAAMve,KAC9B,IAEOyS,EAAOxc,KAAI,SAAUsgB,GAC1B,OAAOA,EAAI5f,KACb,GACF,yBC7DAsK,EAAOC,QAdP,SAASiF,EAAYf,GACnB,GAAiB,iBAANA,EACT,OAAOA,EACF,GAAiB,iBAANA,EAChB,OAAO6C,WAAW7C,GACb,GAAIjK,MAAMC,QAAQgK,GACvB,OAAOA,EAAEnP,IAAIkQ,GAGf,MAAM,IAAInE,MACR,wEAEJ,+BCZA,IAAIkE,EAAQ,EAAQ,KAEpB,SAASgZ,EAAWf,GAClB,OAAO5oB,OAAOwG,KAAKoiB,GAChBpQ,OACA1V,QAAO,SAAUC,EAAK6mB,GAErB,OADA7mB,EAAI6mB,GAAQhB,EAAIgB,GACT7mB,CACT,GAAG,CAAC,EACR,CAEA,IAAIue,EAAiB,CASnBoB,YAAa,SAAoBjY,EAAO2P,GACtC,IAAIqI,EAAU,GAoGd,OAjGAA,EAAQvV,KAAK,CACX7K,UAAWoI,EACX4G,OAAQiQ,EAAee,qBAAqBjI,KAI9CA,EAAM/B,8BAA8BnQ,SAAQ,SAAUmW,GACpDoE,EAAQvV,KAAK,CACX7K,UAAWoI,EACX4G,OAAQiQ,EAAeuI,iCACrBzP,EACAiE,IAGN,IAGAjE,EAAM7B,+BAA+BrQ,SAAQ,SAAUmW,GACrD,IAAItI,EAAoBqE,EAAM/C,2BAA2BgH,GACrDhL,EAAoB+G,EAAM9G,0BAA0B+K,GACpDlH,EAAYiD,EAAMhD,+BAA+BrB,GAIrD,GACE1C,EAAkBjU,OAAS,GAC3BiU,EAAkB,GAAGlU,MAAMgY,GAAW/X,OAAS,EAC/C,CAEA,IAAI0qB,EAAazW,EAAkB,GAChClU,MAAMgY,GACNvK,MAAM,GAAI,GACV9J,QAAO,SAA0BpC,EAAKqpB,EAAS5O,GAC9C,OAAOza,EAAIgE,OAAO,CAChB4K,UAAWyG,EAAkBuG,WAAWnB,GACxC/Z,MACY,IAAV+Z,EACI4O,EACA,CAACrpB,EAAIA,EAAItB,OAAS,GAAGgC,MAAO2oB,GAAS1qB,KAAK8X,IAEpD,GAAG,IAEL2S,EAAW5hB,SAAQ,SAAU1K,EAAQ2d,GACnC,IAAI9J,EAASiQ,EAAeuI,iCAC1BzP,EACA5c,EAAO8R,UACG,IAAV6L,GAIF,SAAS6O,EAA2B5oB,GAClC,OAAO2U,EAAkBuG,WAAWjZ,MAAK,SAAUiM,GACjD,OAAOA,IAAclO,EAAMjC,MAAM,KAAK,EACxC,GACF,CAEA,IAAI8qB,GAAwB5Y,EAAOqV,cAAgB,IAAI5jB,QACrD,SAAUC,EAAKmnB,GACb,GAAItkB,MAAMC,QAAQqkB,GAAc,CAC9B,IAAIC,EAAWD,EAAY1sB,QAAO,SAAU4sB,GAC1C,OAAQJ,EAA2BI,EACrC,IAEID,EAAS/qB,OAAS,GACpB2D,EAAImK,KAAKid,EAEb,CASA,MANyB,iBAAhBD,GACNF,EAA2BE,IAE5BnnB,EAAImK,KAAKgd,GAGJnnB,CACT,GACA,IAGEmY,EAAS4O,EAAW3O,EAAQ,GAE9B9J,EAAOqV,aADLvL,EAAQ,EACY8O,EAAqBvlB,OACzCwW,EAAO5L,UAAY,IAAM4L,EAAO9Z,OAIhC6oB,EAAqB7qB,OAAS,EAC1B6qB,OACA5e,EAGRoX,EAAQvV,KAAK,CAAE7K,UAAWoI,EAAO4G,OAAQA,GAC3C,GACF,CACF,IAEOoR,CACT,EAQAJ,qBAAsB,SAAUjI,GAC9B,IAAI3I,EAAS2I,EAAM3I,OAChB/M,OAAO0V,EAAMjV,mBACbT,OAAO4c,EAAe+I,qCAAqCjQ,IAC3D5B,OAECkO,EAAepF,EAAegJ,iBAAiBlQ,GAC/CxG,EAAiB0N,EAAeiJ,mBAAmBnQ,GACnDzG,EAAa2N,EAAekJ,eAAepQ,GAC3CqQ,EAAmB,CACrBhZ,OAAQA,EAAOjS,QAAQ,MAAQ,EAAI,CAAC,KAAOiS,EAC3CkC,WAAYA,GAWd,OARI+S,EAAatnB,OAAS,IACxBqrB,EAAiB/D,aAAeA,GAG9B9S,EAAexU,OAAS,IAC1BqrB,EAAiB7W,eAAiBA,GAG7B+V,EAAWhZ,EAAM,CAAC,EAAGyJ,EAAMxB,iBAAkB6R,GACtD,EAUAZ,iCAAkC,SAChCzP,EACAjH,EACAuX,GAEA,IAAIhE,EAAepF,EAAegJ,iBAChClQ,EACAjH,EACAuX,GAEE9W,EAAiB0N,EAAeiJ,mBAAmBnQ,EAAOjH,GAC1DQ,EAAa2N,EAAekJ,eAAepQ,GAC3CqQ,EAAmB,CACrBxlB,YAAa,EACbQ,KAAM,EACNklB,WAAW,EACXC,gBAAgB,GAGdjX,EAAWvU,OAAS,IACtBqrB,EAAiB9W,WAAaA,GAGhC,IAAIoC,EAAoBqE,EAAM/C,2BAA2BlE,GAqBzD,OAlBEsX,EAAiBhZ,OADfsE,EAEAuL,EAAeuJ,0CACbzQ,EACArE,EACA2U,GAGsBvX,EAGxBS,EAAexU,OAAS,IAC1BqrB,EAAiB7W,eAAiBA,GAGhC8S,EAAatnB,OAAS,IACxBqrB,EAAiB/D,aAAeA,GAG3BiD,EAAWhZ,EAAM,CAAC,EAAGyJ,EAAMxB,iBAAkB6R,GACtD,EASAF,mBAAoB,SAAUnQ,EAAOtF,GACnC,GAAIsF,EAAMxG,eACR,OAAOwG,EAAMxG,eAGf,IAAIA,EAAiB,GAqBrB,OAnBA5T,OAAOwG,KAAK4T,EAAMtI,oBAAoB5J,SAAQ,SAAUoH,GACtD,IAAIuD,EAAYuH,EAAMtI,mBAAmBxC,IAAc,CAAC,EACxDtP,OAAOwG,KAAKqM,GAAW3K,SAAQ,SAAU4K,GACvC,IAAI1P,EAASyP,EAAUC,IAAa,GAChCgC,IAAcxF,GAChBlM,EAAO8E,SAAQ,SAAU9G,GACvB,GAAIwE,MAAMC,QAAQzE,GAAQ,CACxB,IAAI0pB,EAAK1pB,EAAMV,KAAI,SAAUmP,GAC3B,OAAOP,EAAYwD,EAAWjD,CAChC,IACA+D,EAAe1G,KAAK4d,EACtB,MACElX,EAAe1G,KAAKoC,EAAYwD,EAAW1R,EAE/C,GAEJ,GACF,IAEOwS,CACT,EAQA4W,eAAgB,SAAUpQ,GACxB,OAAIA,EAAMzG,WACDyG,EAAMzG,WAGRyG,EAAMrI,eAAe1S,KAAK,IACnC,EAWAirB,iBAAkB,SAAUlQ,EAAOjH,EAAOuX,GACxC,IAAIhE,EAAe,GAEf/U,EAAoByI,EAAMzI,mBAAqB,CAAC,EACpD3R,OAAOwG,KAAKmL,GACT6G,OACAtQ,SAAQ,SAAU4M,IACCnD,EAAkBmD,IAAc,IACtC0D,OAAOtQ,SAAQ,SAAUoT,GACnCoL,EAAaxZ,KAAK4H,EAAY,IAAMwG,EACtC,GACF,IAEF,IAAI1J,EAAiBwI,EAAMxI,gBAAkB,CAAC,EAC9C5R,OAAOwG,KAAKoL,GACT4G,OACAtQ,SAAQ,SAAU4M,IACClD,EAAekD,IAAc,IACnC0D,OAAOtQ,SAAQ,SAAUoT,GACnCoL,EAAaxZ,KAAK4H,EAAY,KAAOwG,EACvC,GACF,IAEF,IAAIzJ,EAA+BuI,EAAMvI,8BAAgC,CAAC,EAC1E7R,OAAOwG,KAAKqL,GACT2G,OACAtQ,SAAQ,SAAU4M,GACjB,IAAIoL,EAAcrO,EAA6BiD,IAAc,GAC7D,GAAIA,IAAc3B,GAAU+M,GAAsC,IAAvBA,EAAY9gB,OAAvD,CAGA,IAAI2rB,EAAY,GAEhB7K,EAAY1H,OAAOtQ,SAAQ,SAAUoT,GACnCyP,EAAU7d,KAAK4H,EAAY,IAAMwG,EACnC,IAEAoL,EAAaxZ,KAAK6d,EAPlB,CAQF,IAEF,IAAI/Y,EACFoI,EAAMpI,+BAAiC,CAAC,EAmD1C,OAlDAhS,OAAOwG,KAAKwL,GACTwG,OACAtQ,SAAQ,SAAU4M,GACjB,IACIwG,GADctJ,EAA8B8C,IAAc,IACjC,GAE7B,QAAmBzJ,IAAfiQ,EAAJ,CAIA,IAGI0P,EACAC,EAJAlV,EAAoBqE,EAAM/C,2BAA2BvC,GACrDqC,EAAYiD,EAAMhD,+BAA+BrB,GACjD3C,EAAWgH,EAAMX,yBAAyB1D,GAK9C,GAAI5C,IAAU2B,EAAW,CAGvB,IACqC,IAAnCwG,EAAW9b,QAAQ2X,KACjB/D,IAAsC,IAA1BsX,GACbtX,GACCA,EAASjU,MAAMgY,GAAW/X,SACxBkc,EAAWnc,MAAMgY,GAAW/X,OAEhC,OAGGgU,GAIH6X,EAAkB7X,EAASjU,MAAMgY,GAAW/X,OAAS,EACrDkc,EAAalI,IAJb6X,EAAkB3P,EAAWnc,MAAMgY,GAAW/X,OAAS,EACvDkc,EAAaA,EAAW1O,MAAM,EAAG0O,EAAWhE,YAAYH,KAM1D6T,EAAoBjV,EAAkBuG,WAAW2O,EACnD,MACEA,EAAkB3P,EAAWnc,MAAMgY,GAAW/X,OAAS,EAEvD4rB,EAAoBjV,EAAkBuG,WAAW2O,GAG/CD,GACFtE,EAAaxZ,KAAK,CAAC8d,EAAoB,IAAM1P,GAtC/C,CAwCF,IAEKoL,CACT,EAEA2D,qCAAsC,SAAUjQ,GAG9C,OAAOA,EAAM1I,mBAAmB5O,QAE9B,SACEooB,EACAnV,GAEA,IAAIoV,EAAyB/Q,EAAM9G,0BACjCyC,EAAkBpU,MAClB,GAGF,IAAKwpB,EAEH,OADAD,EAAche,KAAK6I,EAAkBuG,WAAW,IACzC4O,EAGT,IAAI/T,EAAYiD,EAAMhD,+BAA+BrB,GACjDoF,EAAQgQ,EAAuBhsB,MAAMgY,GAAW/X,OAChDgsB,EAAgBrV,EAAkBuG,WAAW1P,MAAM,EAAGuO,EAAQ,GAElE,OAAO+P,EAAcxmB,OAAO0mB,EAC9B,GAvBQ,GA0BZ,EAEAP,0CAA2C,SACzCzQ,EACArE,EACAsV,GAEA,IAAIlU,EAAYiD,EAAMhD,+BAA+BrB,GACrD,IAAkB,IAAdsV,EAAoB,CACtB,IAAIjY,EAAWgH,EAAMX,yBAAyB1D,GAC1CoI,EAAiB,EAKrB,OAHI/K,IACF+K,EAAiB/K,EAASjU,MAAMgY,GAAW/X,QAEtC,CAAC2W,EAAkBuG,WAAW6B,GACvC,CAEA,IAKImN,GAJFlR,EAAM9G,0BAA0ByC,EAAkBpU,MAAM,IAAM,IAIvBxC,MAAMgY,GAAW/X,OAAS,EACnE,OAAO2W,EAAkBuG,WAAW1P,MAAM,EAAG0e,EAAc,EAC7D,EAEAxH,uBAAwB,SAAUhP,EAAW/Q,EAAOyf,EAAcpJ,GAChE,IAAImR,EAA+BnR,EAAMnF,mBAAmBH,GACxDsF,EAAM7G,iBAAiBuB,GACvBsF,EACAoR,EAAiC,CACnCC,WAAY1nB,EACZ+Q,UAAWA,GAKb,MAH4B,iBAAjB0O,IACTgI,EAA+BhI,aAAeA,GAEzCmG,EACLhZ,EACE,CAAC,EACD2Q,EAAee,qBAAqBkJ,GACpCC,GAGN,GAGF9f,EAAOC,QAAU2V,yBCvbjB5V,EAAOC,QAAU,SAA0B4F,GACzC,OAAkB,OAAdA,GAGG,wBAAwBma,KAAKna,EACtC,wBCLA7F,EAAOC,QAAU,2BCDmDD,EAAOC,QAAgG,WAAY,aAAa,SAAS1K,EAAEA,EAAE6V,EAAE+O,GAAG,OAAO/O,KAAK7V,EAAEjB,OAAO2rB,eAAe1qB,EAAE6V,EAAE,CAAC1V,MAAMykB,EAAEoC,YAAW,EAAGE,cAAa,EAAGD,UAAS,IAAKjnB,EAAE6V,GAAG+O,EAAE5kB,CAAC,CAAC,SAAS6V,EAAE7V,EAAE6V,GAAG,IAAI+O,EAAE7lB,OAAOwG,KAAKvF,GAAG,GAAGjB,OAAO4rB,sBAAsB,CAAC,IAAI7f,EAAE/L,OAAO4rB,sBAAsB3qB,GAAG6V,IAAI/K,EAAEA,EAAEvO,QAAO,SAAUsZ,GAAG,OAAO9W,OAAO6rB,yBAAyB5qB,EAAE6V,GAAGmR,UAAW,KAAIpC,EAAE3Y,KAAKL,MAAMgZ,EAAE9Z,EAAE,CAAC,OAAO8Z,CAAC,CAAC,SAASA,EAAEA,GAAG,IAAI,IAAI9Z,EAAE,EAAEA,EAAES,UAAUpN,OAAO2M,IAAI,CAAC,IAAI+f,EAAE,MAAMtf,UAAUT,GAAGS,UAAUT,GAAG,CAAC,EAAEA,EAAE,EAAE+K,EAAE9W,OAAO8rB,IAAG,GAAI5jB,SAAQ,SAAU4O,GAAG7V,EAAE4kB,EAAE/O,EAAEgV,EAAEhV,GAAI,IAAG9W,OAAO+rB,0BAA0B/rB,OAAOgsB,iBAAiBnG,EAAE7lB,OAAO+rB,0BAA0BD,IAAIhV,EAAE9W,OAAO8rB,IAAI5jB,SAAQ,SAAUjH,GAAGjB,OAAO2rB,eAAe9F,EAAE5kB,EAAEjB,OAAO6rB,yBAAyBC,EAAE7qB,GAAI,GAAE,CAAC,OAAO4kB,CAAC,CAAC,SAAS9Z,EAAE9K,EAAE6V,GAAG,GAAG,MAAM7V,EAAE,MAAM,CAAC,EAAE,IAAI4kB,EAAE9Z,EAAE+f,EAAE,SAAS7qB,EAAE6V,GAAG,GAAG,MAAM7V,EAAE,MAAM,CAAC,EAAE,IAAI4kB,EAAE9Z,EAAE+f,EAAE,CAAC,EAAE9a,EAAEhR,OAAOwG,KAAKvF,GAAG,IAAI8K,EAAE,EAAEA,EAAEiF,EAAE5R,OAAO2M,IAAI8Z,EAAE7U,EAAEjF,GAAG+K,EAAEtX,QAAQqmB,IAAI,IAAIiG,EAAEjG,GAAG5kB,EAAE4kB,IAAI,OAAOiG,CAAC,CAAnI,CAAqI7qB,EAAE6V,GAAG,GAAG9W,OAAO4rB,sBAAsB,CAAC,IAAI5a,EAAEhR,OAAO4rB,sBAAsB3qB,GAAG,IAAI8K,EAAE,EAAEA,EAAEiF,EAAE5R,OAAO2M,IAAI8Z,EAAE7U,EAAEjF,GAAG+K,EAAEtX,QAAQqmB,IAAI,GAAG7lB,OAAO4L,UAAUqgB,qBAAqBtf,KAAK1L,EAAE4kB,KAAKiG,EAAEjG,GAAG5kB,EAAE4kB,GAAG,CAAC,OAAOiG,CAAC,CAAC,SAASA,EAAE7qB,EAAE6V,GAAG,OAAO,SAAS7V,GAAG,GAAG2E,MAAMC,QAAQ5E,GAAG,OAAOA,CAAC,CAAxC,CAA0CA,IAAI,SAASA,EAAE6V,GAAG,GAAKoV,OAAOC,YAAYnsB,OAAOiB,IAAI,uBAAuBjB,OAAO4L,UAAUqO,SAAStN,KAAK1L,GAAzF,CAAoG,IAAI4kB,EAAE,GAAG9Z,GAAE,EAAG+f,GAAE,EAAG9a,OAAE,EAAO,IAAI,IAAI,IAAIob,EAAE3qB,EAAER,EAAEirB,OAAOC,cAAcpgB,GAAGqgB,EAAE3qB,EAAE4qB,QAAQC,QAAQzG,EAAE3Y,KAAKkf,EAAEhrB,QAAQ0V,GAAG+O,EAAEzmB,SAAS0X,GAAG/K,GAAE,GAAI,CAAC,MAAM9K,GAAG6qB,GAAE,EAAG9a,EAAE/P,CAAC,CAAC,QAAQ,IAAI8K,GAAG,MAAMtK,EAAE8qB,QAAQ9qB,EAAE8qB,QAAQ,CAAC,QAAQ,GAAGT,EAAE,MAAM9a,CAAC,CAAC,CAAC,OAAO6U,CAA7N,CAA8N,CAA/U,CAAiV5kB,EAAE6V,IAAI,WAAW,MAAM,IAAI7K,UAAU,uDAAuD,CAAtF,EAAyF,CAAC,SAAS+E,EAAE/P,GAAG,OAAO,SAASA,GAAG,GAAG2E,MAAMC,QAAQ5E,GAAG,CAAC,IAAI,IAAI6V,EAAE,EAAE+O,EAAE,IAAIjgB,MAAM3E,EAAE7B,QAAQ0X,EAAE7V,EAAE7B,OAAO0X,IAAI+O,EAAE/O,GAAG7V,EAAE6V,GAAG,OAAO+O,CAAC,CAAC,CAArG,CAAuG5kB,IAAI,SAASA,GAAG,GAAGirB,OAAOC,YAAYnsB,OAAOiB,IAAI,uBAAuBjB,OAAO4L,UAAUqO,SAAStN,KAAK1L,GAAG,OAAO2E,MAAM4mB,KAAKvrB,EAAE,CAA1H,CAA4HA,IAAI,WAAW,MAAM,IAAIgL,UAAU,kDAAkD,CAAjF,EAAoF,CAAC,SAASmgB,EAAEnrB,GAAG,IAAI6V,EAAE+O,EAAE,2BAA2BnhB,OAAOzD,EAAEF,KAAKgL,EAAE,WAAW,YAAO,IAAS+K,IAAIA,EAAE7V,EAAEwrB,cAAcC,OAAOD,cAAc3V,CAAC,EAAE9F,EAAE,WAAW,OAAOkJ,KAAKyS,MAAM5gB,IAAI6gB,QAAQ/G,IAAI,KAAK,EAAEuG,EAAE,SAASnrB,GAAG8K,IAAI8gB,QAAQhH,EAAE3L,KAAKC,UAAUlZ,GAAG,EAAEQ,EAAE,WAAW,IAAIqV,EAAE7V,EAAE6rB,WAAW,IAAI7rB,EAAE6rB,WAAW,KAAKjH,EAAE7U,IAAIjF,EAAE/L,OAAO+sB,YAAY/sB,OAAOC,QAAQ4lB,GAAGroB,QAAO,SAAUyD,GAAG,YAAO,IAAS6qB,EAAE7qB,EAAE,GAAG,GAAG+rB,SAAU,KAAI,GAAGZ,EAAErgB,GAAG+K,EAAE,CAAC,IAAIrV,EAAEzB,OAAO+sB,YAAY/sB,OAAOC,QAAQ8L,GAAGvO,QAAO,SAAUyD,GAAG,IAAI4kB,EAAEiG,EAAE7qB,EAAE,GAAG,GAAG8K,GAAE,IAAKkhB,MAAMC,UAAU,QAAQrH,EAAEmH,UAAUlW,EAAE/K,EAAG,KAAIqgB,EAAE3qB,EAAE,CAAC,EAAE,MAAM,CAAC0rB,IAAI,SAASlsB,EAAE6V,GAAG,IAAI+O,EAAErZ,UAAUpN,OAAO,QAAG,IAASoN,UAAU,GAAGA,UAAU,GAAG,CAAC4gB,KAAK,WAAW,OAAOpK,QAAQC,SAAS,GAAG,OAAOD,QAAQC,UAAUN,MAAK,WAAYlhB,IAAI,IAAIqV,EAAEoD,KAAKC,UAAUlZ,GAAG,OAAO+P,IAAI8F,EAAG,IAAG6L,MAAK,SAAU1hB,GAAG,OAAO+hB,QAAQqK,IAAI,CAACpsB,EAAEA,EAAEG,MAAM0V,SAAI,IAAS7V,GAAI,IAAG0hB,MAAK,SAAU1hB,GAAG,IAAI6V,EAAEgV,EAAE7qB,EAAE,GAAG8K,EAAE+K,EAAE,GAAG9F,EAAE8F,EAAE,GAAG,OAAOkM,QAAQqK,IAAI,CAACthB,EAAEiF,GAAG6U,EAAEuH,KAAKrhB,IAAK,IAAG4W,MAAK,SAAU1hB,GAAG,OAAO6qB,EAAE7qB,EAAE,GAAG,EAAG,GAAE,EAAEqsB,IAAI,SAASrsB,EAAE6V,GAAG,OAAOkM,QAAQC,UAAUN,MAAK,WAAY,IAAImJ,EAAE9a,IAAI,OAAO8a,EAAE5R,KAAKC,UAAUlZ,IAAI,CAAC+rB,WAAU,IAAKC,MAAMC,UAAU9rB,MAAM0V,GAAG/K,IAAI8gB,QAAQhH,EAAE3L,KAAKC,UAAU2R,IAAIhV,CAAE,GAAE,EAAEyW,OAAO,SAAStsB,GAAG,OAAO+hB,QAAQC,UAAUN,MAAK,WAAY,IAAI7L,EAAE9F,WAAW8F,EAAEoD,KAAKC,UAAUlZ,IAAI8K,IAAI8gB,QAAQhH,EAAE3L,KAAKC,UAAUrD,GAAI,GAAE,EAAE0W,MAAM,WAAW,OAAOxK,QAAQC,UAAUN,MAAK,WAAY5W,IAAI0hB,WAAW5H,EAAG,GAAE,EAAE,CAAC,SAASpkB,EAAER,GAAG,IAAI6V,EAAE9F,EAAE/P,EAAEysB,QAAQ7H,EAAE/O,EAAE6W,QAAQ,YAAO,IAAS9H,EAAE,CAACsH,IAAI,SAASlsB,EAAE6V,GAAG,IAAI+O,EAAErZ,UAAUpN,OAAO,QAAG,IAASoN,UAAU,GAAGA,UAAU,GAAG,CAAC4gB,KAAK,WAAW,OAAOpK,QAAQC,SAAS,GAAS,OAAJnM,IAAa6L,MAAK,SAAU1hB,GAAG,OAAO+hB,QAAQqK,IAAI,CAACpsB,EAAE4kB,EAAEuH,KAAKnsB,IAAK,IAAG0hB,MAAK,SAAU1hB,GAAG,OAAO6qB,EAAE7qB,EAAE,GAAG,EAAG,GAAE,EAAEqsB,IAAI,SAASrsB,EAAE6V,GAAG,OAAOkM,QAAQC,QAAQnM,EAAE,EAAEyW,OAAO,SAAStsB,GAAG,OAAO+hB,QAAQC,SAAS,EAAEuK,MAAM,WAAW,OAAOxK,QAAQC,SAAS,GAAG,CAACkK,IAAI,SAASlsB,EAAE8K,GAAG,IAAI+f,EAAEtf,UAAUpN,OAAO,QAAG,IAASoN,UAAU,GAAGA,UAAU,GAAG,CAAC4gB,KAAK,WAAW,OAAOpK,QAAQC,SAAS,GAAG,OAAO4C,EAAEsH,IAAIlsB,EAAE8K,EAAE+f,GAAGjJ,OAAM,WAAY,OAAOphB,EAAE,CAACisB,OAAO5W,IAAIqW,IAAIlsB,EAAE8K,EAAE+f,EAAG,GAAE,EAAEwB,IAAI,SAASrsB,EAAE8K,GAAG,OAAO8Z,EAAEyH,IAAIrsB,EAAE8K,GAAG8W,OAAM,WAAY,OAAOphB,EAAE,CAACisB,OAAO5W,IAAIwW,IAAIrsB,EAAE8K,EAAG,GAAE,EAAEwhB,OAAO,SAAStsB,GAAG,OAAO4kB,EAAE0H,OAAOtsB,GAAG4hB,OAAM,WAAY,OAAOphB,EAAE,CAACisB,OAAO5W,IAAIyW,OAAOtsB,EAAG,GAAE,EAAEusB,MAAM,WAAW,OAAO3H,EAAE2H,QAAQ3K,OAAM,WAAY,OAAOphB,EAAE,CAACisB,OAAO5W,IAAI0W,OAAQ,GAAE,EAAE,CAAC,SAASjqB,IAAI,IAAItC,EAAEuL,UAAUpN,OAAO,QAAG,IAASoN,UAAU,GAAGA,UAAU,GAAG,CAACohB,cAAa,GAAI9W,EAAE,CAAC,EAAE,MAAM,CAACqW,IAAI,SAAStH,EAAE9Z,GAAG,IAAI+f,EAAEtf,UAAUpN,OAAO,QAAG,IAASoN,UAAU,GAAGA,UAAU,GAAG,CAAC4gB,KAAK,WAAW,OAAOpK,QAAQC,SAAS,GAAGjS,EAAEkJ,KAAKC,UAAU0L,GAAG,GAAG7U,KAAK8F,EAAE,OAAOkM,QAAQC,QAAQhiB,EAAE2sB,aAAa1T,KAAKyS,MAAM7V,EAAE9F,IAAI8F,EAAE9F,IAAI,IAAIob,EAAErgB,IAAItK,EAAEqqB,GAAGA,EAAEsB,MAAM,WAAW,OAAOpK,QAAQC,SAAS,EAAE,OAAOmJ,EAAEzJ,MAAK,SAAU1hB,GAAG,OAAOQ,EAAER,EAAG,IAAG0hB,MAAK,WAAY,OAAOyJ,CAAE,GAAE,EAAEkB,IAAI,SAASzH,EAAE9Z,GAAG,OAAO+K,EAAEoD,KAAKC,UAAU0L,IAAI5kB,EAAE2sB,aAAa1T,KAAKC,UAAUpO,GAAGA,EAAEiX,QAAQC,QAAQlX,EAAE,EAAEwhB,OAAO,SAAStsB,GAAG,cAAc6V,EAAEoD,KAAKC,UAAUlZ,IAAI+hB,QAAQC,SAAS,EAAEuK,MAAM,WAAW,OAAO1W,EAAE,CAAC,EAAEkM,QAAQC,SAAS,EAAE,CAAC,SAAS4K,EAAE5sB,GAAG,IAAI,IAAI6V,EAAE7V,EAAE7B,OAAO,EAAE0X,EAAE,EAAEA,IAAI,CAAC,IAAI+O,EAAEpmB,KAAKquB,MAAMruB,KAAKsuB,UAAUjX,EAAE,IAAI/K,EAAE9K,EAAE6V,GAAG7V,EAAE6V,GAAG7V,EAAE4kB,GAAG5kB,EAAE4kB,GAAG9Z,CAAC,CAAC,OAAO9K,CAAC,CAAC,SAAS0nB,EAAE1nB,EAAE6V,GAAG,OAAOA,GAAG9W,OAAOwG,KAAKsQ,GAAG5O,SAAQ,SAAU2d,GAAG5kB,EAAE4kB,GAAG/O,EAAE+O,GAAG5kB,EAAG,IAAGA,GAAGA,CAAC,CAAC,SAAS6O,EAAE7O,GAAG,IAAI,IAAI6V,EAAEtK,UAAUpN,OAAOymB,EAAE,IAAIjgB,MAAMkR,EAAE,EAAEA,EAAE,EAAE,GAAG/K,EAAE,EAAEA,EAAE+K,EAAE/K,IAAI8Z,EAAE9Z,EAAE,GAAGS,UAAUT,GAAG,IAAI+f,EAAE,EAAE,OAAO7qB,EAAE8E,QAAQ,OAAM,WAAY,OAAOioB,mBAAmBnI,EAAEiG,KAAM,GAAE,CAAC,IAAI9e,EAAE,CAACihB,sBAAsB,EAAEC,cAAc,GAAG,SAASC,EAAEltB,EAAE6V,GAAG,IAAI+O,EAAE5kB,GAAG,CAAC,EAAE8K,EAAE8Z,EAAErhB,MAAM,CAAC,EAAE,OAAOxE,OAAOwG,KAAKqf,GAAG3d,SAAQ,SAAUjH,IAAI,IAAI,CAAC,UAAU,UAAU,kBAAkB,OAAO,aAAazB,QAAQyB,KAAK8K,EAAE9K,GAAG4kB,EAAE5kB,GAAI,IAAG,CAACuD,KAAKxE,OAAOC,QAAQ8L,GAAG3M,OAAO,EAAE2M,OAAE,EAAOqiB,QAAQvI,EAAEuI,SAAStX,EAAEuX,QAAQxI,EAAEwI,SAAS,CAAC,EAAEC,gBAAgBzI,EAAEyI,iBAAiB,CAAC,EAAEC,UAAU1I,EAAE0I,UAAU,CAAC,IAAIxkB,EAAE,CAACykB,KAAK,EAAEC,MAAM,EAAEC,IAAI,GAAGC,EAAE,EAAE9e,EAAE,EAAEtC,EAAE,EAAE,SAAS5F,EAAE1G,GAAG,IAAI6V,EAAEtK,UAAUpN,OAAO,QAAG,IAASoN,UAAU,GAAGA,UAAU,GAAGmiB,EAAE,OAAO9I,EAAEA,EAAE,CAAC,EAAE5kB,GAAG,CAAC,EAAE,CAAC2tB,OAAO9X,EAAE+X,WAAW5B,KAAK6B,OAAO,CAAC,SAAS7d,EAAEhQ,GAAG,MAAM,iBAAiBA,EAAE,CAAC8tB,SAAS,QAAQ9oB,IAAIhF,EAAE+tB,OAAOjlB,EAAE2kB,KAAK,CAACK,SAAS9tB,EAAE8tB,UAAU,QAAQ9oB,IAAIhF,EAAEgF,IAAI+oB,OAAO/tB,EAAE+tB,QAAQjlB,EAAE2kB,IAAI,CAAC,IAAIO,EAAE,MAAMC,EAAE,OAAO,SAAShL,EAAEjjB,EAAE6V,GAAG,OAAOkM,QAAQqK,IAAIvW,EAAEpW,KAAI,SAAUoW,GAAG,OAAO7V,EAAEksB,IAAIrW,GAAE,WAAY,OAAOkM,QAAQC,QAAQtb,EAAEmP,GAAI,GAAG,KAAI6L,MAAK,SAAU1hB,GAAG,IAAI4kB,EAAE5kB,EAAEzD,QAAO,SAAUyD,GAAG,OAAO,SAASA,GAAG,OAAOA,EAAE2tB,SAASD,GAAG1B,KAAK6B,MAAM7tB,EAAE4tB,WAAW,IAAI,CAA7D,CAA+D5tB,EAAG,IAAG8K,EAAE9K,EAAEzD,QAAO,SAAUyD,GAAG,OAAO,SAASA,GAAG,OAAOA,EAAE2tB,SAASrhB,GAAG0f,KAAK6B,MAAM7tB,EAAE4tB,YAAY,IAAI,CAA9D,CAAgE5tB,EAAG,IAAG6qB,EAAE,GAAGpnB,OAAOsM,EAAE6U,GAAG7U,EAAEjF,IAAI,MAAM,CAACojB,WAAW,SAASluB,EAAE6V,GAAG,OAAO,IAAI/K,EAAE3M,QAAQ,IAAI6B,EAAE,EAAE8K,EAAE3M,OAAO,EAAE6B,GAAG6V,CAAC,EAAEsY,eAAetD,EAAE1sB,OAAO,EAAE0sB,EAAEprB,KAAI,SAAUO,GAAG,OAAOgQ,EAAEhQ,EAAG,IAAG6V,EAAG,GAAE,CAAC,SAASuY,EAAEpuB,EAAE6V,EAAE/K,EAAE+f,GAAG,IAAIM,EAAE,GAAG3qB,EAAE,SAASR,EAAE6V,GAAG,GAAG7V,EAAEquB,SAASL,SAAG,IAAShuB,EAAEuD,WAAM,IAASsS,EAAEtS,MAA7C,CAAyD,IAAIuH,EAAEnG,MAAMC,QAAQ5E,EAAEuD,MAAMvD,EAAEuD,KAAKqhB,EAAEA,EAAE,CAAC,EAAE5kB,EAAEuD,MAAMsS,EAAEtS,MAAM,OAAO0V,KAAKC,UAAUpO,EAAjF,CAAmF,CAAzJ,CAA2JA,EAAE+f,GAAGvoB,EAAE,SAAStC,EAAE6V,GAAG,IAAI/K,EAAE8Z,EAAEA,EAAE,CAAC,EAAE5kB,EAAEotB,SAASvX,EAAEuX,SAASvC,EAAE,CAAC,EAAE,OAAO9rB,OAAOwG,KAAKuF,GAAG7D,SAAQ,SAAUjH,GAAG,IAAI6V,EAAE/K,EAAE9K,GAAG6qB,EAAE7qB,EAAEsuB,eAAezY,CAAE,IAAGgV,CAAC,CAArI,CAAuI7qB,EAAE6qB,GAAG+B,EAAE9hB,EAAEujB,OAAO3G,EAAE5c,EAAEujB,SAASL,EAAE,CAAC,EAAEpJ,EAAEA,EAAE,CAAC,EAAE9Z,EAAEvH,MAAMsnB,EAAEtnB,MAAMsL,EAAE+V,EAAEA,EAAEA,EAAE,CAAC,kBAAkB5kB,EAAEuuB,UAAUpuB,OAAOH,EAAEqtB,iBAAiB3F,GAAGmD,EAAEwC,iBAAiBthB,EAAE,EAAEmhB,EAAE,SAASrX,EAAE+O,EAAE7U,GAAG,IAAI2X,EAAE9C,EAAEnf,MAAM,QAAG,IAASiiB,EAAE,KAAK,CAAChnB,KAAK,aAAa/C,QAAQ,gHAAgH6wB,sBAAsBC,EAAEtD,IAAI,IAAI+B,EAAE,CAAC3pB,KAAK/C,EAAE4sB,QAAQ9qB,EAAE+rB,OAAOzB,EAAE5nB,IAAI0pB,EAAEhH,EAAE5c,EAAEyL,KAAK1H,GAAG8f,eAAe5e,EAAEhE,EAAE/L,EAAE4uB,SAASC,SAASC,gBAAgB/e,EAAEhE,EAAE8e,EAAEsC,UAAUrkB,EAAE,SAAS9I,GAAG,IAAI6V,EAAE,CAACkZ,QAAQ7B,EAAEnK,SAAS/iB,EAAEgvB,KAAKtH,EAAEuH,UAAUrK,EAAEzmB,QAAQ,OAAOgtB,EAAElf,KAAK4J,GAAGA,CAAC,EAAE6X,EAAE,CAACwB,UAAU,SAASlvB,GAAG,OAAO,SAASA,GAAG,IAAI,OAAOiZ,KAAKyS,MAAM1rB,EAAE2F,QAAQ,CAAC,MAAMkQ,GAAG,MAAM,SAAS7V,EAAE6V,GAAG,MAAM,CAACnV,KAAK,uBAAuB/C,QAAQqC,EAAE+iB,SAASlN,EAAE,CAAtE,CAAwEA,EAAElY,QAAQqC,EAAE,CAAC,CAAjJ,CAAmJA,EAAE,EAAEmvB,QAAQ,SAASrkB,GAAG,IAAI+f,EAAE/hB,EAAEgC,GAAG,OAAOA,EAAEskB,YAAYrjB,IAAIgW,QAAQqK,IAAI,CAACpsB,EAAEqvB,OAAOC,KAAK,oBAAoBC,EAAE1E,IAAI7qB,EAAEwvB,WAAWnD,IAAI3E,EAAEhhB,EAAEghB,EAAE5c,EAAEskB,WAAW9iB,EAAEsC,MAAM8S,MAAK,WAAY,OAAO7L,EAAE+O,EAAE7U,EAAG,GAAE,EAAE0f,OAAO,SAASzvB,GAAG,MAAM8I,EAAE9I,GAAG,SAASA,EAAE6V,GAAG,IAAI+O,EAAE5kB,EAAE2F,QAAQmF,EAAE9K,EAAE2tB,OAAO9C,EAAEjG,EAAE,IAAIiG,EAAE5R,KAAKyS,MAAM9G,GAAGjnB,OAAO,CAAC,MAAMqC,GAAG,CAAC,OAAO,SAASA,EAAE6V,EAAE+O,GAAG,MAAM,CAAClkB,KAAK,WAAW/C,QAAQqC,EAAE2tB,OAAO9X,EAAE2Y,sBAAsB5J,EAAE,CAAlF,CAAoFiG,EAAE/f,EAAE+K,EAAE,CAApL,CAAsL7V,EAAEyuB,EAAEtD,GAAG,GAAG,OAAOnrB,EAAE0vB,UAAUC,KAAKzC,GAAGxL,MAAK,SAAU1hB,GAAG,OAAO,SAASA,EAAE6V,GAAG,OAAO,SAAS7V,GAAG,IAAI6V,EAAE7V,EAAE2tB,OAAO,OAAO3tB,EAAEovB,YAAY,SAASpvB,GAAG,IAAI6V,EAAE7V,EAAEovB,WAAWxK,EAAE5kB,EAAE2tB,OAAO,OAAO9X,GAAG,KAAK+O,CAAC,CAA1D,CAA4D5kB,IAAI,MAAM6V,EAAE,MAAM,MAAMA,EAAE,IAAI,CAA1I,CAA4I7V,GAAG6V,EAAEsZ,QAAQnvB,GAAG,MAAMA,EAAE2tB,OAAO,KAAK9X,EAAEqZ,UAAUlvB,GAAG6V,EAAE4Z,OAAOzvB,EAAE,CAA/N,CAAiOA,EAAE0tB,EAAG,GAAE,EAAE,OAAOzK,EAAEjjB,EAAEwvB,WAAW3Z,GAAG6L,MAAK,SAAU1hB,GAAG,OAAOktB,EAAEnd,EAAE/P,EAAEmuB,gBAAgByB,UAAU5vB,EAAEkuB,WAAY,GAAE,CAAC,SAAS2B,EAAE7vB,GAAG,IAAI6V,EAAE,CAAC1V,MAAM,2BAA2BsD,OAAOzD,EAAE,KAAK8vB,IAAI,SAAS9vB,GAAG,IAAI4kB,EAAE,KAAKnhB,OAAOzD,EAAE8oB,SAASrlB,YAAO,IAASzD,EAAEO,QAAQ,KAAKkD,OAAOzD,EAAEO,QAAQ,KAAK,IAAI,OAAO,IAAIsV,EAAE1V,MAAM5B,QAAQqmB,KAAK/O,EAAE1V,MAAM,GAAGsD,OAAOoS,EAAE1V,OAAOsD,OAAOmhB,IAAI/O,CAAC,GAAG,OAAOA,CAAC,CAAC,SAAS6Y,EAAE1uB,EAAE6V,EAAE+O,GAAG,IAAI9Z,EAAEilB,EAAEnL,GAAGiG,EAAE,GAAGpnB,OAAOzD,EAAE8tB,SAAS,OAAOrqB,OAAOzD,EAAEgF,IAAI,KAAKvB,OAAO,MAAMoS,EAAEma,OAAO,GAAGna,EAAEoa,OAAO,GAAGpa,GAAG,OAAO/K,EAAE3M,SAAS0sB,GAAG,IAAIpnB,OAAOqH,IAAI+f,CAAC,CAAC,SAASkF,EAAE/vB,GAAG,OAAOjB,OAAOwG,KAAKvF,GAAGP,KAAI,SAAUoW,GAAG,OAAOhH,EAAE,QAAQgH,GAAG+O,EAAE5kB,EAAE6V,GAAG,oBAAoB9W,OAAO4L,UAAUqO,SAAStN,KAAKkZ,IAAI,mBAAmB7lB,OAAO4L,UAAUqO,SAAStN,KAAKkZ,GAAG3L,KAAKC,UAAUlZ,EAAE6V,IAAI7V,EAAE6V,KAAK,IAAI+O,CAAE,IAAGxmB,KAAK,IAAI,CAAC,SAASqwB,EAAEzuB,GAAG,OAAOA,EAAEP,KAAI,SAAUO,GAAG,OAAOuvB,EAAEvvB,EAAG,GAAE,CAAC,SAASuvB,EAAEvvB,GAAG,IAAI6V,EAAE7V,EAAE+uB,QAAQ3B,QAAQ,qBAAqB,CAAC,oBAAoB,SAAS,CAAC,EAAE,OAAOxI,EAAEA,EAAE,CAAC,EAAE5kB,GAAG,CAAC,EAAE,CAAC+uB,QAAQnK,EAAEA,EAAE,CAAC,EAAE5kB,EAAE+uB,SAAS,CAAC,EAAE,CAAC3B,QAAQxI,EAAEA,EAAE,CAAC,EAAE5kB,EAAE+uB,QAAQ3B,SAASvX,MAAM,CAAC,IAAIqa,EAAE,SAASlwB,GAAG,IAAI6V,EAAE7V,EAAEkB,MAAM4J,EAAE,SAAS9K,EAAE6V,EAAE+O,GAAG,IAAI9Z,EAAE,CAAC,oBAAoB8Z,EAAE,2BAA2B/O,GAAG,MAAM,CAACuX,QAAQ,WAAW,OAAOptB,IAAI+L,EAAEkhB,cAAcniB,EAAE,CAAC,CAAC,EAAEuiB,gBAAgB,WAAW,OAAOrtB,IAAI+L,EAAEihB,sBAAsBliB,EAAE,CAAC,CAAC,EAAE,CAA1M,MAA4M,IAAS9K,EAAEmwB,SAASnwB,EAAEmwB,SAASpkB,EAAEkhB,cAAcpX,EAAE7V,EAAEmB,QAAQ4O,EAAE,SAAS/P,GAAG,IAAI6V,EAAE7V,EAAEwvB,WAAW5K,EAAE5kB,EAAEqvB,OAAOvkB,EAAE9K,EAAE0vB,UAAU3f,EAAE/P,EAAEowB,cAAcjF,EAAEnrB,EAAEqwB,eAAe7vB,EAAER,EAAE4uB,SAAStsB,EAAEtC,EAAEuuB,UAAU3B,EAAE5sB,EAAEswB,MAAM5I,EAAE1nB,EAAEqtB,gBAAgBxe,EAAE,CAAC2gB,WAAW3Z,EAAEwZ,OAAOzK,EAAE8K,UAAU5kB,EAAEslB,cAAcrgB,EAAEsgB,eAAelF,EAAEyD,SAASpuB,EAAE+tB,UAAUjsB,EAAE8qB,QAAQptB,EAAEotB,QAAQC,gBAAgB3F,EAAE4I,MAAM1D,EAAEntB,KAAI,SAAUO,GAAG,OAAOgQ,EAAEhQ,EAAG,IAAGuwB,KAAK,SAASvwB,EAAE6V,GAAG,IAAI+O,EAAEsI,EAAErX,EAAEhH,EAAE+f,SAAS2B,MAAMzlB,EAAE,WAAW,OAAOsjB,EAAEvf,EAAEA,EAAEyhB,MAAM/zB,QAAO,SAAUyD,GAAG,OAAO,IAAIA,EAAE+tB,OAAOjlB,EAAEykB,KAAM,IAAGvtB,EAAE4kB,EAAE,EAAE,IAAG,UAAM,IAASA,EAAE0I,UAAU1I,EAAE0I,UAAUttB,EAAEstB,WAAW,OAAOxiB,IAAI,IAAIiF,EAAE,CAACgf,QAAQ/uB,EAAEwwB,qBAAqB5L,EAAE6L,YAAY,CAACpD,gBAAgBxe,EAAEwe,gBAAgBD,QAAQve,EAAEue,UAAU,OAAOve,EAAEwhB,eAAenE,IAAInc,GAAE,WAAY,OAAOlB,EAAEuhB,cAAclE,IAAInc,GAAE,WAAY,OAAOlB,EAAEuhB,cAAc/D,IAAItc,EAAEjF,KAAK4W,MAAK,SAAU1hB,GAAG,OAAO+hB,QAAQqK,IAAI,CAACvd,EAAEuhB,cAAc9D,OAAOvc,GAAG/P,GAAI,IAAE,SAAUA,GAAG,OAAO+hB,QAAQqK,IAAI,CAACvd,EAAEuhB,cAAc9D,OAAOvc,GAAGgS,QAAQ2O,OAAO1wB,IAAK,IAAG0hB,MAAK,SAAU1hB,GAAG,IAAI6V,EAAEgV,EAAE7qB,EAAE,GAAQ,OAAL6V,EAAE,GAAUA,EAAE,EAAG,GAAG,GAAG,GAAE,CAACsW,KAAK,SAASnsB,GAAG,OAAO6O,EAAEwhB,eAAehE,IAAItc,EAAE/P,EAAE,GAAG,EAAE2wB,MAAM,SAAS3wB,EAAE6V,GAAG,OAAOuY,EAAEvf,EAAEA,EAAEyhB,MAAM/zB,QAAO,SAAUyD,GAAG,OAAO,IAAIA,EAAE+tB,OAAOjlB,EAAE0kB,MAAO,IAAGxtB,EAAEktB,EAAErX,EAAEhH,EAAE+f,SAAS+B,OAAO,GAAG,OAAO9hB,CAAC,CAA7mC,CAA+mC+V,EAAEA,EAAE,CAAC0L,MAAM,CAAC,CAACtrB,IAAI,GAAGvB,OAAOoS,EAAE,oBAAoBkY,OAAOjlB,EAAEykB,MAAM,CAACvoB,IAAI,GAAGvB,OAAOoS,EAAE,gBAAgBkY,OAAOjlB,EAAE0kB,QAAQ/pB,OAAOmpB,EAAE,CAAC,CAAC5nB,IAAI,GAAGvB,OAAOoS,EAAE,sBAAsB,CAAC7Q,IAAI,GAAGvB,OAAOoS,EAAE,sBAAsB,CAAC7Q,IAAI,GAAGvB,OAAOoS,EAAE,0BAA0B7V,GAAG,CAAC,EAAE,CAACotB,QAAQxI,EAAEA,EAAEA,EAAE,CAAC,EAAE9Z,EAAEsiB,WAAW,CAAC,eAAe,sCAAsCptB,EAAEotB,SAASC,gBAAgBzI,EAAEA,EAAE,CAAC,EAAE9Z,EAAEuiB,mBAAmBrtB,EAAEqtB,oBAAoB,OAAO3F,EAAE,CAAC+I,YAAY1gB,EAAE7O,MAAM2U,EAAEyK,gBAAgB,SAAStgB,EAAE6V,GAAG9F,EAAEwe,UAAUuB,IAAI,CAAChH,QAAQ9oB,EAAEO,QAAQsV,GAAG,EAAEgQ,WAAW,WAAW,OAAO9D,QAAQqK,IAAI,CAACrc,EAAEqgB,cAAc7D,QAAQxc,EAAEsgB,eAAe9D,UAAU7K,MAAK,WAAa,GAAE,GAAG1hB,EAAE4wB,QAAQ,EAAEC,EAAE,SAAS7wB,GAAG,OAAO,SAAS6V,EAAE+O,GAAG,OAAO/O,EAAEwY,SAASL,EAAEhuB,EAAEywB,YAAYF,KAAK1a,EAAE+O,GAAG5kB,EAAEywB,YAAYE,MAAM9a,EAAE+O,EAAE,CAAC,EAAEkM,EAAE,SAAS9wB,GAAG,OAAO,SAAS6V,GAAG,IAAI+O,EAAErZ,UAAUpN,OAAO,QAAG,IAASoN,UAAU,GAAGA,UAAU,GAAG,CAAC,EAA0D,OAAOmc,EAA7D,CAAC+I,YAAYzwB,EAAEywB,YAAYvvB,MAAMlB,EAAEkB,MAAME,UAAUyU,GAAc+O,EAAEgM,QAAQ,CAAC,EAAEG,EAAE,SAAS/wB,GAAG,OAAO,SAAS6V,EAAE/K,GAAG,IAAI+f,EAAEhV,EAAEpW,KAAI,SAAUO,GAAG,OAAO4kB,EAAEA,EAAE,CAAC,EAAE5kB,GAAG,CAAC,EAAE,CAACoQ,OAAO2f,EAAE/vB,EAAEoQ,QAAQ,CAAC,IAAK,IAAG,OAAOpQ,EAAEywB,YAAYF,KAAK,CAAClC,OAAOJ,EAAE1X,KAAK,sBAAsBhT,KAAK,CAACytB,SAASnG,GAAGyC,WAAU,GAAIxiB,EAAE,CAAC,EAAEyG,EAAE,SAASvR,GAAG,OAAO,SAAS6V,EAAEgV,GAAG,OAAO9I,QAAQqK,IAAIvW,EAAEpW,KAAI,SAAUoW,GAAG,IAAI9F,EAAE8F,EAAEzF,OAAO+a,EAAEpb,EAAE8D,UAAUrT,EAAEuP,EAAEya,WAAWloB,EAAEwI,EAAEiF,EAAE,CAAC,YAAY,eAAe,OAAO+gB,EAAE9wB,EAAF8wB,CAAKjb,EAAEzU,UAAU,CAACwvB,QAAQ,CAACtO,qBAAqB2O,KAAK3O,qBAAqB6I,EAAE3qB,EAAEokB,EAAEA,EAAE,CAAC,EAAEiG,GAAGvoB,GAAI,IAAG,CAAC,EAAE4uB,EAAE,SAASlxB,GAAG,OAAO,SAAS6V,EAAE+O,EAAE9Z,GAAG,OAAO9K,EAAEywB,YAAYF,KAAK,CAAClC,OAAOJ,EAAE1X,KAAK1H,EAAE,0BAA0B7O,EAAEoB,WAAWmC,KAAK,CAACT,MAAM+S,EAAEwM,eAAeuC,GAAG0I,WAAU,GAAIxiB,EAAE,CAAC,EAAEqmB,EAAE,SAASnxB,GAAG,OAAO,SAAS6V,EAAE+O,GAAG,OAAO5kB,EAAEywB,YAAYF,KAAK,CAAClC,OAAOJ,EAAE1X,KAAK1H,EAAE,qBAAqB7O,EAAEoB,WAAWmC,KAAK,CAACT,MAAM+S,GAAGyX,WAAU,GAAI1I,EAAE,CAAC,EAAEqM,EAAE,SAASjxB,GAAG,OAAO,SAAS6V,EAAE+O,EAAE9Z,GAAG,OAAO9K,EAAEywB,YAAYF,KAAK,CAAClC,OAAOJ,EAAE1X,KAAK1H,EAAE,+BAA+B7O,EAAEoB,UAAUyU,GAAGtS,KAAK,CAACinB,WAAW5F,GAAG0I,WAAU,GAAIxiB,EAAE,CAAC,EAAEsmB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE,SAASC,EAAEvxB,EAAE6V,EAAE/K,GAAG,IAAI+f,EAAE9a,EAAE,CAAC7O,MAAMlB,EAAEmB,OAAO0U,EAAE+Y,SAAS,CAACC,QAAQ,EAAE0B,KAAK,EAAEI,MAAM,IAAIjB,UAAU,CAACC,KAAK,SAAS3vB,GAAG,OAAO,IAAI+hB,SAAQ,SAAUlM,GAAG,IAAI+O,EAAE,IAAI4M,eAAe5M,EAAE6M,KAAKzxB,EAAEquB,OAAOruB,EAAEgF,KAAI,GAAIjG,OAAOwG,KAAKvF,EAAEotB,SAASnmB,SAAQ,SAAU4O,GAAG,OAAO+O,EAAE8M,iBAAiB7b,EAAE7V,EAAEotB,QAAQvX,GAAI,IAAG,IAAI/K,EAAE+f,EAAE,SAAS7qB,EAAE8K,GAAG,OAAOpD,YAAW,WAAYkd,EAAE+M,QAAQ9b,EAAE,CAAC8X,OAAO,EAAEhoB,QAAQmF,EAAEskB,YAAW,GAAK,GAAE,IAAIpvB,EAAE,EAAE+P,EAAE8a,EAAE7qB,EAAE2uB,eAAe,sBAAsB/J,EAAEgN,mBAAmB,WAAWhN,EAAEiN,WAAWjN,EAAEkN,aAAQ,IAAShnB,IAAIinB,aAAahiB,GAAGjF,EAAE+f,EAAE7qB,EAAE8uB,gBAAgB,kBAAkB,EAAElK,EAAEoN,QAAQ,WAAW,IAAIpN,EAAE+I,SAASoE,aAAahiB,GAAGgiB,aAAajnB,GAAG+K,EAAE,CAAClQ,QAAQif,EAAEqN,cAAc,yBAAyBtE,OAAO/I,EAAE+I,OAAOyB,YAAW,IAAK,EAAExK,EAAEsN,OAAO,WAAWH,aAAahiB,GAAGgiB,aAAajnB,GAAG+K,EAAE,CAAClQ,QAAQif,EAAEqN,aAAatE,OAAO/I,EAAE+I,OAAOyB,YAAW,GAAI,EAAExK,EAAE+K,KAAK3vB,EAAEuD,KAAM,GAAE,GAAG8rB,QAAQxE,EAAEyG,EAAE,CAACa,MAAM,SAASnyB,EAAE6V,GAAG,OAAOub,GAAGvG,GAAGptB,QAAQ00B,MAAMnyB,EAAE6V,GAAGkM,QAAQC,SAAS,EAAEsN,KAAK,SAAStvB,EAAE6V,GAAG,OAAOwb,GAAGxG,GAAGptB,QAAQ6xB,KAAKtvB,EAAE6V,GAAGkM,QAAQC,SAAS,EAAEtkB,MAAM,SAASsC,EAAE6V,GAAG,OAAOpY,QAAQC,MAAMsC,EAAE6V,GAAGkM,QAAQC,SAAS,IAAIqO,eAAe/tB,IAAI8tB,cAAc9tB,EAAE,CAACqqB,cAAa,IAAK6C,WAAWhvB,EAAE,CAACisB,OAAO,CAACtB,EAAE,CAACrrB,IAAI,GAAG2D,OAAO,SAAS,KAAKA,OAAOzD,KAAKsC,OAAOisB,UAAUsB,EAAE,UAAUC,IAAI,CAAChH,QAAQ,UAAUvoB,QAAQ,SAAS4vB,SAASpkB,EAAEihB,uBAAuB,OAAOkD,EAAEtL,EAAEA,EAAEA,EAAE,CAAC,EAAE7U,GAAGjF,GAAG,CAAC,EAAE,CAAC8lB,QAAQ,CAACvpB,OAAO0pB,EAAEzO,qBAAqB/Q,EAAE6gB,gBAAgBrB,EAAEsB,6BAA6B9gB,EAAE+gB,cAAczB,EAAEzO,UAAU,SAASpiB,GAAG,OAAO,SAAS6V,GAAG,OAAOib,EAAE9wB,EAAF8wB,CAAKjb,EAAE,CAAC+a,QAAQ,CAACvpB,OAAO8pB,EAAE7O,qBAAqB2O,EAAEpP,YAAYqP,IAAI,CAAC,KAAK,CAAC,OAAOK,EAAEhxB,QAAQ,SAASgxB,CAAE,CAAj2b1b","sources":["webpack://website/../node_modules/.pnpm/@docusaurus+theme-common@2.4.3_@docusaurus+types@2.4.3_eslint@8.51.0_react-dom@18.2.0_react@18.2.0_typescript@4.9.5/node_modules/@docusaurus/theme-common/src/utils/usePluralForm.ts","webpack://website/../node_modules/.pnpm/@docusaurus+theme-search-algolia@2.4.3_@algolia+client-search@4.20.0_@docusaurus+types@2.4.3__osidlnyzchwfqropdnmnzwlh64/node_modules/@docusaurus/theme-search-algolia/lib/theme/SearchPage/styles.module.css","webpack://website/../node_modules/.pnpm/@docusaurus+theme-search-algolia@2.4.3_@algolia+client-search@4.20.0_@docusaurus+types@2.4.3__osidlnyzchwfqropdnmnzwlh64/node_modules/@docusaurus/theme-search-algolia/lib/theme/SearchPage/index.js","webpack://website/../node_modules/.pnpm/@algolia+events@4.0.1/node_modules/@algolia/events/events.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/index.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/compact.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/escapeFacetValue.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/find.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/inherits.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/intersection.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/merge.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/omit.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/orderBy.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/requestBuilder.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","webpack://website/../node_modules/.pnpm/algoliasearch-helper@3.14.2_algoliasearch@4.20.0/node_modules/algoliasearch-helper/src/version.js","webpack://website/../node_modules/.pnpm/algoliasearch@4.20.0/node_modules/algoliasearch/dist/algoliasearch-lite.umd.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\n\n// We want to ensurer a stable plural form order in all cases\n// It is more convenient and natural to handle \"small values\" first\n// See https://twitter.com/sebastienlorber/status/1366820663261077510\nconst OrderedPluralForms: Intl.LDMLPluralRule[] = [\n  'zero',\n  'one',\n  'two',\n  'few',\n  'many',\n  'other',\n];\nfunction sortPluralForms(\n  pluralForms: Intl.LDMLPluralRule[],\n): Intl.LDMLPluralRule[] {\n  return OrderedPluralForms.filter((pf) => pluralForms.includes(pf));\n}\n\ntype LocalePluralForms = {\n  locale: string;\n  pluralForms: Intl.LDMLPluralRule[];\n  select: (count: number) => Intl.LDMLPluralRule;\n};\n\n// Hardcoded english/fallback implementation\nconst EnglishPluralForms: LocalePluralForms = {\n  locale: 'en',\n  pluralForms: sortPluralForms(['one', 'other']),\n  select: (count) => (count === 1 ? 'one' : 'other'),\n};\n\nfunction createLocalePluralForms(locale: string): LocalePluralForms {\n  const pluralRules = new Intl.PluralRules(locale);\n  return {\n    locale,\n    pluralForms: sortPluralForms(\n      pluralRules.resolvedOptions().pluralCategories,\n    ),\n    select: (count) => pluralRules.select(count),\n  };\n}\n\n/**\n * Poor man's `PluralSelector` implementation, using an English fallback. We\n * want a lightweight, future-proof and good-enough solution. We don't want a\n * perfect and heavy solution.\n *\n * Docusaurus classic theme has only 2 deeply nested labels requiring complex\n * plural rules. We don't want to use `Intl` + `PluralRules` polyfills + full\n * ICU syntax (react-intl) just for that.\n *\n * Notes:\n * - 2021: 92+% Browsers support `Intl.PluralRules`, and support will increase\n * in the future\n * - NodeJS >= 13 has full ICU support by default\n * - In case of \"mismatch\" between SSR and Browser ICU support, React keeps\n * working!\n */\nfunction useLocalePluralForms(): LocalePluralForms {\n  const {\n    i18n: {currentLocale},\n  } = useDocusaurusContext();\n  return useMemo(() => {\n    try {\n      return createLocalePluralForms(currentLocale);\n    } catch (err) {\n      console.error(`Failed to use Intl.PluralRules for locale \"${currentLocale}\".\nDocusaurus will fallback to the default (English) implementation.\nError: ${(err as Error).message}\n`);\n      return EnglishPluralForms;\n    }\n  }, [currentLocale]);\n}\n\nfunction selectPluralMessage(\n  pluralMessages: string,\n  count: number,\n  localePluralForms: LocalePluralForms,\n): string {\n  const separator = '|';\n  const parts = pluralMessages.split(separator);\n\n  if (parts.length === 1) {\n    return parts[0]!;\n  }\n  if (parts.length > localePluralForms.pluralForms.length) {\n    console.error(\n      `For locale=${localePluralForms.locale}, a maximum of ${\n        localePluralForms.pluralForms.length\n      } plural forms are expected (${localePluralForms.pluralForms.join(\n        ',',\n      )}), but the message contains ${parts.length}: ${pluralMessages}`,\n    );\n  }\n  const pluralForm = localePluralForms.select(count);\n  const pluralFormIndex = localePluralForms.pluralForms.indexOf(pluralForm);\n  // In case of not enough plural form messages, we take the last one (other)\n  // instead of returning undefined\n  return parts[Math.min(pluralFormIndex, parts.length - 1)]!;\n}\n\n/**\n * Reads the current locale and returns an interface very similar to\n * `Intl.PluralRules`.\n */\nexport function usePluralForm(): {\n  /**\n   * Give it a `count` and it will select the relevant message from\n   * `pluralMessages`. `pluralMessages` should be separated by `|`, and in the\n   * order of \"zero\", \"one\", \"two\", \"few\", \"many\", \"other\". The actual selection\n   * is done by `Intl.PluralRules`, which tells us all plurals the locale has\n   * and which plural we should use for `count`.\n   */\n  selectMessage: (count: number, pluralMessages: string) => string;\n} {\n  const localePluralForm = useLocalePluralForms();\n  return {\n    selectMessage: (count: number, pluralMessages: string): string =>\n      selectPluralMessage(pluralMessages, count, localePluralForm),\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchQueryInput\":\"searchQueryInput_cWxV\",\"searchVersionInput\":\"searchVersionInput_Oxrq\",\"searchResultsColumn\":\"searchResultsColumn_JFrl\",\"algoliaLogo\":\"algoliaLogo_pVCu\",\"algoliaLogoPathFill\":\"algoliaLogoPathFill__LKu\",\"searchResultItem\":\"searchResultItem_f00Z\",\"searchResultItemHeading\":\"searchResultItemHeading_a0oA\",\"searchResultItemPath\":\"searchResultItemPath_KUsa\",\"searchResultItemSummary\":\"searchResultItemSummary_DLK5\",\"searchQueryColumn\":\"searchQueryColumn_rb9a\",\"searchVersionColumn\":\"searchVersionColumn_DLfF\",\"searchLogoColumn\":\"searchLogoColumn_mnGv\",\"loadingSpinner\":\"loadingSpinner_l58d\",\"loading-spin\":\"loading-spin_mC0S\",\"loader\":\"loader_TxRc\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* eslint-disable jsx-a11y/no-autofocus */\nimport React, {useEffect, useReducer, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport algoliaSearchHelper from 'algoliasearch-helper';\nimport algoliaSearch from 'algoliasearch/lite';\nimport ExecutionEnvironment from '@docusaurus/ExecutionEnvironment';\nimport Head from '@docusaurus/Head';\nimport Link from '@docusaurus/Link';\nimport {useAllDocsData} from '@docusaurus/plugin-content-docs/client';\nimport {\n  HtmlClassNameProvider,\n  useEvent,\n  usePluralForm,\n  useSearchQueryString,\n} from '@docusaurus/theme-common';\nimport {useTitleFormatter} from '@docusaurus/theme-common/internal';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  useAlgoliaThemeConfig,\n  useSearchResultUrlProcessor,\n} from '@docusaurus/theme-search-algolia/client';\nimport Layout from '@theme/Layout';\nimport styles from './styles.module.css';\n// Very simple pluralization: probably good enough for now\nfunction useDocumentsFoundPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.SearchPage.documentsFound.plurals',\n          description:\n            'Pluralized label for \"{count} documents found\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One document found|{count} documents found',\n        },\n        {count},\n      ),\n    );\n}\nfunction useDocsSearchVersionsHelpers() {\n  const allDocsData = useAllDocsData();\n  // State of the version select menus / algolia facet filters\n  // docsPluginId -> versionName map\n  const [searchVersions, setSearchVersions] = useState(() =>\n    Object.entries(allDocsData).reduce(\n      (acc, [pluginId, pluginData]) => ({\n        ...acc,\n        [pluginId]: pluginData.versions[0].name,\n      }),\n      {},\n    ),\n  );\n  // Set the value of a single select menu\n  const setSearchVersion = (pluginId, searchVersion) =>\n    setSearchVersions((s) => ({...s, [pluginId]: searchVersion}));\n  const versioningEnabled = Object.values(allDocsData).some(\n    (docsData) => docsData.versions.length > 1,\n  );\n  return {\n    allDocsData,\n    versioningEnabled,\n    searchVersions,\n    setSearchVersion,\n  };\n}\n// We want to display one select per versioned docs plugin instance\nfunction SearchVersionSelectList({docsSearchVersionsHelpers}) {\n  const versionedPluginEntries = Object.entries(\n    docsSearchVersionsHelpers.allDocsData,\n  )\n    // Do not show a version select for unversioned docs plugin instances\n    .filter(([, docsData]) => docsData.versions.length > 1);\n  return (\n    <div\n      className={clsx(\n        'col',\n        'col--3',\n        'padding-left--none',\n        styles.searchVersionColumn,\n      )}>\n      {versionedPluginEntries.map(([pluginId, docsData]) => {\n        const labelPrefix =\n          versionedPluginEntries.length > 1 ? `${pluginId}: ` : '';\n        return (\n          <select\n            key={pluginId}\n            onChange={(e) =>\n              docsSearchVersionsHelpers.setSearchVersion(\n                pluginId,\n                e.target.value,\n              )\n            }\n            defaultValue={docsSearchVersionsHelpers.searchVersions[pluginId]}\n            className={styles.searchVersionInput}>\n            {docsData.versions.map((version, i) => (\n              <option\n                key={i}\n                label={`${labelPrefix}${version.label}`}\n                value={version.name}\n              />\n            ))}\n          </select>\n        );\n      })}\n    </div>\n  );\n}\nfunction SearchPageContent() {\n  const {\n    i18n: {currentLocale},\n  } = useDocusaurusContext();\n  const {\n    algolia: {appId, apiKey, indexName},\n  } = useAlgoliaThemeConfig();\n  const processSearchResultUrl = useSearchResultUrlProcessor();\n  const documentsFoundPlural = useDocumentsFoundPlural();\n  const docsSearchVersionsHelpers = useDocsSearchVersionsHelpers();\n  const [searchQuery, setSearchQuery] = useSearchQueryString();\n  const initialSearchResultState = {\n    items: [],\n    query: null,\n    totalResults: null,\n    totalPages: null,\n    lastPage: null,\n    hasMore: null,\n    loading: null,\n  };\n  const [searchResultState, searchResultStateDispatcher] = useReducer(\n    (prevState, data) => {\n      switch (data.type) {\n        case 'reset': {\n          return initialSearchResultState;\n        }\n        case 'loading': {\n          return {...prevState, loading: true};\n        }\n        case 'update': {\n          if (searchQuery !== data.value.query) {\n            return prevState;\n          }\n          return {\n            ...data.value,\n            items:\n              data.value.lastPage === 0\n                ? data.value.items\n                : prevState.items.concat(data.value.items),\n          };\n        }\n        case 'advance': {\n          const hasMore = prevState.totalPages > prevState.lastPage + 1;\n          return {\n            ...prevState,\n            lastPage: hasMore ? prevState.lastPage + 1 : prevState.lastPage,\n            hasMore,\n          };\n        }\n        default:\n          return prevState;\n      }\n    },\n    initialSearchResultState,\n  );\n  const algoliaClient = algoliaSearch(appId, apiKey);\n  const algoliaHelper = algoliaSearchHelper(algoliaClient, indexName, {\n    hitsPerPage: 15,\n    advancedSyntax: true,\n    disjunctiveFacets: ['language', 'docusaurus_tag'],\n  });\n  algoliaHelper.on(\n    'result',\n    ({results: {query, hits, page, nbHits, nbPages}}) => {\n      if (query === '' || !Array.isArray(hits)) {\n        searchResultStateDispatcher({type: 'reset'});\n        return;\n      }\n      const sanitizeValue = (value) =>\n        value.replace(\n          /algolia-docsearch-suggestion--highlight/g,\n          'search-result-match',\n        );\n      const items = hits.map(\n        ({\n          url,\n          _highlightResult: {hierarchy},\n          _snippetResult: snippet = {},\n        }) => {\n          const titles = Object.keys(hierarchy).map((key) =>\n            sanitizeValue(hierarchy[key].value),\n          );\n          return {\n            title: titles.pop(),\n            url: processSearchResultUrl(url),\n            summary: snippet.content\n              ? `${sanitizeValue(snippet.content.value)}...`\n              : '',\n            breadcrumbs: titles,\n          };\n        },\n      );\n      searchResultStateDispatcher({\n        type: 'update',\n        value: {\n          items,\n          query,\n          totalResults: nbHits,\n          totalPages: nbPages,\n          lastPage: page,\n          hasMore: nbPages > page + 1,\n          loading: false,\n        },\n      });\n    },\n  );\n  const [loaderRef, setLoaderRef] = useState(null);\n  const prevY = useRef(0);\n  const observer = useRef(\n    ExecutionEnvironment.canUseIntersectionObserver &&\n      new IntersectionObserver(\n        (entries) => {\n          const {\n            isIntersecting,\n            boundingClientRect: {y: currentY},\n          } = entries[0];\n          if (isIntersecting && prevY.current > currentY) {\n            searchResultStateDispatcher({type: 'advance'});\n          }\n          prevY.current = currentY;\n        },\n        {threshold: 1},\n      ),\n  );\n  const getTitle = () =>\n    searchQuery\n      ? translate(\n          {\n            id: 'theme.SearchPage.existingResultsTitle',\n            message: 'Search results for \"{query}\"',\n            description: 'The search page title for non-empty query',\n          },\n          {\n            query: searchQuery,\n          },\n        )\n      : translate({\n          id: 'theme.SearchPage.emptyResultsTitle',\n          message: 'Search the documentation',\n          description: 'The search page title for empty query',\n        });\n  const makeSearch = useEvent((page = 0) => {\n    algoliaHelper.addDisjunctiveFacetRefinement('docusaurus_tag', 'default');\n    algoliaHelper.addDisjunctiveFacetRefinement('language', currentLocale);\n    Object.entries(docsSearchVersionsHelpers.searchVersions).forEach(\n      ([pluginId, searchVersion]) => {\n        algoliaHelper.addDisjunctiveFacetRefinement(\n          'docusaurus_tag',\n          `docs-${pluginId}-${searchVersion}`,\n        );\n      },\n    );\n    algoliaHelper.setQuery(searchQuery).setPage(page).search();\n  });\n  useEffect(() => {\n    if (!loaderRef) {\n      return undefined;\n    }\n    const currentObserver = observer.current;\n    if (currentObserver) {\n      currentObserver.observe(loaderRef);\n      return () => currentObserver.unobserve(loaderRef);\n    }\n    return () => true;\n  }, [loaderRef]);\n  useEffect(() => {\n    searchResultStateDispatcher({type: 'reset'});\n    if (searchQuery) {\n      searchResultStateDispatcher({type: 'loading'});\n      setTimeout(() => {\n        makeSearch();\n      }, 300);\n    }\n  }, [searchQuery, docsSearchVersionsHelpers.searchVersions, makeSearch]);\n  useEffect(() => {\n    if (!searchResultState.lastPage || searchResultState.lastPage === 0) {\n      return;\n    }\n    makeSearch(searchResultState.lastPage);\n  }, [makeSearch, searchResultState.lastPage]);\n  return (\n    <Layout>\n      <Head>\n        <title>{useTitleFormatter(getTitle())}</title>\n        {/*\n         We should not index search pages\n          See https://github.com/facebook/docusaurus/pull/3233\n        */}\n        <meta property=\"robots\" content=\"noindex, follow\" />\n      </Head>\n\n      <div className=\"container margin-vert--lg\">\n        <h1>{getTitle()}</h1>\n\n        <form className=\"row\" onSubmit={(e) => e.preventDefault()}>\n          <div\n            className={clsx('col', styles.searchQueryColumn, {\n              'col--9': docsSearchVersionsHelpers.versioningEnabled,\n              'col--12': !docsSearchVersionsHelpers.versioningEnabled,\n            })}>\n            <input\n              type=\"search\"\n              name=\"q\"\n              className={styles.searchQueryInput}\n              placeholder={translate({\n                id: 'theme.SearchPage.inputPlaceholder',\n                message: 'Type your search here',\n                description: 'The placeholder for search page input',\n              })}\n              aria-label={translate({\n                id: 'theme.SearchPage.inputLabel',\n                message: 'Search',\n                description: 'The ARIA label for search page input',\n              })}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              value={searchQuery}\n              autoComplete=\"off\"\n              autoFocus\n            />\n          </div>\n\n          {docsSearchVersionsHelpers.versioningEnabled && (\n            <SearchVersionSelectList\n              docsSearchVersionsHelpers={docsSearchVersionsHelpers}\n            />\n          )}\n        </form>\n\n        <div className=\"row\">\n          <div className={clsx('col', 'col--8', styles.searchResultsColumn)}>\n            {!!searchResultState.totalResults &&\n              documentsFoundPlural(searchResultState.totalResults)}\n          </div>\n\n          <div\n            className={clsx(\n              'col',\n              'col--4',\n              'text--right',\n              styles.searchLogoColumn,\n            )}>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.algolia.com/\"\n              aria-label={translate({\n                id: 'theme.SearchPage.algoliaLabel',\n                message: 'Search by Algolia',\n                description: 'The ARIA label for Algolia mention',\n              })}>\n              <svg viewBox=\"0 0 168 24\" className={styles.algoliaLogo}>\n                <g fill=\"none\">\n                  <path\n                    className={styles.algoliaLogoPathFill}\n                    d=\"M120.925 18.804c-4.386.02-4.386-3.54-4.386-4.106l-.007-13.336 2.675-.424v13.254c0 .322 0 2.358 1.718 2.364v2.248zm-10.846-2.18c.821 0 1.43-.047 1.855-.129v-2.719a6.334 6.334 0 0 0-1.574-.199 5.7 5.7 0 0 0-.897.069 2.699 2.699 0 0 0-.814.24c-.24.116-.439.28-.582.491-.15.212-.219.335-.219.656 0 .628.219.991.616 1.23s.938.362 1.615.362zm-.233-9.7c.883 0 1.629.109 2.231.328.602.218 1.088.525 1.444.915.363.396.609.922.76 1.483.157.56.232 1.175.232 1.85v6.874a32.5 32.5 0 0 1-1.868.314c-.834.123-1.772.185-2.813.185-.69 0-1.327-.069-1.895-.198a4.001 4.001 0 0 1-1.471-.636 3.085 3.085 0 0 1-.951-1.134c-.226-.465-.343-1.12-.343-1.803 0-.656.13-1.073.384-1.525a3.24 3.24 0 0 1 1.047-1.106c.445-.287.95-.492 1.532-.615a8.8 8.8 0 0 1 1.82-.185 8.404 8.404 0 0 1 1.972.24v-.438c0-.307-.035-.6-.11-.874a1.88 1.88 0 0 0-.384-.73 1.784 1.784 0 0 0-.724-.493 3.164 3.164 0 0 0-1.143-.205c-.616 0-1.177.075-1.69.164a7.735 7.735 0 0 0-1.26.307l-.321-2.192c.335-.117.834-.233 1.478-.349a10.98 10.98 0 0 1 2.073-.178zm52.842 9.626c.822 0 1.43-.048 1.854-.13V13.7a6.347 6.347 0 0 0-1.574-.199c-.294 0-.595.021-.896.069a2.7 2.7 0 0 0-.814.24 1.46 1.46 0 0 0-.582.491c-.15.212-.218.335-.218.656 0 .628.218.991.615 1.23.404.245.938.362 1.615.362zm-.226-9.694c.883 0 1.629.108 2.231.327.602.219 1.088.526 1.444.915.355.39.609.923.759 1.483a6.8 6.8 0 0 1 .233 1.852v6.873c-.41.088-1.034.19-1.868.314-.834.123-1.772.184-2.813.184-.69 0-1.327-.068-1.895-.198a4.001 4.001 0 0 1-1.471-.635 3.085 3.085 0 0 1-.951-1.134c-.226-.465-.343-1.12-.343-1.804 0-.656.13-1.073.384-1.524.26-.45.608-.82 1.047-1.107.445-.286.95-.491 1.532-.614a8.803 8.803 0 0 1 2.751-.13c.329.034.671.096 1.04.185v-.437a3.3 3.3 0 0 0-.109-.875 1.873 1.873 0 0 0-.384-.731 1.784 1.784 0 0 0-.724-.492 3.165 3.165 0 0 0-1.143-.205c-.616 0-1.177.075-1.69.164a7.75 7.75 0 0 0-1.26.307l-.321-2.193c.335-.116.834-.232 1.478-.348a11.633 11.633 0 0 1 2.073-.177zm-8.034-1.271a1.626 1.626 0 0 1-1.628-1.62c0-.895.725-1.62 1.628-1.62.904 0 1.63.725 1.63 1.62 0 .895-.733 1.62-1.63 1.62zm1.348 13.22h-2.689V7.27l2.69-.423v11.956zm-4.714 0c-4.386.02-4.386-3.54-4.386-4.107l-.008-13.336 2.676-.424v13.254c0 .322 0 2.358 1.718 2.364v2.248zm-8.698-5.903c0-1.156-.253-2.119-.746-2.788-.493-.677-1.183-1.01-2.067-1.01-.882 0-1.574.333-2.065 1.01-.493.676-.733 1.632-.733 2.788 0 1.168.246 1.953.74 2.63.492.683 1.183 1.018 2.066 1.018.882 0 1.574-.342 2.067-1.019.492-.683.738-1.46.738-2.63zm2.737-.007c0 .902-.13 1.584-.397 2.33a5.52 5.52 0 0 1-1.128 1.906 4.986 4.986 0 0 1-1.752 1.223c-.685.286-1.739.45-2.265.45-.528-.006-1.574-.157-2.252-.45a5.096 5.096 0 0 1-1.744-1.223c-.487-.527-.863-1.162-1.137-1.906a6.345 6.345 0 0 1-.41-2.33c0-.902.123-1.77.397-2.508a5.554 5.554 0 0 1 1.15-1.892 5.133 5.133 0 0 1 1.75-1.216c.679-.287 1.425-.423 2.232-.423.808 0 1.553.142 2.237.423a4.88 4.88 0 0 1 1.753 1.216 5.644 5.644 0 0 1 1.135 1.892c.287.738.431 1.606.431 2.508zm-20.138 0c0 1.12.246 2.363.738 2.882.493.52 1.13.78 1.91.78.424 0 .828-.062 1.204-.178.377-.116.677-.253.917-.417V9.33a10.476 10.476 0 0 0-1.766-.226c-.971-.028-1.71.37-2.23 1.004-.513.636-.773 1.75-.773 2.788zm7.438 5.274c0 1.824-.466 3.156-1.404 4.004-.936.846-2.367 1.27-4.296 1.27-.705 0-2.17-.137-3.34-.396l.431-2.118c.98.205 2.272.26 2.95.26 1.074 0 1.84-.219 2.299-.656.459-.437.684-1.086.684-1.948v-.437a8.07 8.07 0 0 1-1.047.397c-.43.13-.93.198-1.492.198-.739 0-1.41-.116-2.018-.349a4.206 4.206 0 0 1-1.567-1.025c-.431-.45-.774-1.017-1.013-1.694-.24-.677-.363-1.885-.363-2.773 0-.834.13-1.88.384-2.577.26-.696.629-1.298 1.129-1.796.493-.498 1.095-.881 1.8-1.162a6.605 6.605 0 0 1 2.428-.457c.87 0 1.67.109 2.45.24.78.129 1.444.265 1.985.415V18.17zM6.972 6.677v1.627c-.712-.446-1.52-.67-2.425-.67-.585 0-1.045.13-1.38.391a1.24 1.24 0 0 0-.502 1.03c0 .425.164.765.494 1.02.33.256.835.532 1.516.83.447.192.795.356 1.045.495.25.138.537.332.862.582.324.25.563.548.718.894.154.345.23.741.23 1.188 0 .947-.334 1.691-1.004 2.234-.67.542-1.537.814-2.601.814-1.18 0-2.16-.229-2.936-.686v-1.708c.84.628 1.814.942 2.92.942.585 0 1.048-.136 1.388-.407.34-.271.51-.646.51-1.125 0-.287-.1-.55-.302-.79-.203-.24-.42-.42-.655-.542-.234-.123-.585-.29-1.053-.503a61.27 61.27 0 0 1-.582-.271 13.67 13.67 0 0 1-.55-.287 4.275 4.275 0 0 1-.567-.351 6.92 6.92 0 0 1-.455-.4c-.18-.17-.31-.34-.39-.51-.08-.17-.155-.37-.224-.598a2.553 2.553 0 0 1-.104-.742c0-.915.333-1.638.998-2.17.664-.532 1.523-.798 2.576-.798.968 0 1.793.17 2.473.51zm7.468 5.696v-.287c-.022-.607-.187-1.088-.495-1.444-.309-.357-.75-.535-1.324-.535-.532 0-.99.194-1.373.583-.382.388-.622.949-.717 1.683h3.909zm1.005 2.792v1.404c-.596.34-1.383.51-2.362.51-1.255 0-2.255-.377-3-1.132-.744-.755-1.116-1.744-1.116-2.968 0-1.297.34-2.316 1.021-3.055.68-.74 1.548-1.11 2.6-1.11 1.033 0 1.852.323 2.458.966.606.644.91 1.572.91 2.784 0 .33-.033.676-.096 1.038h-5.314c.107.702.405 1.239.894 1.611.49.372 1.106.558 1.85.558.862 0 1.58-.202 2.155-.606zm6.605-1.77h-1.212c-.596 0-1.045.116-1.349.35-.303.234-.454.532-.454.894 0 .372.117.664.35.877.235.213.575.32 1.022.32.51 0 .912-.142 1.204-.424.293-.281.44-.651.44-1.108v-.91zm-4.068-2.554V9.325c.627-.361 1.457-.542 2.489-.542 2.116 0 3.175 1.026 3.175 3.08V17h-1.548v-.957c-.415.68-1.143 1.02-2.186 1.02-.766 0-1.38-.22-1.843-.661-.462-.442-.694-1.003-.694-1.684 0-.776.293-1.38.878-1.81.585-.431 1.404-.647 2.457-.647h1.34V11.8c0-.554-.133-.971-.399-1.253-.266-.282-.707-.423-1.324-.423a4.07 4.07 0 0 0-2.345.718zm9.333-1.93v1.42c.394-1 1.101-1.5 2.123-1.5.148 0 .313.016.494.048v1.531a1.885 1.885 0 0 0-.75-.143c-.542 0-.989.24-1.34.718-.351.479-.527 1.048-.527 1.707V17h-1.563V8.91h1.563zm5.01 4.084c.022.82.272 1.492.75 2.019.479.526 1.15.79 2.01.79.639 0 1.235-.176 1.788-.527v1.404c-.521.319-1.186.479-1.995.479-1.265 0-2.276-.4-3.031-1.197-.755-.798-1.133-1.792-1.133-2.984 0-1.16.38-2.151 1.14-2.975.761-.825 1.79-1.237 3.088-1.237.702 0 1.346.149 1.93.447v1.436a3.242 3.242 0 0 0-1.77-.495c-.84 0-1.513.266-2.019.798-.505.532-.758 1.213-.758 2.042zM40.24 5.72v4.579c.458-1 1.293-1.5 2.505-1.5.787 0 1.42.245 1.899.734.479.49.718 1.17.718 2.042V17h-1.564v-5.106c0-.553-.14-.98-.422-1.284-.282-.303-.652-.455-1.11-.455-.531 0-1.002.202-1.411.606-.41.405-.615 1.022-.615 1.851V17h-1.563V5.72h1.563zm14.966 10.02c.596 0 1.096-.253 1.5-.758.404-.506.606-1.157.606-1.955 0-.915-.202-1.62-.606-2.114-.404-.495-.92-.742-1.548-.742-.553 0-1.05.224-1.491.67-.442.447-.662 1.133-.662 2.058 0 .958.212 1.67.638 2.138.425.469.946.703 1.563.703zM53.004 5.72v4.42c.574-.894 1.388-1.341 2.44-1.341 1.022 0 1.857.383 2.506 1.149.649.766.973 1.781.973 3.047 0 1.138-.309 2.109-.925 2.912-.617.803-1.463 1.205-2.537 1.205-1.075 0-1.894-.447-2.457-1.34V17h-1.58V5.72h1.58zm9.908 11.104l-3.223-7.913h1.739l1.005 2.632 1.26 3.415c.096-.32.48-1.458 1.15-3.415l.909-2.632h1.66l-2.92 7.866c-.777 2.074-1.963 3.11-3.559 3.11a2.92 2.92 0 0 1-.734-.079v-1.34c.17.042.351.064.543.064 1.032 0 1.755-.57 2.17-1.708z\"\n                  />\n                  <path\n                    fill=\"#5468FF\"\n                    d=\"M78.988.938h16.594a2.968 2.968 0 0 1 2.966 2.966V20.5a2.967 2.967 0 0 1-2.966 2.964H78.988a2.967 2.967 0 0 1-2.966-2.964V3.897A2.961 2.961 0 0 1 78.988.938z\"\n                  />\n                  <path\n                    fill=\"white\"\n                    d=\"M89.632 5.967v-.772a.978.978 0 0 0-.978-.977h-2.28a.978.978 0 0 0-.978.977v.793c0 .088.082.15.171.13a7.127 7.127 0 0 1 1.984-.28c.65 0 1.295.088 1.917.259.082.02.164-.04.164-.13m-6.248 1.01l-.39-.389a.977.977 0 0 0-1.382 0l-.465.465a.973.973 0 0 0 0 1.38l.383.383c.062.061.15.047.205-.014.226-.307.472-.601.746-.874.281-.28.568-.526.883-.751.068-.042.075-.137.02-.2m4.16 2.453v3.341c0 .096.104.165.192.117l2.97-1.537c.068-.034.089-.117.055-.184a3.695 3.695 0 0 0-3.08-1.866c-.068 0-.136.054-.136.13m0 8.048a4.489 4.489 0 0 1-4.49-4.482 4.488 4.488 0 0 1 4.49-4.482 4.488 4.488 0 0 1 4.489 4.482 4.484 4.484 0 0 1-4.49 4.482m0-10.85a6.363 6.363 0 1 0 0 12.729 6.37 6.37 0 0 0 6.372-6.368 6.358 6.358 0 0 0-6.371-6.36\"\n                  />\n                </g>\n              </svg>\n            </a>\n          </div>\n        </div>\n\n        {searchResultState.items.length > 0 ? (\n          <main>\n            {searchResultState.items.map(\n              ({title, url, summary, breadcrumbs}, i) => (\n                <article key={i} className={styles.searchResultItem}>\n                  <h2 className={styles.searchResultItemHeading}>\n                    <Link to={url} dangerouslySetInnerHTML={{__html: title}} />\n                  </h2>\n\n                  {breadcrumbs.length > 0 && (\n                    <nav aria-label=\"breadcrumbs\">\n                      <ul\n                        className={clsx(\n                          'breadcrumbs',\n                          styles.searchResultItemPath,\n                        )}>\n                        {breadcrumbs.map((html, index) => (\n                          <li\n                            key={index}\n                            className=\"breadcrumbs__item\"\n                            // Developer provided the HTML, so assume it's safe.\n                            // eslint-disable-next-line react/no-danger\n                            dangerouslySetInnerHTML={{__html: html}}\n                          />\n                        ))}\n                      </ul>\n                    </nav>\n                  )}\n\n                  {summary && (\n                    <p\n                      className={styles.searchResultItemSummary}\n                      // Developer provided the HTML, so assume it's safe.\n                      // eslint-disable-next-line react/no-danger\n                      dangerouslySetInnerHTML={{__html: summary}}\n                    />\n                  )}\n                </article>\n              ),\n            )}\n          </main>\n        ) : (\n          [\n            searchQuery && !searchResultState.loading && (\n              <p key=\"no-results\">\n                <Translate\n                  id=\"theme.SearchPage.noResultsText\"\n                  description=\"The paragraph for empty search result\">\n                  No results were found\n                </Translate>\n              </p>\n            ),\n            !!searchResultState.loading && (\n              <div key=\"spinner\" className={styles.loadingSpinner} />\n            ),\n          ]\n        )}\n\n        {searchResultState.hasMore && (\n          <div className={styles.loader} ref={setLoaderRef}>\n            <Translate\n              id=\"theme.SearchPage.fetchingNewResults\"\n              description=\"The paragraph for fetching new search results\">\n              Fetching new results...\n            </Translate>\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n}\nexport default function SearchPage() {\n  return (\n    <HtmlClassNameProvider className=\"search-page-wrapper\">\n      <SearchPageContent />\n    </HtmlClassNameProvider>\n  );\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper} The helper instance\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\n\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n * @param {AlgoliaSearchHelper} mainHelper the main helper\n * @param {function} fn the function to create the derived state\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar omit = require('../functions/omit');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute]\n      ? [valueAsString]\n      : refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(\n    refinementList,\n    attribute,\n    value\n  ) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(\n    refinementList,\n    attribute,\n    value\n  ) {\n    if (value === undefined)\n      throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(\n    refinementList,\n    attribute,\n    refinementType\n  ) {\n    if (attribute === undefined) {\n      // return the same object if the list is already empty\n      // this is mainly for tests, as it doesn't have much impact on performance\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function (\n        memo,\n        key\n      ) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n\n        return memo;\n      },\n      {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n\n    // We return nothing if the attribute is not undefined, a string or a function,\n    // as it is not a valid value for a refinement\n    return undefined;\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean} true if the attribute is refined, false otherwise\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements =\n      Boolean(refinementList[attribute]) &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  },\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar find = require('../functions/find');\nvar intersection = require('../functions/intersection');\nvar merge = require('../functions/merge');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar omit = require('../functions/omit');\nvar valToNumber = require('../functions/valToNumber');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n * @param {any} a numeric refinement value\n * @param {any} b numeric refinement value\n * @return {boolean} true if the values are equal\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function (el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters\n    ? SearchParameters._parseNumbers(newParameters)\n    : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}'\n    );\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements =\n    params.hierarchicalFacetsRefinements || {};\n\n  // eslint-disable-next-line consistent-this\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not parse numbers again in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity',\n  ];\n\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (\n      geoRect\n    ) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function (value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (\n        currentRefinement.length > 0 &&\n        currentRefinement[0].indexOf(facet.rootPath) !== 0\n      ) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(\n          facet.name,\n          facet.rootPath\n        );\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (\n    currentState.tagFilters &&\n    params.tagRefinements &&\n    params.tagRefinements.length > 0\n  ) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n        'an error, if it is really what you want, you should first clear the tags with clearTags method.'\n    );\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n        'an error, if it is not, you should first clear the tags with clearTags method.'\n    );\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters} new instance with filters cleared\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      ),\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements ===\n        this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters} new instance with tags cleared\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0)\n      return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: [],\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters} new instance\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index,\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters} new instance\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery,\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters} new instance\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage,\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters} new instance\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets,\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters} new instance\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets,\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters} new instance\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n,\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters} new instance\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance,\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters} new instance\n   * @example\n   * // for price = 50 or 40\n   * state.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * state.addNumericRefinement('size', '=', 38);\n   * state.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function (attribute, operator, value) {\n    var val = valToNumber(value);\n\n    if (this.isNumericRefined(attribute, operator, val)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(val);\n    } else {\n      mod[attribute][operator] = [val];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod,\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function (facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function (facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function (facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function (facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters} new instance\n   */\n  removeNumericRefinement: function (attribute, operator, number) {\n    var paramValue = number;\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (\n          value,\n          key\n        ) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        }),\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (\n          value,\n          key\n        ) {\n          return key === attribute && value.op === operator;\n        }),\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      }),\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function (facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function (attribute, operator) {\n    return (\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator]\n    );\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>} new numeric refinements\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(\n        function (memo, key) {\n          var operators = numericRefinements[key];\n          var operatorList = {};\n\n          operators = operators || {};\n          Object.keys(operators).forEach(function (operator) {\n            var values = operators[operator] || [];\n            var outValues = [];\n            values.forEach(function (value) {\n              var predicateResult = attribute(\n                { val: value, op: operator },\n                key,\n                'numeric'\n              );\n              if (!predicateResult) outValues.push(value);\n            });\n            if (outValues.length !== values.length) {\n              hasChanged = true;\n            }\n            operatorList[operator] = outValues;\n          });\n\n          memo[key] = operatorList;\n\n          return memo;\n        },\n        {}\n      );\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n\n    // We return nothing if the attribute is not undefined, a string or a function,\n    // as it is not a valid value for a refinement\n    return undefined;\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters} new instance\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet]),\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters} new instance\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet]),\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' +\n          hierarchicalFacet.name +\n          '`'\n      );\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet]),\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(\n        this.facetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(\n        this.facetsExcludes,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the disjunctiveFacets attribute of the helper configuration'\n      );\n    }\n\n    if (\n      RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)\n    )\n      return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters} new instance\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag),\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      }),\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      }),\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      }),\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(\n        this.facetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(\n        this.facetsExcludes,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the disjunctiveFacets attribute of the helper configuration'\n      );\n    }\n    if (\n      !RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)\n    )\n      return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters} new instance\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      }),\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error(\n      'Cannot refine the undeclared facet ' +\n        facet +\n        '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets'\n    );\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(\n        this.facetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(\n        this.facetsExcludes,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the disjunctiveFacets attribute of the helper configuration'\n      );\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the hierarchicalFacets attribute of the helper configuration'\n      );\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facet)\n    );\n\n    var mod = {};\n\n    var upOneOrMultipleLevel =\n      this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 &&\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      (this.hierarchicalFacetsRefinements[facet][0] === value ||\n        // remove a parent refinement of the current refinement:\n        //  - refinement was 'beer > IPA > Flying dog'\n        //  - call is toggleRefine('beer > IPA')\n        //  - refinement should be `beer`\n        this.hierarchicalFacetsRefinements[facet][0].indexOf(\n          value + separator\n        ) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure(\n        {},\n        mod,\n        this.hierarchicalFacetsRefinements\n      ),\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function (facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the hierarchicalFacets attribute of the helper configuration.'\n      );\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure(\n        {},\n        mod,\n        this.hierarchicalFacetsRefinements\n      ),\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function (facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure(\n        {},\n        mod,\n        this.hierarchicalFacetsRefinements\n      ),\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters} new instance\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean} true if facet is a disjunctive facet\n   */\n  isDisjunctiveFacet: function (facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean} true if facetName is a hierarchical facet\n   */\n  isHierarchicalFacet: function (facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean} true if facet is a conjunctive facet\n   */\n  isConjunctiveFacet: function (facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean} true if the facet is refined\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(\n      this.disjunctiveFacetsRefinements,\n      facet,\n      value\n    );\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean} true if the facet is refined\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(\n    facet,\n    value\n  ) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return Boolean(this.numericRefinements[attribute]);\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean} true if tag is refined\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]} returns the list of refinements\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    // eslint-disable-next-line consistent-this\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function (facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements)\n      .filter(function (facet) {\n        return self.disjunctiveFacetsRefinements[facet].length > 0;\n      })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets())\n      .sort();\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]} returns the list of refinements\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function (facet) {\n        return facet.name;\n      }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    ).sort();\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]} returns the list of facets that are not refined\n   */\n  getUnrefinedDisjunctiveFacets: function () {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n\n    'facets',\n    'disjunctiveFacets',\n    'facetsRefinements',\n    'hierarchicalFacets',\n    'facetsExcludes',\n\n    'disjunctiveFacetsRefinements',\n    'numericRefinements',\n    'tagRefinements',\n    'hierarchicalFacetsRefinements',\n  ],\n\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n      if (\n        managedParameters.indexOf(paramName) === -1 &&\n        paramValue !== undefined\n      ) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (\n      previous,\n      key\n    ) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    },\n    previousPlainObject);\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function () {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function (hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function (hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function (hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function (hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName the hierarchicalFacet name\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function (hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function (facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n\n  toString: function () {\n    return JSON.stringify(this, null, 2);\n  },\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar fv = require('../functions/escapeFacetValue');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar orderBy = require('../functions/orderBy');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator =\n      state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    var hierarchicalRootPath =\n      state._getHierarchicalRootPath(hierarchicalFacet);\n    var hierarchicalShowParentLevel =\n      state._getHierarchicalShowParentLevel(hierarchicalFacet);\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null,\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function (facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function (tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function (tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            unescapeFacetValue(currentRefinement),\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\n// eslint-disable-next-line max-params\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null,\n  };\n}\n","'use strict';\n\nvar compact = require('../functions/compact');\nvar defaultsPure = require('../functions/defaultsPure');\nvar fv = require('../functions/escapeFacetValue');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar merge = require('../functions/merge');\nvar orderBy = require('../functions/orderBy');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * Turn an array of attributes in an object of attributes with their position in the array as value\n * @param {string[]} attributes the list of attributes in the record\n * @return {object} the list of attributes indexed by attribute name\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets All hierarchical facets\n * @param {string} hierarchicalAttributeName The name of the hierarchical attribute\n * @return {HierarchicalFacet} The hierarchical facet matching the attribute name\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(\n    hierarchicalFacets,\n    function facetKeyMatchesAttribute(hierarchicalFacet) {\n      var facetNames = hierarchicalFacet.attributes || [];\n      return facetNames.indexOf(hierarchicalAttributeName) > -1;\n    }\n  );\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  // eslint-disable-next-line consistent-this\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function (key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  Object.keys(options || {}).forEach(function (key) {\n    self[key] = options[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   * - `value` : the value of the facet highlighted (html)\n   * - `matchLevel`: `full`, `partial` or `none`, depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @name processingTimeMS\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(\n    function initFutureTree() {\n      return [];\n    }\n  );\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount,\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount,\n        };\n        assignFacetStats(\n          self.disjunctiveFacets[position],\n          mainSubResponse.facets_stats,\n          facetKey\n        );\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount,\n        };\n        assignFacetStats(\n          self.facets[position],\n          mainSubResponse.facets_stats,\n          facetKey\n        );\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(\n          self.hierarchicalFacets[position],\n          function (f) {\n            return f.attribute === dfacet;\n          }\n        );\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest =\n          (mainSubResponse.facets && mainSubResponse.facets[dfacet]) || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount,\n        };\n        assignFacetStats(\n          self.disjunctiveFacets[position],\n          result.facets_stats,\n          dfacet\n        );\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (\n            refinementValue\n          ) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (\n              !self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(\n                unescapeFacetValue(refinementValue)\n              ) > -1\n            ) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some parent level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (\n      currentRefinement.length === 0 ||\n      currentRefinement[0].split(separator).length < 2\n    ) {\n      return;\n    }\n\n    results.slice(nextDisjunctiveResult).forEach(function (result) {\n      var facets = result && result.facets ? result.facets : {};\n\n      Object.keys(facets).forEach(function (dfacet) {\n        var facetResults = facets[dfacet];\n        var position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(\n          self.hierarchicalFacets[position],\n          function (f) {\n            return f.attribute === dfacet;\n          }\n        );\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n        // then the disjunctive values will be `beers` (count: 100),\n        // but we do not want to display\n        //   | beers (100)\n        //     > IPA (5)\n        // We want\n        //   | beers (5)\n        //     > IPA (5)\n        var defaultData = {};\n\n        if (currentRefinement.length > 0) {\n          var root = currentRefinement[0].split(separator)[0];\n          defaultData[root] =\n            self.hierarchicalFacets[position][attributeIndex].data[root];\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n          defaultData,\n          facetResults,\n          self.hierarchicalFacets[position][attributeIndex].data\n        );\n      });\n\n      nextDisjunctiveResult++;\n    });\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainFacets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount,\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || { name: facetName };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(\n    generateHierarchicalTree(state)\n  );\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return (\n    find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate)\n  );\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function (name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name),\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value),\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    var hierarchicalFacetValues = find(results.hierarchicalFacets, predicate);\n    if (!hierarchicalFacetValues) return hierarchicalFacetValues;\n\n    var hierarchicalFacet =\n      results._state.getHierarchicalFacetByName(attribute);\n    var separator =\n      results._state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    var currentRefinement = unescapeFacetValue(\n      results._state.getHierarchicalRefinement(attribute)[0] || ''\n    );\n\n    if (currentRefinement.indexOf(hierarchicalFacet.rootPath) === 0) {\n      currentRefinement = currentRefinement.replace(\n        hierarchicalFacet.rootPath + separator,\n        ''\n      );\n    }\n\n    var currentRefinementSplit = currentRefinement.split(separator);\n    currentRefinementSplit.unshift(attribute);\n\n    setIsRefined(hierarchicalFacetValues, currentRefinementSplit, 0);\n\n    return hierarchicalFacetValues;\n  }\n\n  return undefined;\n}\n\n/**\n * Set the isRefined of a hierarchical facet result based on the current state.\n * @param {SearchResults.HierarchicalFacet} item Hierarchical facet to fix\n * @param {string[]} currentRefinement array of parts of the current hierarchical refinement\n * @param {number} depth recursion depth in the currentRefinement\n * @return {undefined} function mutates the item\n */\nfunction setIsRefined(item, currentRefinement, depth) {\n  item.isRefined = item.name === currentRefinement[depth];\n  if (item.data) {\n    item.data.forEach(function (child) {\n      setIsRefined(child, currentRefinement, depth + 1);\n    });\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn sort function to apply\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n * @return {HierarchicalFacet|Array} sorted node\n */\nfunction recSort(sortFn, node, names, level) {\n  level = level || 0;\n\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({ data: sortedChildren }, node);\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array} the sorted facet values\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n\n  var order = facetOrdering.order || [];\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function (acc, name, i) {\n    acc[name] = i;\n    return acc;\n  }, {});\n\n  facetValues.forEach(function (item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    if (reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else {\n      remainingFacets.push(item);\n    }\n  });\n\n  orderedFacets = orderedFacets.filter(function (facet) {\n    return facet;\n  });\n\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [\n      ['path', 'name'],\n      ['asc', 'asc'],\n    ];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n\n  return orderedFacets.concat(\n    orderBy(remainingFacets, ordering[0], ordering[1])\n  );\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering | undefined} the facet ordering\n */\nfunction getFacetOrdering(results, attribute) {\n  return (\n    results.renderingContent &&\n    results.renderingContent.facetOrdering &&\n    results.renderingContent.facetOrdering.values &&\n    results.renderingContent.facetOrdering.values[attribute]\n  );\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy),\n  });\n\n  // eslint-disable-next-line consistent-this\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n\n  return recSort(\n    function (data, facetName) {\n      if (options.facetOrdering) {\n        var facetOrdering = getFacetOrdering(results, facetName);\n        if (facetOrdering) {\n          return sortViaFacetOrdering(data, facetOrdering);\n        }\n      }\n\n      if (Array.isArray(options.sortBy)) {\n        var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n        return orderBy(data, order[0], order[1]);\n      } else if (typeof options.sortBy === 'function') {\n        return vanillaSortFn(options.sortBy, data);\n      }\n      throw new Error(\n        'options.sortBy is optional but if defined it must be ' +\n          'either an array of string (predicates) or a sorting function'\n      );\n    },\n    facetValues,\n    attributes\n  );\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName The attribute to look for\n * @return {object|undefined} The stats of the facet\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  // eslint-disable-next-line consistent-this\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(\n        getRefinement(state, 'facet', attributeName, name, results.facets)\n      );\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(\n        getRefinement(state, 'exclude', attributeName, name, results.facets)\n      );\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (\n    attributeName\n  ) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(\n        getRefinement(\n          state,\n          'disjunctive',\n          attributeName,\n          name,\n          results.disjunctiveFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (\n    attributeName\n  ) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(\n        getHierarchicalRefinement(\n          state,\n          attributeName,\n          name,\n          results.hierarchicalFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator,\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function (name) {\n    res.push({ type: 'tag', attributeName: '_tags', name: name });\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {SearchParameters} state the current state\n * @param {string} type the type of the refinement\n * @param {string} attributeName The attribute of the facet\n * @param {*} name The name of the facet\n * @param {Facet[]} resultsFacets facets from the results\n * @return {Refinement} the refinement\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive,\n  };\n}\n\n/**\n * @param {SearchParameters} state the current state\n * @param {string} attributeName the attribute of the hierarchical facet\n * @param {string} name the name of the facet\n * @param {Facet[]} resultsFacets facets from the results\n * @return {HierarchicalFacet} the hierarchical facet\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet &&\n      find(intermediateFacet.data, function (f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive,\n  };\n}\n\nmodule.exports = SearchResults;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\n\nvar DerivedHelper = require('./DerivedHelper');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\nvar inherits = require('./functions/inherits');\nvar merge = require('./functions/merge');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar requestBuilder = require('./requestBuilder');\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar version = require('./version');\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({ onlyWithDerivedHelpers: false });\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({ onlyWithDerivedHelpers: true });\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [cb] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options\n    ? this.state\n    : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  // eslint-disable-next-line consistent-this\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState,\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function (content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function (err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(\n    function (content) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n      return {\n        content: new SearchResults(tempState, content.results),\n        state: tempState,\n        _originalResponse: content,\n      };\n    },\n    function (e) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n      throw e;\n    }\n  );\n};\n\n/**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n * @deprecated answers is deprecated and will be replaced with new initiatives\n */\nAlgoliaSearchHelper.prototype.findAnswers = function (options) {\n  // eslint-disable-next-line no-console\n  console.warn('[algoliasearch-helper] answers is no longer supported');\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits,\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText',\n      ]),\n    }\n  );\n\n  var errorMessage =\n    'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (\n  facet,\n  query,\n  maxFacetHits,\n  userState\n) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  var clientHasInitIndex = typeof this.client.initIndex === 'function';\n  if (\n    !clientHasSFFV &&\n    !clientHasInitIndex &&\n    typeof this.client.search !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(\n    facet,\n    query,\n    maxFacetHits,\n    state\n  );\n\n  this._currentNbQueries++;\n  // eslint-disable-next-line consistent-this\n  var self = this;\n  var searchForFacetValuesPromise;\n  // newer algoliasearch ^3.27.1 - ~4.0.0\n  if (clientHasSFFV) {\n    searchForFacetValuesPromise = this.client.searchForFacetValues([\n      { indexName: state.index, params: algoliaQuery },\n    ]);\n    // algoliasearch < 3.27.1\n  } else if (clientHasInitIndex) {\n    searchForFacetValuesPromise = this.client\n      .initIndex(state.index)\n      .searchForFacetValues(algoliaQuery);\n    // algoliasearch ~5.0.0\n  } else {\n    // @MAJOR only use client.search\n    delete algoliaQuery.facetName;\n    searchForFacetValuesPromise = this.client\n      .search([\n        {\n          type: 'facet',\n          facet: facet,\n          indexName: state.index,\n          params: algoliaQuery,\n        },\n      ])\n      .then(function processResponse(response) {\n        return response.results[0];\n      });\n  }\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query,\n  });\n\n  return searchForFacetValuesPromise.then(\n    function addIsRefined(content) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n      content = Array.isArray(content) ? content[0] : content;\n\n      content.facetHits.forEach(function (f) {\n        f.escapedValue = escapeFacetValue(f.value);\n        f.isRefined = isDisjunctive\n          ? state.isDisjunctiveFacetRefined(facet, f.escapedValue)\n          : state.isFacetRefined(facet, f.escapedValue);\n      });\n\n      return content;\n    },\n    function (e) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n      throw e;\n    }\n  );\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (\n  facet,\n  value\n) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (\n  facet,\n  path\n) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, path),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (\n  attribute,\n  operator,\n  value\n) {\n  this._change({\n    state: this.state\n      .resetPage()\n      .addNumericRefinement(attribute, operator, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (\n  attribute,\n  operator,\n  value\n) {\n  this._change({\n    state: this.state\n      .resetPage()\n      .removeNumericRefinement(attribute, operator, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (\n  facet,\n  value\n) {\n  this._change({\n    state: this.state\n      .resetPage()\n      .removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (\n  facet\n) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n * @param {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @chainable\n * @fires change\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false,\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false,\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent =\n  function (newState) {\n    this.state = new SearchParameters(newState);\n    return this;\n  };\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean} true if the tag is currently refined\n */\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n/**\n * Get the name of the currently used index.\n * @return {string} name of the index\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive',\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude',\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjunctiveRefinements =\n      this.state.getDisjunctiveRefinements(facetName);\n\n    disjunctiveRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive',\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric',\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (\n  attribute,\n  operator\n) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (\n  facetName\n) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @param {object} options options for the query\n * @param {boolean} [options.onlyWithDerivedHelpers=false] if true, only the derived helpers will be queried\n * @return {undefined} does not return anything\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this,\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults,\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = derivedState.index\n      ? requestBuilder._getQueries(derivedState.index, derivedState)\n      : [];\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper,\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults,\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  if (!queries.length) {\n    return Promise.resolve({ results: [] }).then(\n      this._dispatchAlgoliaResponse.bind(this, states, queryId)\n    );\n  }\n\n  try {\n    this.client\n      .search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error,\n    });\n  }\n\n  return undefined;\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>} states state used to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (\n  states,\n  queryId,\n  content\n) {\n  // @TODO remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    if (!state.index) {\n      helper.emit('result', {\n        results: null,\n        state: state,\n      });\n      return;\n    }\n\n    helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: helper.lastResults,\n      state: state,\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (\n  queryId,\n  error\n) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error,\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (\n  query,\n  facetFilters,\n  numericFilters,\n  tagFilters\n) {\n  return (\n    query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0\n  );\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean} true if there are refinements on this attribute\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return (\n    this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0\n  );\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset,\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n */\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  if (this.client.clearCache) this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n */\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch} the currently used client\n */\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper} a new DerivedHelper\n */\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @param  {DerivedHelper} derivedHelper the derived helper to detach\n * @return {undefined} nothing is returned\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns {any} the escaped facet value or the value if it was not a string\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns {any} the unescaped facet value or the value if it was not a string\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return value.replace(/^\\\\-/, '-');\n}\n\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue,\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(\n        defaultInstructions,\n        function (defaultInstruction) {\n          return defaultInstruction[0] === sortInstruction[0];\n        }\n      );\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    },\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (var key in source) {\n    if (\n      !Object.prototype.hasOwnProperty.call(source, key) ||\n      key === '__proto__' ||\n      key === 'constructor'\n    ) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (\n      isObjectOrArrayOrFunction(targetVal) &&\n      isObjectOrArrayOrFunction(sourceVal)\n    ) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} target The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    // eslint-disable-next-line no-continue\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n * @return {Array<object>} sorted collection\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value,\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error(\n    'The value should be a number, a parsable string or an array of those.'\n  );\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nfunction sortObject(obj) {\n  return Object.keys(obj)\n    .sort()\n    .reduce(function (acc, curr) {\n      acc[curr] = obj[curr];\n      return acc;\n    }, {});\n}\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @param  {string} index The name of the index\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state),\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(\n          state,\n          refinedFacet\n        ),\n      });\n    });\n\n    // More to get the parent levels of the hierarchical facets when refined\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      // If we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get all parent values\n      if (\n        currentRefinement.length > 0 &&\n        currentRefinement[0].split(separator).length > 1\n      ) {\n        // We generate a map of the filters we will use for our facet values queries\n        var filtersMap = currentRefinement[0]\n          .split(separator)\n          .slice(0, -1)\n          .reduce(function createFiltersMap(map, segment, level) {\n            return map.concat({\n              attribute: hierarchicalFacet.attributes[level],\n              value:\n                level === 0\n                  ? segment\n                  : [map[map.length - 1].value, segment].join(separator),\n            });\n          }, []);\n\n        filtersMap.forEach(function (filter, level) {\n          var params = requestBuilder._getDisjunctiveFacetSearchParams(\n            state,\n            filter.attribute,\n            level === 0\n          );\n\n          // Keep facet filters unrelated to current hierarchical attributes\n          function hasHierarchicalFacetFilter(value) {\n            return hierarchicalFacet.attributes.some(function (attribute) {\n              return attribute === value.split(':')[0];\n            });\n          }\n\n          var filteredFacetFilters = (params.facetFilters || []).reduce(\n            function (acc, facetFilter) {\n              if (Array.isArray(facetFilter)) {\n                var filtered = facetFilter.filter(function (filterValue) {\n                  return !hasHierarchicalFacetFilter(filterValue);\n                });\n\n                if (filtered.length > 0) {\n                  acc.push(filtered);\n                }\n              }\n\n              if (\n                typeof facetFilter === 'string' &&\n                !hasHierarchicalFacetFilter(facetFilter)\n              ) {\n                acc.push(facetFilter);\n              }\n\n              return acc;\n            },\n            []\n          );\n\n          var parent = filtersMap[level - 1];\n          if (level > 0) {\n            params.facetFilters = filteredFacetFilters.concat(\n              parent.attribute + ':' + parent.value\n            );\n          } else {\n            params.facetFilters =\n              filteredFacetFilters.length > 0\n                ? filteredFacetFilters\n                : undefined;\n          }\n\n          queries.push({ indexName: index, params: params });\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @return {object.<string, any>} The search parameters for hits\n   */\n  _getHitsSearchParams: function (state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state))\n      .sort();\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets.indexOf('*') > -1 ? ['*'] : facets,\n      tagFilters: tagFilters,\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object} The search parameters for a disjunctive facet\n   */\n  _getDisjunctiveFacetSearchParams: function (\n    state,\n    facet,\n    hierarchicalRootLevel\n  ) {\n    var facetFilters = requestBuilder._getFacetFilters(\n      state,\n      facet,\n      hierarchicalRootLevel\n    );\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 0,\n      page: 0,\n      analytics: false,\n      clickAnalytics: false,\n    };\n\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets =\n        requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n          state,\n          hierarchicalFacet,\n          hierarchicalRootLevel\n        );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {SearchParameters} state the state from which to get the filters\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function (state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending on which format is used, either tagFilters or tagRefinements\n   * @private\n   * @param {SearchParameters} state the state from which to get the filters\n   * @return {string} Tag filters in a single string\n   */\n  _getTagFilters: function (state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @param  {boolean} [hierarchicalRootLevel] ?? FIXME\n   * @return {array.<string>} The facet filters in the algolia format\n   */\n  _getFacetFilters: function (state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = facetsRefinements[facetName] || [];\n        facetValues.sort().forEach(function (facetValue) {\n          facetFilters.push(facetName + ':' + facetValue);\n        });\n      });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = facetsExcludes[facetName] || [];\n        facetValues.sort().forEach(function (facetValue) {\n          facetFilters.push(facetName + ':-' + facetValue);\n        });\n      });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n        if (facetName === facet || !facetValues || facetValues.length === 0) {\n          return;\n        }\n        var orFilters = [];\n\n        facetValues.sort().forEach(function (facetValue) {\n          orFilters.push(facetName + ':' + facetValue);\n        });\n\n        facetFilters.push(orFilters);\n      });\n\n    var hierarchicalFacetsRefinements =\n      state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n        var facetValue = facetValues[0];\n\n        if (facetValue === undefined) {\n          return;\n        }\n\n        var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n        var attributeToRefine;\n        var attributesIndex;\n\n        // we ask for parent facet values only when the `facet` is the current hierarchical facet\n        if (facet === facetName) {\n          // if we are at the root level already, no need to ask for facet values, we get them from\n          // the hits query\n          if (\n            facetValue.indexOf(separator) === -1 ||\n            (!rootPath && hierarchicalRootLevel === true) ||\n            (rootPath &&\n              rootPath.split(separator).length ===\n                facetValue.split(separator).length)\n          ) {\n            return;\n          }\n\n          if (!rootPath) {\n            attributesIndex = facetValue.split(separator).length - 2;\n            facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n          } else {\n            attributesIndex = rootPath.split(separator).length - 1;\n            facetValue = rootPath;\n          }\n\n          attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n        } else {\n          attributesIndex = facetValue.split(separator).length - 1;\n\n          attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n        }\n\n        if (attributeToRefine) {\n          facetFilters.push([attributeToRefine + ':' + facetValue]);\n        }\n      });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function (state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(\n        allAttributes,\n        hierarchicalFacet\n      ) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(\n          hierarchicalFacet.name\n        )[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      },\n      out\n    );\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function (\n    state,\n    hierarchicalFacet,\n    rootLevel\n  ) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement =\n      state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function (facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName)\n      ? state.clearRefinements(facetName)\n      : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName,\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return sortObject(\n      merge(\n        {},\n        requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n        searchForFacetSearchParameters\n      )\n    );\n  },\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\nmodule.exports = '3.14.2';\n","/*! algoliasearch-lite.umd.js | 4.20.0 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).algoliasearch=t()}(this,(function(){\"use strict\";function e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function t(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function r(r){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(t){e(r,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(o,e))}))}return r}function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var u,i=e[Symbol.iterator]();!(n=(u=i.next()).done)&&(r.push(u.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==i.return||i.return()}finally{if(o)throw a}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function a(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function u(e){var t,r=\"algoliasearch-client-js-\".concat(e.key),n=function(){return void 0===t&&(t=e.localStorage||window.localStorage),t},a=function(){return JSON.parse(n().getItem(r)||\"{}\")},u=function(e){n().setItem(r,JSON.stringify(e))},i=function(){var t=e.timeToLive?1e3*e.timeToLive:null,r=a(),n=Object.fromEntries(Object.entries(r).filter((function(e){return void 0!==o(e,2)[1].timestamp})));if(u(n),t){var i=Object.fromEntries(Object.entries(n).filter((function(e){var r=o(e,2)[1],n=(new Date).getTime();return!(r.timestamp+t<n)})));u(i)}};return{get:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return Promise.resolve().then((function(){i();var t=JSON.stringify(e);return a()[t]})).then((function(e){return Promise.all([e?e.value:t(),void 0!==e])})).then((function(e){var t=o(e,2),n=t[0],a=t[1];return Promise.all([n,a||r.miss(n)])})).then((function(e){return o(e,1)[0]}))},set:function(e,t){return Promise.resolve().then((function(){var o=a();return o[JSON.stringify(e)]={timestamp:(new Date).getTime(),value:t},n().setItem(r,JSON.stringify(o)),t}))},delete:function(e){return Promise.resolve().then((function(){var t=a();delete t[JSON.stringify(e)],n().setItem(r,JSON.stringify(t))}))},clear:function(){return Promise.resolve().then((function(){n().removeItem(r)}))}}}function i(e){var t=a(e.caches),r=t.shift();return void 0===r?{get:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},n=t();return n.then((function(e){return Promise.all([e,r.miss(e)])})).then((function(e){return o(e,1)[0]}))},set:function(e,t){return Promise.resolve(t)},delete:function(e){return Promise.resolve()},clear:function(){return Promise.resolve()}}:{get:function(e,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return r.get(e,n,o).catch((function(){return i({caches:t}).get(e,n,o)}))},set:function(e,n){return r.set(e,n).catch((function(){return i({caches:t}).set(e,n)}))},delete:function(e){return r.delete(e).catch((function(){return i({caches:t}).delete(e)}))},clear:function(){return r.clear().catch((function(){return i({caches:t}).clear()}))}}}function s(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{serializable:!0},t={};return{get:function(r,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},a=JSON.stringify(r);if(a in t)return Promise.resolve(e.serializable?JSON.parse(t[a]):t[a]);var u=n(),i=o&&o.miss||function(){return Promise.resolve()};return u.then((function(e){return i(e)})).then((function(){return u}))},set:function(r,n){return t[JSON.stringify(r)]=e.serializable?JSON.stringify(n):n,Promise.resolve(n)},delete:function(e){return delete t[JSON.stringify(e)],Promise.resolve()},clear:function(){return t={},Promise.resolve()}}}function c(e){for(var t=e.length-1;t>0;t--){var r=Math.floor(Math.random()*(t+1)),n=e[t];e[t]=e[r],e[r]=n}return e}function l(e,t){return t?(Object.keys(t).forEach((function(r){e[r]=t[r](e)})),e):e}function f(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var o=0;return e.replace(/%s/g,(function(){return encodeURIComponent(r[o++])}))}var m={WithinQueryParameters:0,WithinHeaders:1};function h(e,t){var r=e||{},n=r.data||{};return Object.keys(r).forEach((function(e){-1===[\"timeout\",\"headers\",\"queryParameters\",\"data\",\"cacheable\"].indexOf(e)&&(n[e]=r[e])})),{data:Object.entries(n).length>0?n:void 0,timeout:r.timeout||t,headers:r.headers||{},queryParameters:r.queryParameters||{},cacheable:r.cacheable}}var d={Read:1,Write:2,Any:3},p=1,v=2,g=3;function y(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:p;return r(r({},e),{},{status:t,lastUpdate:Date.now()})}function b(e){return\"string\"==typeof e?{protocol:\"https\",url:e,accept:d.Any}:{protocol:e.protocol||\"https\",url:e.url,accept:e.accept||d.Any}}var O=\"GET\",P=\"POST\";function q(e,t){return Promise.all(t.map((function(t){return e.get(t,(function(){return Promise.resolve(y(t))}))}))).then((function(e){var r=e.filter((function(e){return function(e){return e.status===p||Date.now()-e.lastUpdate>12e4}(e)})),n=e.filter((function(e){return function(e){return e.status===g&&Date.now()-e.lastUpdate<=12e4}(e)})),o=[].concat(a(r),a(n));return{getTimeout:function(e,t){return(0===n.length&&0===e?1:n.length+3+e)*t},statelessHosts:o.length>0?o.map((function(e){return b(e)})):t}}))}function j(e,t,n,o){var u=[],i=function(e,t){if(e.method===O||void 0===e.data&&void 0===t.data)return;var n=Array.isArray(e.data)?e.data:r(r({},e.data),t.data);return JSON.stringify(n)}(n,o),s=function(e,t){var n=r(r({},e.headers),t.headers),o={};return Object.keys(n).forEach((function(e){var t=n[e];o[e.toLowerCase()]=t})),o}(e,o),c=n.method,l=n.method!==O?{}:r(r({},n.data),o.data),f=r(r(r({\"x-algolia-agent\":e.userAgent.value},e.queryParameters),l),o.queryParameters),m=0,h=function t(r,a){var l=r.pop();if(void 0===l)throw{name:\"RetryError\",message:\"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",transporterStackTrace:A(u)};var h={data:i,headers:s,method:c,url:S(l,n.path,f),connectTimeout:a(m,e.timeouts.connect),responseTimeout:a(m,o.timeout)},d=function(e){var t={request:h,response:e,host:l,triesLeft:r.length};return u.push(t),t},p={onSuccess:function(e){return function(e){try{return JSON.parse(e.content)}catch(t){throw function(e,t){return{name:\"DeserializationError\",message:e,response:t}}(t.message,e)}}(e)},onRetry:function(n){var o=d(n);return n.isTimedOut&&m++,Promise.all([e.logger.info(\"Retryable failure\",N(o)),e.hostsCache.set(l,y(l,n.isTimedOut?g:v))]).then((function(){return t(r,a)}))},onFail:function(e){throw d(e),function(e,t){var r=e.content,n=e.status,o=r;try{o=JSON.parse(r).message}catch(e){}return function(e,t,r){return{name:\"ApiError\",message:e,status:t,transporterStackTrace:r}}(o,n,t)}(e,A(u))}};return e.requester.send(h).then((function(e){return function(e,t){return function(e){var t=e.status;return e.isTimedOut||function(e){var t=e.isTimedOut,r=e.status;return!t&&0==~~r}(e)||2!=~~(t/100)&&4!=~~(t/100)}(e)?t.onRetry(e):2==~~(e.status/100)?t.onSuccess(e):t.onFail(e)}(e,p)}))};return q(e.hostsCache,t).then((function(e){return h(a(e.statelessHosts).reverse(),e.getTimeout)}))}function w(e){var t={value:\"Algolia for JavaScript (\".concat(e,\")\"),add:function(e){var r=\"; \".concat(e.segment).concat(void 0!==e.version?\" (\".concat(e.version,\")\"):\"\");return-1===t.value.indexOf(r)&&(t.value=\"\".concat(t.value).concat(r)),t}};return t}function S(e,t,r){var n=T(r),o=\"\".concat(e.protocol,\"://\").concat(e.url,\"/\").concat(\"/\"===t.charAt(0)?t.substr(1):t);return n.length&&(o+=\"?\".concat(n)),o}function T(e){return Object.keys(e).map((function(t){return f(\"%s=%s\",t,(r=e[t],\"[object Object]\"===Object.prototype.toString.call(r)||\"[object Array]\"===Object.prototype.toString.call(r)?JSON.stringify(e[t]):e[t]));var r})).join(\"&\")}function A(e){return e.map((function(e){return N(e)}))}function N(e){var t=e.request.headers[\"x-algolia-api-key\"]?{\"x-algolia-api-key\":\"*****\"}:{};return r(r({},e),{},{request:r(r({},e.request),{},{headers:r(r({},e.request.headers),t)})})}var x=function(e){var t=e.appId,n=function(e,t,r){var n={\"x-algolia-api-key\":r,\"x-algolia-application-id\":t};return{headers:function(){return e===m.WithinHeaders?n:{}},queryParameters:function(){return e===m.WithinQueryParameters?n:{}}}}(void 0!==e.authMode?e.authMode:m.WithinHeaders,t,e.apiKey),a=function(e){var t=e.hostsCache,r=e.logger,n=e.requester,a=e.requestsCache,u=e.responsesCache,i=e.timeouts,s=e.userAgent,c=e.hosts,l=e.queryParameters,f={hostsCache:t,logger:r,requester:n,requestsCache:a,responsesCache:u,timeouts:i,userAgent:s,headers:e.headers,queryParameters:l,hosts:c.map((function(e){return b(e)})),read:function(e,t){var r=h(t,f.timeouts.read),n=function(){return j(f,f.hosts.filter((function(e){return 0!=(e.accept&d.Read)})),e,r)};if(!0!==(void 0!==r.cacheable?r.cacheable:e.cacheable))return n();var a={request:e,mappedRequestOptions:r,transporter:{queryParameters:f.queryParameters,headers:f.headers}};return f.responsesCache.get(a,(function(){return f.requestsCache.get(a,(function(){return f.requestsCache.set(a,n()).then((function(e){return Promise.all([f.requestsCache.delete(a),e])}),(function(e){return Promise.all([f.requestsCache.delete(a),Promise.reject(e)])})).then((function(e){var t=o(e,2);t[0];return t[1]}))}))}),{miss:function(e){return f.responsesCache.set(a,e)}})},write:function(e,t){return j(f,f.hosts.filter((function(e){return 0!=(e.accept&d.Write)})),e,h(t,f.timeouts.write))}};return f}(r(r({hosts:[{url:\"\".concat(t,\"-dsn.algolia.net\"),accept:d.Read},{url:\"\".concat(t,\".algolia.net\"),accept:d.Write}].concat(c([{url:\"\".concat(t,\"-1.algolianet.com\")},{url:\"\".concat(t,\"-2.algolianet.com\")},{url:\"\".concat(t,\"-3.algolianet.com\")}]))},e),{},{headers:r(r(r({},n.headers()),{\"content-type\":\"application/x-www-form-urlencoded\"}),e.headers),queryParameters:r(r({},n.queryParameters()),e.queryParameters)}));return l({transporter:a,appId:t,addAlgoliaAgent:function(e,t){a.userAgent.add({segment:e,version:t})},clearCache:function(){return Promise.all([a.requestsCache.clear(),a.responsesCache.clear()]).then((function(){}))}},e.methods)},C=function(e){return function(t,r){return t.method===O?e.transporter.read(t,r):e.transporter.write(t,r)}},E=function(e){return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={transporter:e.transporter,appId:e.appId,indexName:t};return l(n,r.methods)}},J=function(e){return function(t,n){var o=t.map((function(e){return r(r({},e),{},{params:T(e.params||{})})}));return e.transporter.read({method:P,path:\"1/indexes/*/queries\",data:{requests:o},cacheable:!0},n)}},k=function(e){return function(t,o){return Promise.all(t.map((function(t){var a=t.params,u=a.facetName,i=a.facetQuery,s=n(a,[\"facetName\",\"facetQuery\"]);return E(e)(t.indexName,{methods:{searchForFacetValues:R}}).searchForFacetValues(u,i,r(r({},o),s))})))}},I=function(e){return function(t,r,n){return e.transporter.read({method:P,path:f(\"1/answers/%s/prediction\",e.indexName),data:{query:t,queryLanguages:r},cacheable:!0},n)}},F=function(e){return function(t,r){return e.transporter.read({method:P,path:f(\"1/indexes/%s/query\",e.indexName),data:{query:t},cacheable:!0},r)}},R=function(e){return function(t,r,n){return e.transporter.read({method:P,path:f(\"1/indexes/%s/facets/%s/query\",e.indexName,t),data:{facetQuery:r},cacheable:!0},n)}},D=1,W=2,H=3;function Q(e,t,n){var o,a={appId:e,apiKey:t,timeouts:{connect:1,read:2,write:30},requester:{send:function(e){return new Promise((function(t){var r=new XMLHttpRequest;r.open(e.method,e.url,!0),Object.keys(e.headers).forEach((function(t){return r.setRequestHeader(t,e.headers[t])}));var n,o=function(e,n){return setTimeout((function(){r.abort(),t({status:0,content:n,isTimedOut:!0})}),1e3*e)},a=o(e.connectTimeout,\"Connection timeout\");r.onreadystatechange=function(){r.readyState>r.OPENED&&void 0===n&&(clearTimeout(a),n=o(e.responseTimeout,\"Socket timeout\"))},r.onerror=function(){0===r.status&&(clearTimeout(a),clearTimeout(n),t({content:r.responseText||\"Network request failed\",status:r.status,isTimedOut:!1}))},r.onload=function(){clearTimeout(a),clearTimeout(n),t({content:r.responseText,status:r.status,isTimedOut:!1})},r.send(e.data)}))}},logger:(o=H,{debug:function(e,t){return D>=o&&console.debug(e,t),Promise.resolve()},info:function(e,t){return W>=o&&console.info(e,t),Promise.resolve()},error:function(e,t){return console.error(e,t),Promise.resolve()}}),responsesCache:s(),requestsCache:s({serializable:!1}),hostsCache:i({caches:[u({key:\"\".concat(\"4.20.0\",\"-\").concat(e)}),s()]}),userAgent:w(\"4.20.0\").add({segment:\"Browser\",version:\"lite\"}),authMode:m.WithinQueryParameters};return x(r(r(r({},a),n),{},{methods:{search:J,searchForFacetValues:k,multipleQueries:J,multipleSearchForFacetValues:k,customRequest:C,initIndex:function(e){return function(t){return E(e)(t,{methods:{search:F,searchForFacetValues:R,findAnswers:I}})}}}}))}return Q.version=\"4.20.0\",Q}));\n"],"names":["OrderedPluralForms","sortPluralForms","pluralForms","filter","pf","includes","EnglishPluralForms","locale","select","count","useLocalePluralForms","currentLocale","useDocusaurusContext","i18n","useMemo","pluralRules","Intl","PluralRules","resolvedOptions","pluralCategories","err","console","error","message","usePluralForm","localePluralForm","selectMessage","pluralMessages","localePluralForms","parts","split","length","join","pluralForm","pluralFormIndex","indexOf","Math","min","selectPluralMessage","SearchVersionSelectList","_ref2","docsSearchVersionsHelpers","versionedPluginEntries","Object","entries","allDocsData","_ref3","versions","React","className","clsx","styles","searchVersionColumn","map","_ref4","pluginId","docsData","labelPrefix","key","onChange","e","setSearchVersion","target","value","defaultValue","searchVersions","searchVersionInput","version","i","label","name","SearchPageContent","_useState","setSearchVersions","versioningEnabled","_useAlgoliaThemeConfi2","useAlgoliaThemeConfig","algolia","appId","apiKey","indexName","processSearchResultUrl","useSearchResultUrlProcessor","documentsFoundPlural","translate","id","description","useAllDocsData","useState","reduce","acc","_ref","_Object$assign","pluginData","assign","values","some","searchVersion","s","_Object$assign2","_useSearchQueryString","useSearchQueryString","searchQuery","setSearchQuery","initialSearchResultState","items","query","totalResults","totalPages","lastPage","hasMore","loading","_useReducer","useReducer","prevState","data","type","concat","searchResultState","searchResultStateDispatcher","algoliaClient","algoliaSearch","algoliaHelper","algoliaSearchHelper","hitsPerPage","advancedSyntax","disjunctiveFacets","on","_ref5","_ref5$results","results","hits","page","nbHits","nbPages","Array","isArray","sanitizeValue","replace","_ref6","url","hierarchy","_highlightResult","_ref6$_snippetResult","_snippetResult","snippet","titles","keys","title","pop","summary","content","breadcrumbs","_useState2","loaderRef","setLoaderRef","prevY","useRef","observer","ExecutionEnvironment","canUseIntersectionObserver","IntersectionObserver","_entries$","isIntersecting","currentY","boundingClientRect","y","current","threshold","getTitle","makeSearch","useEvent","addDisjunctiveFacetRefinement","forEach","_ref7","setQuery","setPage","search","useEffect","currentObserver","observe","unobserve","setTimeout","Layout","Head","useTitleFormatter","property","onSubmit","preventDefault","searchQueryColumn","searchQueryInput","placeholder","autoComplete","autoFocus","searchResultsColumn","searchLogoColumn","rel","href","viewBox","algoliaLogo","fill","algoliaLogoPathFill","d","_ref8","searchResultItem","searchResultItemHeading","Link","to","dangerouslySetInnerHTML","__html","searchResultItemPath","html","index","searchResultItemSummary","Translate","loadingSpinner","loader","ref","SearchPage","HtmlClassNameProvider","EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","module","exports","prototype","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","emit","er","handler","len","args","listeners","arguments","Error","context","call","slice","apply","addListener","listener","m","newListener","push","warned","trace","once","fired","g","removeListener","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","AlgoliaSearchHelper","SearchParameters","SearchResults","algoliasearchHelper","client","opts","DerivedHelper","mainHelper","fn","main","lastResults","inherits","detach","detachDerivedHelper","getModifiedState","parameters","defaultsPure","objectHasKeys","omit","lib","addRefinement","refinementList","attribute","isRefined","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","v","f","toggleRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","Boolean","refinementValueAsString","find","intersection","merge","valToNumber","isValidUserToken","RefinementList","isEqualNumericRefinement","a","b","every","el","newParameters","params","_parseNumbers","userToken","warn","facets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","self","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","k","parsedValue","parseFloat","insideBoundingBox","geoRect","operators","operator","parsedValues","vPrime","make","instance","facet","rootPath","currentRefinement","getHierarchicalRefinement","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","tagFilters","numericFilters","constructor","patch","_clearNumericRefinements","setQueryParameters","clearTags","setIndex","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","val","isNumericRefined","getConjunctiveRefinements","facetName","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","number","paramValue","op","getNumericRefinements","getNumericRefinement","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","addExcludeRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","t","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","path","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","array","searchedValue","isAttributeValueDefined","currentValue","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","getRefinedHierarchicalFacets","sort","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","resetPage","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","part","trim","toString","JSON","stringify","state","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","level","subtree","picked","facetValue","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","escapedValue","escapeFacetValue","format","unescapeFacetValue","generateHierarchicalTree","fv","compact","findIndex","formatSort","getIndices","attributes","indices","idx","assignFacetStats","dest","facetStats","stats","options","mainSubResponse","_rawResults","processingTimeMS","sum","result","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","attributeIndex","dataFromMainRequest","refinedFacet","defaultData","root","excludes","_state","extractNormalizedFacetValues","predicate","isExcluded","hierarchicalFacetValues","currentRefinementSplit","unshift","setIsRefined","item","depth","child","recSort","sortFn","node","names","children","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","attributeName","resultsFacets","getFacetByName","DEFAULT_SORT","getFacetValues","facetValues","facetOrdering","renderingContent","getFacetOrdering","orderedFacets","remainingFacets","reverseOrder","order","ordering","sortRemainingBy","sortViaFacetOrdering","vanillaSortFn","getFacetStats","getRefinements","res","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","requestBuilder","addAlgoliaAgent","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","_getHitsSearchParams","searchOnce","cb","tempState","queries","_getQueries","then","_originalResponse","catch","findAnswers","derivedHelper","Promise","resolve","derivedState","attributesForPrediction","errorMessage","initIndex","queryLanguages","searchForFacetValues","maxFacetHits","userState","clientHasSFFV","clientHasInitIndex","isDisjunctive","algoliaQuery","getSearchForFacetQuery","searchForFacetValuesPromise","response","facetHits","q","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","r","states","mainQueries","queriesCount","helper","derivedQueries","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","specificResults","containsRefinement","facetFilters","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","pos","hasPendingRequests","reduceRight","source","String","comparator","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","ctor","superCtor","create","enumerable","writable","configurable","arr1","arr2","isObjectOrArrayOrFunction","_merge","hasOwnProperty","sourceVal","targetVal","l","obj","excluded","sourceKeys","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee","object","sortObject","curr","_getDisjunctiveFacetSearchParams","filtersMap","segment","hasHierarchicalFacetFilter","filteredFacetFilters","facetFilter","filtered","filterValue","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","_getNumericFilters","_getTagFilters","additionalParams","hierarchicalRootLevel","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributeToRefine","attributesIndex","allAttributes","hierarchicalRefinement","newAttributes","rootLevel","parentLevel","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","test","defineProperty","getOwnPropertySymbols","getOwnPropertyDescriptor","o","getOwnPropertyDescriptors","defineProperties","propertyIsEnumerable","Symbol","iterator","u","next","done","return","from","localStorage","window","parse","getItem","setItem","timeToLive","fromEntries","timestamp","Date","getTime","get","miss","all","set","delete","clear","removeItem","caches","shift","serializable","c","floor","random","encodeURIComponent","WithinQueryParameters","WithinHeaders","h","timeout","headers","queryParameters","cacheable","Read","Write","Any","p","status","lastUpdate","now","protocol","accept","O","P","getTimeout","statelessHosts","j","method","toLowerCase","userAgent","transporterStackTrace","A","S","connectTimeout","timeouts","connect","responseTimeout","request","host","triesLeft","onSuccess","onRetry","isTimedOut","logger","info","N","hostsCache","onFail","requester","send","reverse","w","add","T","charAt","substr","x","authMode","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","methods","C","E","J","requests","R","I","F","D","W","H","Q","XMLHttpRequest","open","setRequestHeader","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","multipleQueries","multipleSearchForFacetValues","customRequest"],"sourceRoot":""}